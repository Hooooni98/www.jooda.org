[{"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/index.tsx":"1","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/reportWebVitals.ts":"2","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/App.tsx":"3","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/redux/reducer/index.ts":"4","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/main-pages/index.tsx":"5","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/error-pages/index.tsx":"6","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/redux/reducer/authorization_reducer.ts":"7","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/index.tsx":"8","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-login/index.tsx":"9","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/redux/actions/types.ts":"10","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/redux/actions/authorization_action.ts":"11","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/api/index.tsx":"12","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-notification/index.tsx":"13","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-information/index.tsx":"14","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-schedule/index.tsx":"15","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-weekly/index.tsx":"16","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-notification/list/index.tsx":"17","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-notification/regist/index.tsx":"18","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-information/address/index.tsx":"19","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-information/default/index.tsx":"20","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-information/pastor/index.tsx":"21","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-information/history/index.tsx":"22","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-weekly/list/index.tsx":"23","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-weekly/regist/index.tsx":"24","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/api/admin-information/index.tsx":"25","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/api/admin-notification/index.tsx":"26","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/api/admin-weekly/index.tsx":"27","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/api/admin-pastor/index.tsx":"28","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-member/index.tsx":"29","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-weekly/list/patch-modal/modal.tsx":"30","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-notification/list/patch-modal/modal.tsx":"31","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-information/pastor/patch-modal/order/modal.tsx":"32","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/hooks/usePage.ts":"33","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-information/pastor/patch-modal/info/modal.tsx":"34","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-information/pastor/create-modal/modal.tsx":"35","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-information/pastor/pastorBox.tsx":"36","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-information/history/create-modal/modal.tsx":"37","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-information/history/patch-modal/modal.tsx":"38","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/api/admin-history/index.tsx":"39","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/component/page/index.tsx":"40","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-information/history/historyInputBox.tsx":"41","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-member/member/index.tsx":"42","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/hooks/useDebounce.ts":"43","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/api/admin-member/index.tsx":"44","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-member/memberHeader.tsx":"45","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-member/memberBox.tsx":"46","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-member/modal.tsx":"47","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-member/confirm/index.tsx":"48","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/component/empty_text/index.tsx":"49","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/component/styledComponent/index.tsx":"50","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/component/box/info.tsx":"51","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-schedule/schedule/index.tsx":"52","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/api/admin-schedule/index.tsx":"53","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-schedule/schedule/list/index.tsx":"54","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-schedule/schedule/regist/index.tsx":"55","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/hooks/useFormatTime.ts":"56","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-schedule/calendar/index.tsx":"57","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-schedule/calendar/view/index.tsx":"58","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/hooks/useMonth.ts":"59","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-schedule/calendar/view/week.tsx":"60","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/hooks/useWeek.ts":"61","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-schedule/calendar/regist/index.tsx":"62","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/hooks/useFormatDate.ts":"63","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/api/admin-calendar/index.tsx":"64","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/hooks/useToday.ts":"65","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-schedule/schedule/list/patch-modal/index.tsx":"66","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-schedule/calendar/view/patch-modal/modal.tsx":"67","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/policy/privacy.tsx":"68","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/policy/location.tsx":"69","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/policy/terms.tsx":"70","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/main-pages/header.tsx":"71","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/policy/termBox.tsx":"72","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/policy/text.ts":"73","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/main-pages/footer.tsx":"74","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/main-pages/home-pages/page1.tsx":"75","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/main-pages/home-pages/page3.tsx":"76","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/main-pages/home-pages/page4.tsx":"77","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/main-pages/home-pages/page5.tsx":"78","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/main-pages/home-pages/page2.tsx":"79","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-information/pastor/pastorBoxOrder.tsx":"80","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/component/toast/index.tsx":"81","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/error-pages/useErrorNavigator.ts":"82"},{"size":809,"mtime":1682315839306,"results":"83","hashOfConfig":"84"},{"size":425,"mtime":1682315684793,"results":"85","hashOfConfig":"84"},{"size":1401,"mtime":1683613887115,"results":"86","hashOfConfig":"84"},{"size":312,"mtime":1682315839307,"results":"87","hashOfConfig":"84"},{"size":793,"mtime":1683613910231,"results":"88","hashOfConfig":"84"},{"size":2479,"mtime":1683613872323,"results":"89","hashOfConfig":"84"},{"size":705,"mtime":1682315839307,"results":"90","hashOfConfig":"84"},{"size":9237,"mtime":1683613910229,"results":"91","hashOfConfig":"84"},{"size":5930,"mtime":1683613910223,"results":"92","hashOfConfig":"84"},{"size":64,"mtime":1682315839307,"results":"93","hashOfConfig":"84"},{"size":163,"mtime":1682315839306,"results":"94","hashOfConfig":"84"},{"size":930,"mtime":1683634962875,"results":"95","hashOfConfig":"84"},{"size":544,"mtime":1682881060185,"results":"96","hashOfConfig":"84"},{"size":567,"mtime":1682881060180,"results":"97","hashOfConfig":"84"},{"size":403,"mtime":1682972363913,"results":"98","hashOfConfig":"84"},{"size":611,"mtime":1683512968312,"results":"99","hashOfConfig":"84"},{"size":4827,"mtime":1683613910226,"results":"100","hashOfConfig":"84"},{"size":8856,"mtime":1683613910226,"results":"101","hashOfConfig":"84"},{"size":5911,"mtime":1683613910223,"results":"102","hashOfConfig":"84"},{"size":14388,"mtime":1683613910224,"results":"103","hashOfConfig":"84"},{"size":9069,"mtime":1683630535169,"results":"104","hashOfConfig":"84"},{"size":7488,"mtime":1683639608877,"results":"105","hashOfConfig":"84"},{"size":5385,"mtime":1683613910228,"results":"106","hashOfConfig":"84"},{"size":10114,"mtime":1683613910229,"results":"107","hashOfConfig":"84"},{"size":2494,"mtime":1683601114410,"results":"108","hashOfConfig":"84"},{"size":2133,"mtime":1683607304117,"results":"109","hashOfConfig":"84"},{"size":2175,"mtime":1683607979396,"results":"110","hashOfConfig":"84"},{"size":2787,"mtime":1683607562905,"results":"111","hashOfConfig":"84"},{"size":551,"mtime":1683512859822,"results":"112","hashOfConfig":"84"},{"size":10026,"mtime":1683635130554,"results":"113","hashOfConfig":"84"},{"size":7924,"mtime":1683613910226,"results":"114","hashOfConfig":"84"},{"size":6698,"mtime":1683630850593,"results":"115","hashOfConfig":"84"},{"size":1960,"mtime":1682894346542,"results":"116","hashOfConfig":"84"},{"size":6680,"mtime":1683613910225,"results":"117","hashOfConfig":"84"},{"size":9557,"mtime":1683618257251,"results":"118","hashOfConfig":"84"},{"size":2540,"mtime":1683631087594,"results":"119","hashOfConfig":"84"},{"size":7845,"mtime":1683618449856,"results":"120","hashOfConfig":"84"},{"size":8254,"mtime":1683639496089,"results":"121","hashOfConfig":"84"},{"size":1866,"mtime":1683639529772,"results":"122","hashOfConfig":"84"},{"size":2520,"mtime":1683613910229,"results":"123","hashOfConfig":"84"},{"size":3007,"mtime":1683638575138,"results":"124","hashOfConfig":"84"},{"size":6658,"mtime":1683640507494,"results":"125","hashOfConfig":"84"},{"size":531,"mtime":1682870431583,"results":"126","hashOfConfig":"84"},{"size":1856,"mtime":1683607211401,"results":"127","hashOfConfig":"84"},{"size":1429,"mtime":1683613910226,"results":"128","hashOfConfig":"84"},{"size":1912,"mtime":1683613910225,"results":"129","hashOfConfig":"84"},{"size":2321,"mtime":1683613910226,"results":"130","hashOfConfig":"84"},{"size":8320,"mtime":1683640544654,"results":"131","hashOfConfig":"84"},{"size":544,"mtime":1683613910229,"results":"132","hashOfConfig":"84"},{"size":3114,"mtime":1683613910229,"results":"133","hashOfConfig":"84"},{"size":797,"mtime":1683613910229,"results":"134","hashOfConfig":"84"},{"size":544,"mtime":1682997530864,"results":"135","hashOfConfig":"84"},{"size":3262,"mtime":1683607859923,"results":"136","hashOfConfig":"84"},{"size":5615,"mtime":1683613910227,"results":"137","hashOfConfig":"84"},{"size":9134,"mtime":1683613910228,"results":"138","hashOfConfig":"84"},{"size":1099,"mtime":1682974390550,"results":"139","hashOfConfig":"84"},{"size":384,"mtime":1682997530862,"results":"140","hashOfConfig":"84"},{"size":3580,"mtime":1683613910227,"results":"141","hashOfConfig":"84"},{"size":1911,"mtime":1682972363915,"results":"142","hashOfConfig":"84"},{"size":4296,"mtime":1683633023628,"results":"143","hashOfConfig":"84"},{"size":5358,"mtime":1682997744759,"results":"144","hashOfConfig":"84"},{"size":5845,"mtime":1683613910226,"results":"145","hashOfConfig":"84"},{"size":1251,"mtime":1683621753635,"results":"146","hashOfConfig":"84"},{"size":2300,"mtime":1683600937612,"results":"147","hashOfConfig":"84"},{"size":309,"mtime":1683084246001,"results":"148","hashOfConfig":"84"},{"size":13432,"mtime":1683637375884,"results":"149","hashOfConfig":"84"},{"size":8289,"mtime":1683613910227,"results":"150","hashOfConfig":"84"},{"size":2846,"mtime":1683613910232,"results":"151","hashOfConfig":"84"},{"size":1904,"mtime":1683613910231,"results":"152","hashOfConfig":"84"},{"size":1911,"mtime":1683613910232,"results":"153","hashOfConfig":"84"},{"size":2410,"mtime":1683613910230,"results":"154","hashOfConfig":"84"},{"size":2376,"mtime":1683613910232,"results":"155","hashOfConfig":"84"},{"size":28932,"mtime":1683530193930,"results":"156","hashOfConfig":"84"},{"size":3901,"mtime":1683613910230,"results":"157","hashOfConfig":"84"},{"size":2787,"mtime":1683618257251,"results":"158","hashOfConfig":"84"},{"size":1956,"mtime":1683613910231,"results":"159","hashOfConfig":"84"},{"size":1939,"mtime":1683613910231,"results":"160","hashOfConfig":"84"},{"size":3292,"mtime":1683618257252,"results":"161","hashOfConfig":"84"},{"size":3814,"mtime":1683613910231,"results":"162","hashOfConfig":"84"},{"size":3132,"mtime":1683631123961,"results":"163","hashOfConfig":"84"},{"size":1473,"mtime":1683613910229,"results":"164","hashOfConfig":"84"},{"size":325,"mtime":1683612150445,"results":"165","hashOfConfig":"84"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},"wuamvg",{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"197"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"169"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"169"},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239"},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243"},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247"},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269"},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273"},{"filePath":"274","messages":"275","suppressedMessages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277"},{"filePath":"278","messages":"279","suppressedMessages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284"},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288"},{"filePath":"289","messages":"290","suppressedMessages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292"},{"filePath":"293","messages":"294","suppressedMessages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296"},{"filePath":"297","messages":"298","suppressedMessages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300"},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","suppressedMessages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","suppressedMessages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310"},{"filePath":"311","messages":"312","suppressedMessages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314"},{"filePath":"315","messages":"316","suppressedMessages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"318","messages":"319","suppressedMessages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","suppressedMessages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324"},{"filePath":"325","messages":"326","suppressedMessages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328"},{"filePath":"329","messages":"330","suppressedMessages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332"},{"filePath":"333","messages":"334","suppressedMessages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336"},{"filePath":"337","messages":"338","suppressedMessages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","suppressedMessages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","suppressedMessages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"346","messages":"347","suppressedMessages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"169"},{"filePath":"350","messages":"351","suppressedMessages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","suppressedMessages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356"},{"filePath":"357","messages":"358","suppressedMessages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360"},{"filePath":"361","messages":"362","suppressedMessages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"364","messages":"365","suppressedMessages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"367","messages":"368","suppressedMessages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370"},{"filePath":"371","messages":"372","suppressedMessages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"169"},{"filePath":"375","messages":"376","suppressedMessages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378"},{"filePath":"379","messages":"380","suppressedMessages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"169"},{"filePath":"383","messages":"384","suppressedMessages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386"},{"filePath":"387","messages":"388","suppressedMessages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"390","messages":"391","suppressedMessages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","suppressedMessages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"396","messages":"397","suppressedMessages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399"},{"filePath":"400","messages":"401","suppressedMessages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403"},{"filePath":"404","messages":"405","suppressedMessages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407"},{"filePath":"408","messages":"409","suppressedMessages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411"},{"filePath":"412","messages":"413","suppressedMessages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415"},{"filePath":"416","messages":"417","suppressedMessages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"419"},{"filePath":"420","messages":"421","suppressedMessages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"423","messages":"424","suppressedMessages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"426","messages":"427","suppressedMessages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","suppressedMessages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"432"},{"filePath":"433","messages":"434","suppressedMessages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436"},{"filePath":"437","messages":"438","suppressedMessages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"440","messages":"441","suppressedMessages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"443"},{"filePath":"444","messages":"445","suppressedMessages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"447","messages":"448","suppressedMessages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450"},{"filePath":"451","messages":"452","suppressedMessages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454"},{"filePath":"455","messages":"456","suppressedMessages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/index.tsx",[],[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/reportWebVitals.ts",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/App.tsx",["458","459","460"],[],"import React from 'react'\nimport styled from 'styled-components'\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'\nimport axios from 'axios'\nimport './App.css'\n\nimport { HomePage } from './main-pages'\nimport { AdminLoginPage } from './admin-pages/admin-login'\nimport { AdminPage } from './admin-pages/admin-nav'\nimport ErrorPage from './error-pages'\nimport { Location } from './policy/location'\nimport { Privacy } from './policy/privacy'\nimport { Terms } from './policy/terms'\nimport { useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { Toast } from './component/toast'\n\nconst ScrollToTop = () => {\n  const { pathname } = useLocation()\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [pathname])\n\n  return null\n}\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <ScrollToTop />\n      <Toast />\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/AdminLogin\" element={<AdminLoginPage />} />\n        <Route path=\"/Admin\" element={<AdminPage />} />\n        <Route path=\"/Error\" element={<ErrorPage />} />\n        <Route path=\"/policy/location\" element={<Location />} />\n        <Route path=\"/policy/privacy\" element={<Privacy />} />\n        <Route path=\"/policy/terms\" element={<Terms />} />\n        <Route path=\"/*\" element={<ErrorPage />} />\n      </Routes>\n    </div>\n  )\n}\n\nexport default App\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/redux/reducer/index.ts",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/main-pages/index.tsx",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/error-pages/index.tsx",["461"],[],"import React from 'react'\nimport { useLocation } from 'react-router'\nimport styled from 'styled-components'\nimport { Header } from '../main-pages/header'\nimport { useNavigate } from 'react-router-dom'\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: calc(100vh - 100px);\n  background-color: #f0f1f3;\n  justify-content: center;\n  align-items: center;\n`\nconst Title = styled.div`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 36px;\n  color: #000000;\n  margin-top: 24px;\n`\n\nconst SubTitle = styled.div`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 24px;\n  color: #797a7b;\n  margin-top: 8px;\n`\n\nconst Button = styled.div`\n  width: 168px;\n  height: 36px;\n  background: #5500dd;\n  border-radius: 16px;\n  margin-top: 48px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  text-align: center;\n  color: #ffffff;\n  padding-top: 12px;\n  cursor: pointer;\n`\nconst ErrorPage = () => {\n  const error_code = useLocation().state\n  const navigate = useNavigate()\n  const title =\n    403 === error_code\n      ? '로그인 정보가 만료되었어요'\n      : 500 === error_code\n      ? '알수없는 에러가 발생했어요'\n      : '잘못된 접근이에요'\n  const subTitle =\n    403 === error_code\n      ? '로그인 페이지에서 다시 로그인해주세요.'\n      : 500 === error_code\n      ? '이전 화면으로 돌아가 다시 시도해주세요.'\n      : '홈 화면으로 돌아가 다시 시도해주세요.'\n  const buttonText =\n    403 === error_code\n      ? '로그인'\n      : 500 === error_code\n      ? '돌아가기'\n      : '홈으로 가기'\n\n  const onClickButton = () => {\n    if (403 === error_code) {\n      navigate('/AdminLogin')\n    } else if (500 === error_code) {\n      navigate(-1)\n    } else {\n      navigate('/')\n    }\n  }\n  return (\n    <div style={{ height: '100%' }}>\n      <Header />\n      <Container>\n        <img\n          style={{ width: '100px', height: '100px' }}\n          src=\"source/icon/exclamation_triangle.svg\"\n        />\n        <Title>{title}</Title>\n        <SubTitle>{subTitle}</SubTitle>\n        <Button onClick={onClickButton}>{buttonText}</Button>\n      </Container>\n    </div>\n  )\n}\n\nexport default ErrorPage\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/redux/reducer/authorization_reducer.ts",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/index.tsx",["462","463","464","465","466","467","468","469","470","471","472","473","474","475","476"],[],"import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { BrowserRouter, Router, Route, useNavigate } from 'react-router-dom'\nimport { setAuthToken } from '../../api'\n\nimport { useLocation } from 'react-router'\nimport { InformationPage } from './admin-information'\nimport { NotificationPage } from './admin-notification'\nimport { WeeklyPage } from './admin-weekly'\nimport { SchedulePage } from './admin-schedule'\nimport { MemberPage } from './admin-member'\nimport ErrorPage from '../../error-pages'\nimport { getChurchInfo } from '../../api/admin-information'\nimport { Margin24 } from '../../component/styledComponent'\nimport { useErrorNavigator } from '../../error-pages/useErrorNavigator'\n\ninterface PageState {\n  informationState: boolean\n  notificationState: boolean\n  weeklyState: boolean\n  scheduleState: boolean\n  memberState: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n`\n\nconst InnerContainer = styled.div`\n  margin-left: 240px;\n  height: 100%;\n  width: 100%;\n`\n\nconst Sideheader = styled.div`\n  z-index: 1;\n  width: 240px;\n  height: 100%;\n  background-color: #ffffff;\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst Mainlogo = styled.div`\n  margin-top: 48px;\n  border-radius: 50%;\n  overflow: hidden;\n  width: 64px;\n  height: 64px;\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`\n\nconst Maintitle = styled.div`\n  margin-top: 16px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 36px;\n  text-align: center;\n  color: #000000;\n`\n\nconst Logout = styled.button`\n  margin-top: 16px;\n  width: 168px;\n  height: 48px;\n  top: 180px;\n  background: #ffffff;\n  border: 1px solid #5500dd;\n  border-radius: 16px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  text-align: center;\n  color: #5500dd;\n  cursor: pointer;\n`\n\nconst SideButtonBox = styled.div`\n  margin-top: 40px;\n`\n\nconst SideButton = styled.button`\n  display: flex;\n  margin-top: 8px;\n  gap: 16px;\n  width: 208px;\n  height: 56px;\n  padding: 16px 24px 16px 24px;\n  background: #5500dd;\n  border-radius: 16px;\n  cursor: pointer;\n  ont-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 24px;\n  border: none;\n  color: #ffffff;\n`\n\nconst ButtonImage = styled.img`\n  width: 24px;\n  height: 24px;\n`\n\n// 페이지 상태를 가져오는 함수\nconst getPageState = (): PageState => {\n  const pageState = localStorage.getItem('pageState')\n  if (pageState) {\n    return JSON.parse(pageState)\n  } else {\n    return {\n      informationState: true,\n      notificationState: false,\n      weeklyState: false,\n      scheduleState: false,\n      memberState: false,\n    }\n  }\n}\n\n// 페이지 상태를 저장하는 함수\nconst savePageState = (state: PageState) => {\n  localStorage.setItem('pageState', JSON.stringify(state))\n}\n\nexport const AdminPage: React.FC = () => {\n  const token = useLocation().state\n  const navigate = useNavigate()\n  const defaultLogo = '/source/main_logo.png'\n\n  const [pageState, setPageState] = useState(getPageState())\n\n  const setPage = (state: PageState) => {\n    setPageState(state)\n    savePageState(state)\n  }\n\n  if (!token) {\n    navigate('/ErrorPage')\n  }\n\n  const handleLogout = () => {\n    localStorage.removeItem('token')\n    navigate('/', { replace: true })\n  }\n\n  interface ChurchInfo {\n    church_id: string\n    name: string\n    contact_number: string\n    denomination: string\n    denomination_list: string[]\n    introduction_title: string\n    introduction_content: string\n    is_exposure: boolean\n    address: string\n    detail_address: string\n    thumbnail: string\n    logo: string\n    directions_parking: string\n    directions_own_car: string\n    directions_public_transport: string\n    directions_shuttle_bus: string\n  }\n\n  const [churchInfo, setChurchInfo] = useState<ChurchInfo | null>(null)\n  const errorNavigator = useErrorNavigator()\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      setAuthToken(token)\n    }\n\n    const fetchData = async () => {\n      const response = await getChurchInfo()\n      errorNavigator.navigate(response)\n      setChurchInfo(response.payload.church_info)\n    }\n\n    fetchData()\n  }, [])\n\n  const [informationState, setInformationState] = useState(true)\n  const [notificationState, setNotificationState] = useState(false)\n  const [weeklyState, setWeeklyState] = useState(false)\n  const [scheduleState, setScheduleState] = useState(false)\n  const [memberState, setmemberState] = useState(false)\n\n  const handleInformation = () => {\n    setPage({\n      informationState: true,\n      notificationState: false,\n      weeklyState: false,\n      scheduleState: false,\n      memberState: false,\n    })\n  }\n\n  const handleNotification = () => {\n    setPage({\n      informationState: false,\n      notificationState: true,\n      weeklyState: false,\n      scheduleState: false,\n      memberState: false,\n    })\n  }\n  const handleWeekly = () => {\n    setPage({\n      informationState: false,\n      notificationState: false,\n      weeklyState: true,\n      scheduleState: false,\n      memberState: false,\n    })\n  }\n  const handleSchedule = () => {\n    setPage({\n      informationState: false,\n      notificationState: false,\n      weeklyState: false,\n      scheduleState: true,\n      memberState: false,\n    })\n  }\n  const handlePastor = () => {\n    setPage({\n      informationState: false,\n      notificationState: false,\n      weeklyState: false,\n      scheduleState: false,\n      memberState: true,\n    })\n  }\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [pageState])\n\n  return (\n    <Container>\n      <Sideheader>\n        <Mainlogo>\n          <img src={churchInfo?.logo || defaultLogo} alt=\"church logo\" />\n        </Mainlogo>\n        <Maintitle>{churchInfo?.name || '주다'}</Maintitle>\n        <Logout onClick={handleLogout}>로그아웃</Logout>\n        <SideButtonBox>\n          <SideButton\n            onClick={handleInformation}\n            style={{\n              background: pageState.informationState ? '#5500DD' : '#ffffff',\n              color: pageState.informationState ? '#ffffff' : '#000000',\n            }}\n          >\n            <ButtonImage\n              src={\n                pageState.informationState\n                  ? '/source/icon/side_information_active.svg'\n                  : '/source/icon/side_information_deactive.svg'\n              }\n            />\n            정보 수정\n          </SideButton>\n          <SideButton\n            onClick={handleNotification}\n            style={{\n              background: pageState.notificationState ? '#5500DD' : '#ffffff',\n              color: pageState.notificationState ? '#ffffff' : '#000000',\n            }}\n          >\n            <ButtonImage\n              src={\n                pageState.notificationState\n                  ? '/source/icon/side_notice_active.svg'\n                  : '/source/icon/side_notice_deactive.svg'\n              }\n            />\n            공지사항\n          </SideButton>\n          <SideButton\n            onClick={handleWeekly}\n            style={{\n              background: pageState.weeklyState ? '#5500DD' : '#ffffff',\n              color: pageState.weeklyState ? '#ffffff' : '#000000',\n            }}\n          >\n            <ButtonImage\n              src={\n                pageState.weeklyState\n                  ? '/source/icon/side_weekly_active.svg'\n                  : '/source/icon/side_weekly_deactive.svg'\n              }\n            />\n            주보\n          </SideButton>\n          <SideButton\n            onClick={handleSchedule}\n            style={{\n              background: pageState.scheduleState ? '#5500DD' : '#ffffff',\n              color: pageState.scheduleState ? '#ffffff' : '#000000',\n            }}\n          >\n            <ButtonImage\n              src={\n                pageState.scheduleState\n                  ? '/source/icon/side_calendar_active.svg'\n                  : '/source/icon/side_calendar_deactive.svg'\n              }\n            />\n            일정\n          </SideButton>\n          <SideButton\n            onClick={handlePastor}\n            style={{\n              background: pageState.memberState ? '#5500DD' : '#ffffff',\n              color: pageState.memberState ? '#ffffff' : '#000000',\n            }}\n          >\n            <ButtonImage\n              src={\n                pageState.memberState\n                  ? '/source/icon/side_pastor_active.svg'\n                  : '/source/icon/side_pastor_deactive.svg'\n              }\n            />\n            신도 관리\n          </SideButton>\n        </SideButtonBox>\n      </Sideheader>\n      <InnerContainer>\n        <Margin24 />\n        {pageState.informationState && <InformationPage />}\n        {pageState.notificationState && <NotificationPage />}\n        {pageState.weeklyState && <WeeklyPage />}\n        {pageState.scheduleState && <SchedulePage />}\n        {pageState.memberState && <MemberPage />}\n      </InnerContainer>\n    </Container>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-login/index.tsx",["477","478","479","480","481","482","483","484","485","486"],[],"import React, { useState, useRef, useCallback, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { saveAuthorization } from '../../redux/actions/authorization_action'\nimport { RootState } from '../../redux/reducer/index'\nimport styled from 'styled-components'\nimport { LogIn } from '../../api'\nimport { useNavigate } from 'react-router-dom'\nimport { Header } from '../../main-pages/header'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { Toast, showToast } from '../../component/toast'\n\nconst Container = styled.div`\n  width: 100%;\n`\n\nconst LogoWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n`\n\nconst Logo = styled.span``\n\nconst Title = styled.span`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 28px;\n`\n\nconst Body = styled.div`\n  width: auto;\n  background-color: #ffffff;\n  display: flex;\n  justify-content: center;\n`\n\nconst LoginBox = styled.div`\n  margin-top: 200px;\n  width: 490px;\n`\nconst LoginHeadText = styled.div`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 36px;\n  line-height: 36px;\n  display: flex;\n  align-items: left;\n`\n\nconst Logindata = styled.div`\n  margin-top: 48px;\n`\n\nconst LoginText = styled.div`\n  margin-top: 24px;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 24px;\n  display: flex;\n  align-items: center;\n`\n\nconst ErrorText = styled.div`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 22px;\n  color: #d40030;\n  text-align: left;\n  margin-top: 8px;\n  margin-left: 16px;\n`\n\nconst IDInput = styled.input`\n  box-sizing: border-box;\n  margin-top: 16px;\n  border-radius: 16px;\n  width: 490px;\n  height: 60px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 24px;\n  padding: 0 0 0 16px;\n  color: ${props => (props.value ? '#000000' : '#797a7b')};\n  &:focus {\n    outline: 2px solid #000000;\n    outline-offset: -1px;\n  }\n`\n\nconst PWInput = styled.input`\n  box-sizing: border-box;\n  margin-top: 16px;\n  border-radius: 16px;\n  width: 490px;\n  height: 60px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 24px;\n  padding: 0 0 0 16px;\n  color: ${props => (props.value ? '#000000' : '#797a7b')};\n  &:focus {\n    outline: 2px solid #000000;\n    outline-offset: -1px;\n  }\n`\n\nconst Login = styled.button`\n  margin-top: 64px;\n  width: 490px;\n  height: 60px;\n  background: #5500dd;\n  border-radius: 16px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 24px;\n  text-align: center;\n  color: #ffffff;\n  border: none;\n  cursor: pointer;\n`\n\nconst Signup = styled.button`\n  margin-top: 16px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  text-align: center;\n  border: none;\n  background: #ffffff;\n  color: #454648;\n  cursor: pointer;\n  width: 490px;\n  height: 56px;\n`\n\nexport const AdminLoginPage: React.FC = e => {\n  const [id, setId] = useState('')\n  const [password, setPassword] = useState('')\n  const [loginState, setLoginState] = useState(false)\n  const [loginFail, setLoginFail] = useState(false)\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n\n  const authorizationData = useSelector(\n    (state: RootState) => state.authorizationReducer.authorization\n  )\n  useEffect(() => {\n    // console.log(authorizationData);\n  }, [authorizationData])\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault()\n    handleLogin()\n  }\n\n  const handleLogin = useCallback(async () => {\n    try {\n      const response = await LogIn(id, password)\n\n      // console.log(response.payload.admin_account_info.authorization_token);\n\n      if (response.success) {\n        setLoginState(true)\n        dispatch(\n          saveAuthorization(\n            response.payload.admin_account_info.authorization_token\n          )\n        )\n        navigate('/Admin', {\n          state: response.payload.admin_account_info.authorization_token,\n        })\n      }\n    } catch (error) {\n      setLoginFail(true)\n    }\n  }, [dispatch, id, password])\n\n  return (\n    <Container>\n      <Header />\n      <Body>\n        <LoginBox>\n          <LoginHeadText>관리자 로그인</LoginHeadText>\n          <Logindata>\n            <form onSubmit={handleSubmit}>\n              <LoginText>아이디</LoginText>\n              <IDInput\n                type=\"text\"\n                value={id}\n                placeholder=\"아이디 입력\"\n                onChange={e => setId(e.target.value)}\n                style={{\n                  border: loginFail ? '1px solid #D40030' : '1px solid #c1c2c3',\n                }}\n              />\n              <LoginText>비밀번호</LoginText>\n              <PWInput\n                type=\"password\"\n                value={password}\n                placeholder=\"비밀번호 입력\"\n                onChange={e => setPassword(e.target.value)}\n                style={{\n                  border: loginFail ? '1px solid #D40030' : '1px solid #c1c2c3',\n                }}\n              />\n              {loginFail && (\n                <ErrorText>아이디 또는 비밀번호가 틀렸어요.</ErrorText>\n              )}\n              <Login type=\"submit\">로그인</Login>\n            </form>\n            <a href=\"https://forms.gle/RJB1F8aDL6RkFngk9\" target=\"_blank\">\n              <Signup onClick={() => showToast('delete')}>회원가입</Signup>\n            </a>\n          </Logindata>\n        </LoginBox>\n      </Body>\n    </Container>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/redux/actions/types.ts",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/redux/actions/authorization_action.ts",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/api/index.tsx",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-notification/index.tsx",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-information/index.tsx",["487","488"],[],"import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { InnerDefaultPage } from './default'\nimport { InnerAddressPage } from './address'\nimport { InnerPastorPage } from './pastor'\nimport { InnerHistoryPage } from './history'\n\nconst Container = styled.div`\n  min-height: 100vh;\n  background: #f0f1f3;\n  width: 100%;\n`\n\nexport const InformationPage: React.FC = () => {\n  return (\n    <Container>\n      <InnerDefaultPage />\n      <InnerAddressPage />\n      <InnerPastorPage />\n      <InnerHistoryPage />\n    </Container>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-schedule/index.tsx",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-weekly/index.tsx",["489","490"],[],"import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { InnerListPage } from './list'\nimport { InnerRegistPage } from './regist'\nimport { Margin24, Margin36 } from '../../../component/styledComponent'\n\nconst Container = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  background: #f0f1f3;\n`\n\nexport const WeeklyPage: React.FC = () => {\n  const [refresh, setRefresh] = useState<boolean>(false)\n  return (\n    <Container>\n      <InnerListPage setRefresh={setRefresh} refresh={refresh} />\n      <InnerRegistPage setRefresh={setRefresh} refresh={refresh} />\n    </Container>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-notification/list/index.tsx",["491","492","493"],[],"import React, { Dispatch, SetStateAction, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useState, useRef } from 'react'\nimport { setAuthToken } from '../../../../api'\nimport { getNotice } from '../../../../api/admin-notification'\nimport { NoticeModal } from './patch-modal/modal'\nimport { usePage } from '../../../../hooks/usePage'\nimport { Page } from '../../../../component/page'\nimport {\n  InnerBoxContainer,\n  InnerBoxHeader,\n  InnerBoxTitle,\n  MainContainer,\n} from '../../../../component/styledComponent'\nimport { InfoBox, infoBoxTexts } from '../../../../component/box/info'\nimport { EmptyText } from '../../../../component/empty_text'\nimport { useErrorNavigator } from '../../../../error-pages/useErrorNavigator'\n\nconst NoticeBox = styled.button`\n  width: 100%;\n  box-sizing: border-box;\n  margin-top: 16px;\n  border-radius: 16px;\n  height: 80px;\n  border: 1px solid #c1c2c3;\n  background: #ffffff;\n  cursor: pointer;\n\n  &:hover {\n    border: 2px solid #000000;\n  }\n`\n\nconst NoticeTitle = styled.div`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  text-align: left;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  padding: 4px 0 0 24px;\n  color: #000000;\n`\n\nconst NoticeSubTitle = styled.div`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  text-align: left;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  color: #797a7b;\n  padding: 4px 0 0 24px;\n`\n\ninterface NoticeData {\n  church_notice_id: string\n  title: string\n  content: string\n  image: string | ''\n  created_at: string\n}\n\ninterface NoticePropType {\n  refresh: boolean\n  setRefresh: Dispatch<SetStateAction<boolean>>\n}\nconst pagePerLimit = 7\nexport const InnerListPage = (props: NoticePropType) => {\n  const { refresh, setRefresh } = props\n  const errorNavigator = useErrorNavigator()\n  const [noticeData, setNoticeData] = useState<Array<NoticeData>>([\n    {\n      church_notice_id: '',\n      title: '',\n      content: '',\n      image: '',\n      created_at: '',\n    },\n  ])\n  const [currentIndex, setIndex] = useState(0)\n\n  const {\n    pageList,\n    currentPage,\n    maxPage,\n    getPrevPage,\n    getNextPage,\n    clickPage,\n    setMaxPage,\n  } = usePage()\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      setAuthToken(token)\n    }\n\n    const fetchData = async () => {\n      const response = await getNotice((currentPage - 1) * pagePerLimit)\n      errorNavigator.navigate(response)\n      setNoticeData(response.payload.church_notice_list.results)\n      setMaxPage(\n        Math.ceil(\n          response.payload.church_notice_list.total_count / pagePerLimit\n        )\n      )\n    }\n\n    fetchData()\n  }, [refresh])\n\n  const getNoticePage = async (page: number) => {\n    const response = await getNotice((page - 1) * pagePerLimit)\n    errorNavigator.navigate(response)\n    setNoticeData(response.payload.church_notice_list.results)\n  }\n\n  useEffect(() => {\n    getNoticePage(currentPage)\n  }, [currentPage])\n\n  // Modal\n  const [showModal, setShowModal] = useState(false)\n\n  const handleButtonClick = (index: number) => {\n    setShowModal(true)\n    setIndex(index)\n  }\n\n  const handleCloseModal = () => {\n    setShowModal(false)\n  }\n\n  return (\n    <MainContainer>\n      <InnerBoxHeader>\n        <InnerBoxTitle>공지사항 목록</InnerBoxTitle>\n      </InnerBoxHeader>\n      <InnerBoxContainer>\n        <div style={{ paddingTop: 36 }} />\n        <InfoBox text={infoBoxTexts.default} />\n        <div style={{ paddingTop: 20 }} />\n        {noticeData.length !== 0 ? (\n          noticeData.map((notice, index) => {\n            return (\n              <NoticeBox onClick={() => handleButtonClick(index)}>\n                <NoticeTitle>{notice.title}</NoticeTitle>\n                <NoticeSubTitle>\n                  {notice.created_at.substring(0, 10).replace(/-/gi, '.')}\n                </NoticeSubTitle>\n              </NoticeBox>\n            )\n          })\n        ) : (\n          <EmptyText text=\"등록된 공지사항이 없어요.\" />\n        )}\n\n        {showModal && (\n          <NoticeModal\n            refresh={refresh}\n            setRefresh={setRefresh}\n            onCloseModal={handleCloseModal}\n            church_notice_id={noticeData[currentIndex].church_notice_id}\n            notice_title={noticeData[currentIndex].title}\n            notice_content={noticeData[currentIndex].content}\n            notice_image={noticeData[currentIndex].image}\n          />\n        )}\n        <Page\n          pageList={pageList}\n          currentPage={currentPage}\n          getPrevPage={getPrevPage}\n          getNextPage={getNextPage}\n          clickPage={clickPage}\n          lastPage={maxPage}\n        />\n      </InnerBoxContainer>\n\n      <div\n        style={{\n          height: '24px',\n        }}\n      />\n    </MainContainer>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-notification/regist/index.tsx",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-information/address/index.tsx",["494"],[],"import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useState } from 'react'\nimport { setAuthToken } from '../../../../api'\nimport {\n  getChurchInfo,\n  patchChurchAddress,\n} from '../../../../api/admin-information'\nimport {\n  FlexRowContainer,\n  FlexRowInnerLeft,\n  FlexRowInnerRight,\n  InnerBoxContainer,\n  InnerBoxHeader,\n  InnerBoxTitle,\n  MainContainer,\n  Margin36,\n  SubTitle,\n} from '../../../../component/styledComponent'\nimport { useErrorNavigator } from '../../../../error-pages/useErrorNavigator'\n\nconst ModifyButton = styled.button`\n  width: 120px;\n  height: 40px;\n  cursor: pointer;\n  border-radius: 16px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  text-align: center;\n`\n\nconst InputBoxWithCount = styled.div`\n  position: relative;\n`\n\nconst InputCount = styled.div`\n  position: absolute;\n  right: 16px;\n  bottom: 16px;\n  font-size: 14px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n  text-align: right;\n  color: #c1c2c3;\n`\n\nconst InputSubBox = styled.textarea`\n  width: 100%;\n  box-sizing: border-box;\n  margin-top: 16px;\n  border-radius: 16px;\n  height: 140px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n  border: 1px solid #c1c2c3;\n  padding: 16px;\n  color: ${props => (props.value ? '#000000' : '#797a7b')};\n  resize: none;\n  overflow: auto;\n  &:focus {\n    outline: 2px solid #000000;\n    outline-offset: -1px;\n  }\n`\n\nexport const InnerAddressPage: React.FC = () => {\n  const [editState, setEditState] = useState(false)\n  const [ownCar, setOwncar] = useState('')\n  const [parking, setParking] = useState('')\n  const [publicTransport, setPublicTransport] = useState('')\n  const [shuttleBus, setShuttleBus] = useState('')\n  const errorNavigator = useErrorNavigator()\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      setAuthToken(token)\n\n      const fetchData = async () => {\n        const response = await getChurchInfo()\n        errorNavigator.navigate(response)\n        setOwncar(response.payload.church_info.directions_own_car)\n        setParking(response.payload.church_info.directions_parking)\n        setPublicTransport(\n          response.payload.church_info.directions_public_transport\n        )\n        setShuttleBus(response.payload.church_info.directions_shuttle_bus)\n      }\n\n      fetchData()\n    }\n  }, [])\n\n  const handleEdit = async () => {\n    if (editState) {\n      const response = await patchChurchAddress(\n        parking,\n        ownCar,\n        publicTransport,\n        shuttleBus\n      )\n      errorNavigator.navigate(response)\n      setEditState(false)\n    } else {\n      setEditState(true)\n    }\n  }\n\n  return (\n    <MainContainer>\n      <InnerBoxHeader>\n        <InnerBoxTitle>오시는 길</InnerBoxTitle>\n        <ModifyButton\n          onClick={handleEdit}\n          style={{\n            background: editState ? '#5500DD' : '#ffffff',\n            border: editState ? 'none' : '1px solid #5500dd',\n            color: editState ? '#ffffff' : '#5500dd',\n          }}\n        >\n          {editState ? '저장' : '수정'}\n        </ModifyButton>\n      </InnerBoxHeader>\n      <InnerBoxContainer>\n        <Margin36 />\n        <FlexRowContainer>\n          <FlexRowInnerLeft>\n            <SubTitle>주차장</SubTitle>\n            <InputBoxWithCount>\n              <InputSubBox\n                maxLength={100}\n                value={parking}\n                disabled={!editState}\n                placeholder=\"주차장 안내 입력\"\n                onChange={e => {\n                  setParking(e.target.value)\n                }}\n              />\n              <InputCount>({parking ? parking.length : 0}/100)</InputCount>\n            </InputBoxWithCount>\n            <Margin36 />\n            <SubTitle>대중교통</SubTitle>\n            <InputBoxWithCount>\n              <InputSubBox\n                maxLength={100}\n                value={publicTransport}\n                disabled={!editState}\n                placeholder=\"대중교통 안내 입력\"\n                onChange={e => {\n                  setPublicTransport(e.target.value)\n                }}\n              />\n              <InputCount>\n                ({publicTransport ? publicTransport.length : 0}/100)\n              </InputCount>\n            </InputBoxWithCount>\n          </FlexRowInnerLeft>\n          <FlexRowInnerRight>\n            <SubTitle>자가용</SubTitle>\n            <InputBoxWithCount>\n              <InputSubBox\n                maxLength={100}\n                value={ownCar}\n                disabled={!editState}\n                placeholder=\"자가용 안내 입력\"\n                onChange={e => {\n                  setOwncar(e.target.value)\n                }}\n              />\n              <InputCount>({ownCar ? ownCar.length : 0}/100)</InputCount>\n            </InputBoxWithCount>\n            <Margin36 />\n            <SubTitle>셔틀버스</SubTitle>\n            <InputBoxWithCount>\n              <InputSubBox\n                maxLength={100}\n                value={shuttleBus}\n                disabled={!editState}\n                placeholder=\"셔틀버스 안내 입력\"\n                onChange={e => {\n                  setShuttleBus(e.target.value)\n                }}\n              />\n              <InputCount>\n                ({shuttleBus ? shuttleBus.length : 0}/100)\n              </InputCount>\n            </InputBoxWithCount>\n          </FlexRowInnerRight>\n        </FlexRowContainer>\n        <div\n          style={{\n            height: '48px',\n          }}\n        />\n      </InnerBoxContainer>\n      <div\n        style={{\n          height: '24px',\n        }}\n      />\n    </MainContainer>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-information/default/index.tsx",["495","496"],[],"import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useState, useRef } from 'react'\nimport { setAuthToken } from '../../../../api'\nimport {\n  getChurchInfo,\n  patchChurchInfo,\n} from '../../../../api/admin-information'\nimport {\n  FlexRowContainer,\n  FlexRowInnerLeft,\n  FlexRowInnerRight,\n  InnerBoxContainer,\n  InnerBoxHeader,\n  InnerBoxTitle,\n  MainContainer,\n  Margin16,\n  Margin36,\n  SubTitle,\n} from '../../../../component/styledComponent'\nimport { InfoBox } from '../../../../component/box/info'\nimport { useErrorNavigator } from '../../../../error-pages/useErrorNavigator'\n\ndeclare const daum: any\n\nconst ModifyButton = styled.button`\n  width: 120px;\n  height: 40px;\n  border-radius: 16px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  text-align: center;\n  cursor: pointer;\n`\n\nconst ButtonStyle = `\n  width: 100%;\n  height: 40px;\n  border-radius: 16px;\n  font-family: \"Spoqa Han Sans Neo\", 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 24px;\n  text-align: center;\n  cursor: pointer;\n`\n\nconst UploadButton = styled.button`\n  ${ButtonStyle}\n`\n\nconst DeleteButton = styled.button`\n  ${ButtonStyle}\n`\n\nconst ButtonBox = styled.div`\n  margin-top: 16px;\n  display: flex;\n  gap: 28px;\n  justify-content: space-between;\n`\n\nconst LogoImage = styled.div`\n  margin-top: 16px;\n  width: 202px;\n  height: 202px;\n  background: #f0f1f3;\n  border-radius: 16px;\n  overflow: hidden;\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`\n\nconst ThumbnailImage = styled.div`\n  margin-top: 16px;\n  width: 430px;\n  height: 202px;\n  background: #f0f1f3;\n  border-radius: 16px;\n  overflow: hidden;\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`\n\nconst InputBoxWithCount = styled.div`\n  position: relative;\n`\n\nconst InputCount = styled.div`\n  position: absolute;\n  right: 16px;\n  bottom: 16px;\n  font-size: 14px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n  text-align: right;\n  color: #c1c2c3;\n`\n\nconst InputBox = styled.input`\n  width: 100%;\n  box-sizing: border-box;\n  margin-top: 16px;\n  border-radius: 16px;\n  height: 56px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  border: 1px solid #c1c2c3;\n  padding: 0 78px 0 16px;\n  color: ${props => (props.value ? '#000000' : '#797a7b')};\n  &:focus {\n    outline: 2px solid #000000;\n    outline-offset: -1px;\n  }\n`\n\nconst InputSubBox = styled.textarea`\n  width: 100%;\n  box-sizing: border-box;\n  margin-top: 16px;\n  border-radius: 16px;\n  height: 92px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n  border: 1px solid #c1c2c3;\n  padding: 16px;\n  color: ${props => (props.value ? '#000000' : '#797a7b')};\n  resize: none;\n  overflow: auto;\n  &:focus {\n    outline: 2px solid #000000;\n    outline-offset: -1px;\n  }\n`\n\ninterface ChurchInfo {\n  church_id: string\n  name: string\n  contact_number: string\n  denomination: string\n  denomination_list: string[]\n  introduction_title: string\n  introduction_content: string\n  is_exposure: boolean\n  address: string\n  detail_address: string\n  thumbnail: string\n  logo: string\n  directions_parking: string\n  directions_own_car: string\n  directions_public_transport: string\n  directions_shuttle_bus: string\n}\n\nexport const InnerDefaultPage: React.FC = () => {\n  const [churchInfo, setChurchInfo] = useState<ChurchInfo | null>(null)\n  const errorNavigator = useErrorNavigator()\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      setAuthToken(token)\n    }\n\n    const fetchData = async () => {\n      const response = await getChurchInfo()\n      errorNavigator.navigate(response)\n      setChurchInfo(response.payload.church_info)\n    }\n\n    fetchData()\n  }, [])\n\n  const [editState, setEditState] = useState(false)\n  const [logo, setLogo] = useState(churchInfo?.logo)\n  const [thumbnail, setThumbnail] = useState(churchInfo?.thumbnail)\n  const [churchName, setChruchName] = useState(churchInfo?.name)\n  const [denominationName, setDenominationName] = useState(\n    churchInfo?.denomination\n  )\n  const [denominationList, setDenominationList] = useState(\n    churchInfo?.denomination_list\n  )\n  const [contackNumber, setContackNumber] = useState(churchInfo?.contact_number)\n  const [introductionTitle, setIntroductionTitle] = useState(\n    churchInfo?.introduction_title\n  )\n  const [introductionContent, setIntroductionContent] = useState(\n    churchInfo?.introduction_content\n  )\n  const [address, setAddress] = useState(churchInfo?.address)\n  const [detailAddress, setDetailAddress] = useState('')\n\n  const [uploadLogo, setUploadLogo] = useState<any>([])\n  const [uploadThumbnail, setUploadThumbnail] = useState<any>([])\n  const logoFile = useRef<HTMLInputElement>(null)\n  const openLogoFile = () => {\n    if (editState && logoFile.current) logoFile.current.click()\n  }\n  const saveLogoFile = (event: any) => {\n    if (event.target.files !== null && event.target.files[0] !== undefined) {\n      setUploadLogo(event.target.files[0])\n      setLogo(URL.createObjectURL(event.target.files[0]))\n    }\n  }\n  const deleteLogoFile = () => {\n    if (editState) {\n      setLogo('')\n      setUploadLogo([false])\n    }\n  }\n  const thumbnailFile = useRef<HTMLInputElement>(null)\n  const openThumbnailFile = () => {\n    if (editState && thumbnailFile.current) thumbnailFile.current.click()\n  }\n  const saveThumbnailFile = (event: any) => {\n    if (event.target.files !== null && event.target.files[0] !== undefined) {\n      setUploadThumbnail(event.target.files[0])\n      setThumbnail(URL.createObjectURL(event.target.files[0]))\n    }\n  }\n  const deleteThumbnailFile = () => {\n    if (editState) {\n      setThumbnail('')\n      setUploadThumbnail([false])\n    }\n  }\n\n  useEffect(() => {\n    setLogo(churchInfo?.logo)\n    setThumbnail(churchInfo?.thumbnail)\n    setChruchName(churchInfo?.name)\n    setDenominationName(churchInfo?.denomination)\n    setDenominationList(churchInfo?.denomination_list)\n    setContackNumber(churchInfo?.contact_number)\n    setIntroductionTitle(churchInfo?.introduction_title)\n    setIntroductionContent(churchInfo?.introduction_content)\n    setAddress(churchInfo?.address)\n    setDetailAddress(churchInfo ? churchInfo.detail_address : '')\n  }, [churchInfo])\n\n  const handleEdit = async () => {\n    if (editState) {\n      const response = await patchChurchInfo(\n        uploadLogo,\n        uploadThumbnail,\n        churchName,\n        denominationName,\n        contackNumber,\n        introductionTitle,\n        introductionContent,\n        address,\n        detailAddress\n      )\n\n      errorNavigator.navigate(response)\n      setEditState(false)\n    } else {\n      setEditState(true)\n    }\n  }\n\n  const addressRef = useRef<HTMLInputElement>(null)\n\n  const handleAddressSearch = () => {\n    if (!editState) {\n      return\n    }\n    const popupWidth = 500\n    const popupHeight = 600\n    const windowWidth =\n      window.innerWidth ||\n      document.documentElement.clientWidth ||\n      document.body.clientWidth\n    const windowHeight =\n      window.innerHeight ||\n      document.documentElement.clientHeight ||\n      document.body.clientHeight\n\n    const popupLeft = (windowWidth - popupWidth) / 2\n    const popupTop = (windowHeight - popupHeight) / 2\n\n    new daum.Postcode({\n      left: popupLeft,\n      top: popupTop,\n      width: '100%',\n      height: '100%',\n      oncomplete: function (data: any) {\n        setAddress(data.roadAddress)\n        if (addressRef.current) {\n          addressRef.current.focus()\n        }\n      },\n    }).open()\n  }\n\n  return (\n    <MainContainer>\n      <InnerBoxHeader>\n        <InnerBoxTitle>기본정보</InnerBoxTitle>\n        <ModifyButton\n          onClick={handleEdit}\n          style={{\n            background: editState ? '#5500DD' : '#ffffff',\n            border: editState ? 'none' : '1px solid #5500dd',\n            color: editState ? '#ffffff' : '#5500dd',\n          }}\n        >\n          {editState ? '저장' : '수정'}\n        </ModifyButton>\n      </InnerBoxHeader>\n      <InnerBoxContainer>\n        <Margin36 />\n        <FlexRowContainer>\n          <FlexRowInnerLeft>\n            <SubTitle>로고 이미지</SubTitle>\n            <Margin16 />\n            <InfoBox text=\"교회 프로필 이미지에 등록돼요.\" />\n            <LogoImage>\n              <img src={logo || 'source/no_image.svg'} alt=\"교회 로고\" />\n            </LogoImage>\n            <ButtonBox>\n              <UploadButton\n                style={{\n                  background: editState ? '#ffffff' : '#E3E4E6',\n                  border: editState ? '1px solid #5500DD' : 'none',\n                  color: editState ? '#5500DD' : '#A2A3A5',\n                }}\n                onClick={openLogoFile}\n              >\n                <input\n                  type=\"file\"\n                  id=\"file\"\n                  ref={logoFile}\n                  style={{ display: 'none' }}\n                  onChange={saveLogoFile}\n                />\n                업로드\n              </UploadButton>\n              <DeleteButton\n                style={{\n                  background: editState ? '#ffffff' : '#E3E4E6',\n                  border: editState ? '1px solid #D40030' : 'none',\n                  color: editState ? '#D40030' : '#A2A3A5',\n                }}\n                onClick={deleteLogoFile}\n              >\n                삭제\n              </DeleteButton>\n            </ButtonBox>\n          </FlexRowInnerLeft>\n          <FlexRowInnerRight>\n            <SubTitle>배경 이미지</SubTitle>\n            <Margin16 />\n            <InfoBox text=\"교회 소개 배경 이미지에 등록돼요.\" />\n            <ThumbnailImage>\n              <img src={thumbnail || 'source/no_image.svg'} alt=\"배경 이미지\" />\n            </ThumbnailImage>\n            <ButtonBox>\n              <UploadButton\n                style={{\n                  background: editState ? '#ffffff' : '#E3E4E6',\n                  border: editState ? '1px solid #5500DD' : 'none',\n                  color: editState ? '#5500DD' : '#A2A3A5',\n                }}\n                onClick={openThumbnailFile}\n              >\n                <input\n                  type=\"file\"\n                  id=\"file\"\n                  ref={thumbnailFile}\n                  style={{ display: 'none' }}\n                  onChange={saveThumbnailFile}\n                />\n                업로드\n              </UploadButton>\n              <DeleteButton\n                style={{\n                  background: editState ? '#ffffff' : '#E3E4E6',\n                  border: editState ? '1px solid #D40030' : 'none',\n                  color: editState ? '#D40030' : '#A2A3A5',\n                }}\n                onClick={deleteThumbnailFile}\n              >\n                삭제\n              </DeleteButton>\n            </ButtonBox>\n          </FlexRowInnerRight>\n        </FlexRowContainer>\n        <Margin36 />\n        <FlexRowContainer>\n          <FlexRowInnerLeft>\n            <SubTitle>교회명</SubTitle>\n            <InputBox\n              type=\"text\"\n              value={churchName}\n              disabled={!editState}\n              placeholder={'교회명 입력'}\n              onChange={e => setChruchName(e.target.value)}\n            />\n            <Margin36 />\n\n            <SubTitle>연락처</SubTitle>\n            <Margin16 />\n            <InfoBox text=\"'-'를 포함해서 입력해주세요.\" />\n            <InputBox\n              type=\"text\"\n              value={contackNumber}\n              disabled={!editState}\n              placeholder=\"연락처 입력\"\n              onChange={e => setContackNumber(e.target.value)}\n            />\n          </FlexRowInnerLeft>\n          <FlexRowInnerRight>\n            <SubTitle>종파</SubTitle>\n            <InputBox\n              type=\"text\"\n              value={denominationName}\n              disabled={!editState}\n              placeholder=\"종파를 선택해주세요\"\n              onChange={e => setDenominationName(e.target.value)}\n            />\n            <Margin36 />\n            <SubTitle>교회 위치</SubTitle>\n            <InputBox\n              ref={addressRef}\n              type=\"text\"\n              value={address}\n              disabled={!editState}\n              placeholder=\"도로명 주소 입력\"\n              onClick={handleAddressSearch}\n            />\n            <InputBoxWithCount>\n              <InputBox\n                type=\"text\"\n                maxLength={40}\n                value={detailAddress}\n                disabled={!editState}\n                placeholder=\"상세주소 입력\"\n                onChange={e => {\n                  setDetailAddress(e.target.value)\n                }}\n              />\n              <InputCount>({detailAddress.length}/40)</InputCount>\n            </InputBoxWithCount>\n          </FlexRowInnerRight>\n        </FlexRowContainer>\n        <Margin36 />\n        <SubTitle>교회 소개</SubTitle>\n        <InputBoxWithCount>\n          <InputBox\n            type=\"text\"\n            maxLength={30}\n            value={introductionTitle}\n            disabled={!editState}\n            placeholder=\"제목 입력\"\n            onChange={e => {\n              setIntroductionTitle(e.target.value)\n            }}\n          />\n          <InputCount>\n            ({introductionTitle ? introductionTitle.length : 0}/30)\n          </InputCount>\n        </InputBoxWithCount>\n\n        <InputBoxWithCount>\n          <InputSubBox\n            maxLength={200}\n            value={introductionContent}\n            disabled={!editState}\n            placeholder=\"설명 입력\"\n            onChange={e => {\n              setIntroductionContent(e.target.value)\n            }}\n          />\n          <InputCount>\n            ({introductionContent ? introductionContent.length : 0}/200)\n          </InputCount>\n        </InputBoxWithCount>\n        <div\n          style={{\n            height: '48px',\n          }}\n        />\n      </InnerBoxContainer>\n      <div\n        style={{\n          height: '24px',\n        }}\n      />\n    </MainContainer>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-information/pastor/index.tsx",["497","498","499","500","501"],[],"import React, { Dispatch, SetStateAction, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useState, useRef } from 'react'\nimport { PastorInfoModal } from './patch-modal/info/modal'\nimport { usePage } from '../../../../hooks/usePage'\nimport { setAuthToken } from '../../../../api'\nimport { getPastor } from '../../../../api/admin-pastor'\nimport { PastorCreateModal } from './create-modal/modal'\nimport { PatchOrderModal } from './patch-modal/order/modal'\nimport { Page } from '../../../../component/page'\nimport {\n  InnerBoxContainer,\n  InnerBoxHeader,\n  InnerBoxTitle,\n  MainContainer,\n  Margin36,\n} from '../../../../component/styledComponent'\nimport { useErrorNavigator } from '../../../../error-pages/useErrorNavigator'\n\nconst ModifyButtonBox = styled.div`\n  display: flex;\n  gap: 16px;\n`\n\nconst ModifyButton = styled.button`\n  width: 120px;\n  height: 40px;\n  border-radius: 16px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  text-align: center;\n  cursor: pointer;\n`\n\nconst AddButtonBox = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n`\n\nconst AddButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 72px;\n  border-radius: 16px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 24px;\n  color: #5500dd;\n  text-align: center;\n  cursor: pointer;\n`\n\nconst InfoBox = styled.div`\n  align-items: center;\n  display: flex;\n  padding: 16px;\n  text-align: left;\n  background: #f7f0ff;\n  border-radius: 16px;\n`\n\nconst InfoTitle = styled.div`\n  margin-left: 8px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  color: #454648;\n  line-height: 24px;\n`\n\nconst WeeklyImage = styled.div`\n  width: 58px;\n  height: 78px;\n  border-radius: 9px;\n  border: none;\n  overflow: hidden;\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`\n\nconst NoticeBox = styled.button`\n  align-items: center;\n  width: 100%;\n  height: 110px;\n  display: flex;\n  box-sizing: border-box;\n  margin-top: 16px;\n  border-radius: 16px;\n  border: 1px solid #c1c2c3;\n  background: #ffffff;\n  cursor: pointer;\n\n  &:hover {\n    border: 2px solid #000000;\n  }\n`\nconst IndexIndicator = styled.text`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 28px;\n  color: #5500dd;\n  width: 62px;\n`\n\nconst NoticeInfo = styled.div``\n\nconst NoticeTitle = styled.div`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  text-align: left;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  padding: 4px 0 0 24px;\n  color: #000000;\n`\n\nconst NoticeSubTitle = styled.div`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  text-align: left;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  color: #797a7b;\n  padding: 4px 0 0 24px;\n`\n\nconst BodyTitleBold = styled.text`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  color: #454648;\n`\ninterface PastorData {\n  church_pastor_id: string\n  order: string\n  name: string\n  role: string\n  image: string\n}\nconst pagePerLimit = 6\nexport const InnerPastorPage = () => {\n  const [refresh, setRefresh] = useState<boolean>(false)\n  const errorNavigator = useErrorNavigator()\n  const [pastorData, setPastorData] = useState<Array<PastorData>>([\n    {\n      church_pastor_id: '',\n      order: '',\n      name: '',\n      role: '',\n      image: '',\n    },\n  ])\n  const [currentIndex, setIndex] = useState(0)\n\n  const {\n    pageList,\n    currentPage,\n    maxPage,\n    getPrevPage,\n    getNextPage,\n    clickPage,\n    setMaxPage,\n  } = usePage()\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      setAuthToken(token)\n    }\n\n    const fetchData = async () => {\n      const response = await getPastor((currentPage - 1) * pagePerLimit)\n      errorNavigator.navigate(response)\n      setPastorData(response.payload.church_pastor_list.results)\n      setMaxPage(\n        Math.ceil(\n          response.payload.church_pastor_list.total_count / pagePerLimit\n        )\n      )\n      // console.log(response.payload.church_pastor_list.total_count)\n    }\n    fetchData()\n  }, [refresh])\n\n  const getPastorPage = async (page: number) => {\n    const response = await getPastor((page - 1) * pagePerLimit)\n    errorNavigator.navigate(response)\n    setPastorData(response.payload.church_pastor_list.results)\n  }\n\n  useEffect(() => {\n    getPastorPage(currentPage)\n  }, [currentPage])\n\n  // Modal\n  const [showPatchInfoModal, setShowPatchInfoModal] = useState(false)\n  const [showPatchOrderModal, setShowPatchOrderModal] = useState(false)\n  const [showCreateModal, setShowCreateInfoModal] = useState(false)\n\n  const handleButtonClick = (index: number) => {\n    setShowPatchInfoModal(true)\n    setIndex(index)\n  }\n\n  const handleCloseModal = () => {\n    setShowPatchInfoModal(false)\n  }\n\n  const handleCreateButtonClick = () => {\n    setShowCreateInfoModal(true)\n  }\n  const handleCloseCreateModal = () => {\n    setShowCreateInfoModal(false)\n  }\n  const handleOrderButtonClick = () => {\n    setShowPatchOrderModal(true)\n  }\n  const handleCloseOrderModal = () => {\n    setShowPatchOrderModal(false)\n    setRefresh(!refresh)\n  }\n\n  return (\n    <MainContainer>\n      <InnerBoxHeader>\n        <InnerBoxTitle>섬기는 이</InnerBoxTitle>\n        <ModifyButtonBox>\n          <ModifyButton\n            style={{\n              background: '#ffffff',\n              border: '1px solid #5500dd',\n              color: '#5500dd',\n            }}\n            onClick={handleOrderButtonClick}\n          >\n            순서 변경\n          </ModifyButton>\n        </ModifyButtonBox>\n      </InnerBoxHeader>\n      <InnerBoxContainer>\n        <Margin36 />\n        <InfoBox>\n          <img\n            src=\"/source/icon/information.svg\"\n            alt=\"information\"\n            style={{ marginTop: '-24px' }}\n          />\n          <InfoTitle>\n            화면에 보이는 순서대로 어플리케이션에 보여져요.\n            <br />\n            만약 순서를 변경하고 싶다면{' '}\n            <BodyTitleBold>[순서 변경]</BodyTitleBold>에서 순서를 변경해주세요.\n          </InfoTitle>\n        </InfoBox>\n        <div style={{ paddingTop: '20px' }} />\n        {pastorData &&\n          pastorData.map((pastor, index) => {\n            const itemIndex = (currentPage - 1) * pagePerLimit + index\n            return (\n              <NoticeBox onClick={() => handleButtonClick(index)}>\n                <IndexIndicator>{itemIndex + 1}</IndexIndicator>\n                <WeeklyImage>\n                  <img\n                    src={pastor.image || '/source/no_pastor_image.svg'}\n                    alt=\"\"\n                  />\n                </WeeklyImage>\n                <NoticeInfo>\n                  <NoticeTitle>{pastor.name}</NoticeTitle>\n                  <NoticeSubTitle>{pastor.role}</NoticeSubTitle>\n                </NoticeInfo>\n              </NoticeBox>\n            )\n          })}\n\n        <div style={{ paddingTop: '20px' }} />\n        <AddButtonBox>\n          <AddButton\n            onClick={handleCreateButtonClick}\n            style={{\n              background: '#ffffff',\n              border: '1px solid #5500dd',\n              color: '#5500dd',\n            }}\n          >\n            <img\n              src=\"/source/icon/add.svg\"\n              alt=\"information\"\n              style={{ marginRight: '8px' }}\n            />\n            섬기는 이 추가\n          </AddButton>\n        </AddButtonBox>\n        <Page\n          pageList={pageList}\n          currentPage={currentPage}\n          getPrevPage={getPrevPage}\n          getNextPage={getNextPage}\n          clickPage={clickPage}\n          lastPage={maxPage}\n        />\n        {showPatchInfoModal && (\n          <PastorInfoModal\n            refresh={refresh}\n            setRefresh={setRefresh}\n            onCloseModal={handleCloseModal}\n            church_pastor_id={pastorData[currentIndex].church_pastor_id}\n            pastor_index={currentIndex + (currentPage - 1) * pagePerLimit}\n            pastor_name={pastorData[currentIndex].name}\n            pastor_role={pastorData[currentIndex].role}\n            pastor_image={\n              pastorData[currentIndex].image || '/source/pastor_upload.svg'\n            }\n          />\n        )}\n        {showCreateModal && (\n          <PastorCreateModal\n            refresh={refresh}\n            setRefresh={setRefresh}\n            onCloseModal={handleCloseCreateModal}\n          />\n        )}\n        {showPatchOrderModal && (\n          <PatchOrderModal onCloseModal={handleCloseOrderModal} />\n        )}\n      </InnerBoxContainer>\n      <div\n        style={{\n          height: '24px',\n        }}\n      />\n    </MainContainer>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-information/history/index.tsx",["502","503","504","505"],[],"import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useState, useRef } from 'react'\nimport { CreateModal } from './create-modal/modal'\nimport { PatchModal } from './patch-modal/modal'\nimport { setAuthToken } from '../../../../api'\nimport { getHistory } from '../../../../api/admin-history'\n\nimport { usePage } from '../../../../hooks/usePage'\nimport { Page } from '../../../../component/page'\nimport {\n  InnerBoxContainer,\n  InnerBoxHeader,\n  InnerBoxTitle,\n  MainContainer,\n  Margin36,\n} from '../../../../component/styledComponent'\nimport { useErrorNavigator } from '../../../../error-pages/useErrorNavigator'\n\nconst ModifyButtonBox = styled.div`\n  display: flex;\n  gap: 16px;\n`\n\nconst ModifyButton = styled.button`\n  width: 120px;\n  height: 40px;\n  border-radius: 16px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  text-align: center;\n  cursor: pointer;\n`\n\nconst AddButtonBox = styled.div`\n  margin-top: 36px;\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n`\n\nconst AddButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 72px;\n  border-radius: 16px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 24px;\n  color: #5500dd;\n  text-align: center;\n  cursor: pointer;\n`\n\nconst buttonStyle = `\n  width: 100%;\n  height: 48px;\n  border-radius: 16px;\n  font-family: \"Spoqa Han Sans Neo\", 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  text-align: center;\n  cursor: pointer;\n`\n\nconst HistoryBoxContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 36px;\n  width: 100%;\n  align-items: center;\n`\n\nconst InfoBox = styled.div`\n  align-items: center;\n  display: flex;\n  padding: 16px;\n  text-align: left;\n  background: #f7f0ff;\n  border-radius: 16px;\n`\n\nconst InfoTitle = styled.div`\n  margin-left: 8px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  color: #454648;\n  line-height: 24px;\n`\n\nconst HistoryBoxDot = styled.div`\n  width: 16px;\n  height: 16px;\n  border-radius: 100px;\n  background: #5500dd;\n  margin-right: 24px;\n`\nconst HistoryBoxEmptyDot = styled.div`\n  width: 16px;\n  height: 16px;\n  border-radius: 100px;\n  background: #ffffff;\n  margin-right: 24px;\n`\nconst HistoryBoxDate = styled.text`\n  width: 108px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 16px;\n  color: #000000;\n  text-align: left;\n`\nconst HistoryBoxContent = styled.text`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 16px;\n  color: #454648;\n  text-align: left;\n`\n\ninterface HistoryBoxProps {\n  prevDate: string\n  date: string\n  content: string\n}\nconst HistoryBox = (props: HistoryBoxProps) => {\n  const { prevDate, date, content } = props\n  return (\n    <HistoryBoxContainer>\n      {prevDate === date ? <HistoryBoxEmptyDot /> : <HistoryBoxDot />}\n      <HistoryBoxDate>{prevDate === date ? '' : date}</HistoryBoxDate>\n      <HistoryBoxContent>{content}</HistoryBoxContent>\n    </HistoryBoxContainer>\n  )\n}\n\ninterface History {\n  church_history_id: string\n  date: string\n  content: string\n}\nconst pagePerLimit = 14\nexport const InnerHistoryPage: React.FC = () => {\n  const [refresh, setRefresh] = useState(false)\n  const [showPatchModal, setShowPatchModal] = useState(false)\n  const [showCreateModal, setShowCreateModal] = useState(false)\n  const errorNavigator = useErrorNavigator()\n\n  const {\n    pageList,\n    currentPage,\n    maxPage,\n    getPrevPage,\n    getNextPage,\n    clickPage,\n    setMaxPage,\n  } = usePage()\n\n  const [historyData, setHistoryData] = useState<Array<History>>([\n    {\n      church_history_id: '',\n      date: '',\n      content: '',\n    },\n  ])\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      setAuthToken(token)\n    }\n\n    const fetchData = async () => {\n      const response = await getHistory((currentPage - 1) * pagePerLimit)\n      errorNavigator.navigate(response)\n      setHistoryData(response.payload.church_history_list.results)\n      setMaxPage(\n        Math.ceil(\n          response.payload.church_history_list.total_count / pagePerLimit\n        )\n      )\n    }\n    fetchData()\n  }, [refresh])\n  const getHistoryPage = async (page: number) => {\n    const response = await getHistory((page - 1) * pagePerLimit)\n    errorNavigator.navigate(response)\n    setHistoryData(response.payload.church_history_list.results)\n  }\n\n  useEffect(() => {\n    getHistoryPage(currentPage)\n  }, [currentPage])\n\n  const onClosePatchModal = () => {\n    setShowPatchModal(false)\n  }\n  return (\n    <MainContainer>\n      <InnerBoxHeader>\n        <InnerBoxTitle>교회 연혁</InnerBoxTitle>\n        <ModifyButtonBox>\n          <ModifyButton\n            onClick={() => setShowPatchModal(true)}\n            style={{\n              background: '#ffffff',\n              border: '1px solid #5500dd',\n              color: '#5500dd',\n            }}\n          >\n            수정\n          </ModifyButton>\n        </ModifyButtonBox>\n      </InnerBoxHeader>\n      <InnerBoxContainer>\n        <Margin36 />\n        <InfoBox>\n          <img\n            src=\"/source/icon/information.svg\"\n            alt=\"information\"\n            style={{ marginTop: '-24px' }}\n          />\n          <InfoTitle>\n            해당 페이지에 보이는 연혁만 수정할 수 있어요.\n            <br />\n            다른 페이지 연혁을 수정하려면 페이지를 이동해서 수정해주세요.\n          </InfoTitle>\n        </InfoBox>\n        <Margin36 />\n        {historyData &&\n          historyData.map((history, index) => {\n            return (\n              <HistoryBox\n                prevDate={index !== 0 ? historyData[index - 1].date : ''}\n                date={history.date}\n                content={history.content}\n              />\n            )\n          })}\n        <AddButtonBox>\n          <AddButton\n            onClick={() => setShowCreateModal(true)}\n            style={{\n              background: '#ffffff',\n              border: '1px solid #5500dd',\n              color: '#5500dd',\n            }}\n          >\n            <img\n              src=\"/source/icon/add.svg\"\n              alt=\"information\"\n              style={{ marginRight: '8px' }}\n            />\n            교회 연혁 추가\n          </AddButton>\n        </AddButtonBox>\n        {showPatchModal && (\n          <PatchModal\n            historyData={historyData}\n            refresh={refresh}\n            setRefresh={setRefresh}\n            onCloseModal={onClosePatchModal}\n          />\n        )}\n        {showCreateModal && (\n          <CreateModal\n            refresh={refresh}\n            setRefresh={setRefresh}\n            onCloseModal={() => setShowCreateModal(false)}\n          />\n        )}\n        <Page\n          pageList={pageList}\n          currentPage={currentPage}\n          getPrevPage={getPrevPage}\n          getNextPage={getNextPage}\n          clickPage={clickPage}\n          lastPage={maxPage}\n        />\n      </InnerBoxContainer>\n      <div\n        style={{\n          height: '24px',\n        }}\n      />\n    </MainContainer>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-weekly/list/index.tsx",["506","507"],[],"import { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { setAuthToken } from '../../../../api'\nimport { getWeekly } from '../../../../api/admin-weekly'\nimport { EmptyText } from '../../../../component/empty_text'\nimport { Page } from '../../../../component/page'\nimport { usePage } from '../../../../hooks/usePage'\nimport { WeeklyModal } from './patch-modal/modal'\nimport {\n  InnerBoxContainer,\n  InnerBoxHeader,\n  InnerBoxTitle,\n  MainContainer,\n} from '../../../../component/styledComponent'\nimport { InfoBox, infoBoxTexts } from '../../../../component/box/info'\nimport { useErrorNavigator } from '../../../../error-pages/useErrorNavigator'\n\nconst WeeklyContainer = styled.div`\n  margin-bottom: 16px;\n`\nconst WeeklyBox = styled.div`\n  border-radius: 16px;\n  height: 110px;\n  border: 1px solid #c1c2c3;\n  display: flex;\n  cursor: pointer;\n\n  &:hover {\n    border: 1px solid #000000\n`\n\nconst WeeklyImage = styled.div`\n  width: 58px;\n  height: 78px;\n  border-radius: 9px;\n  background: #000000;\n  margin-left: 24px;\n  margin-top: 16px;\n  overflow: hidden;\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`\n\nconst WeeklyInnerBox = styled.div`\n  margin-top: 15px;\n`\n\nconst WeeklyTitle = styled.div`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  text-align: left;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 24px;\n  padding: 16px 0 0 24px;\n  color: #000000;\n`\n\nconst WeeklySubTitle = styled.div`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  text-align: left;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 24px;\n  color: #797a7b;\n  padding: 0 0 0 24px;\n`\n\ninterface WeeklyData {\n  church_weekly_id: string\n  title: string\n  image: string\n  created_at: string\n  year: string\n  month: string\n}\n\ninterface WeeklyPropType {\n  refresh: boolean\n  setRefresh: Dispatch<SetStateAction<boolean>>\n}\nconst pagePerLimit = 6\nexport const InnerListPage = (props: WeeklyPropType) => {\n  const { refresh, setRefresh } = props\n  const errorNavigator = useErrorNavigator()\n  const [weeklyData, setWeeklyData] = useState<Array<WeeklyData>>([])\n  const [currentIndex, setIndex] = useState(0)\n\n  const {\n    pageList,\n    currentPage,\n    maxPage,\n    getPrevPage,\n    getNextPage,\n    clickPage,\n    setMaxPage,\n  } = usePage()\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      setAuthToken(token)\n    }\n\n    const fetchData = async () => {\n      const response = await getWeekly((currentPage - 1) * pagePerLimit)\n      errorNavigator.navigate(response)\n      setWeeklyData(response.payload.church_weekly_list.results)\n      setMaxPage(\n        Math.ceil(\n          response.payload.church_weekly_list.total_count / pagePerLimit\n        )\n      )\n    }\n    fetchData()\n  }, [refresh])\n\n  const getWeeklyPage = async (page: number) => {\n    const response = await getWeekly((page - 1) * pagePerLimit)\n    errorNavigator.navigate(response)\n    setWeeklyData(response.payload.church_weekly_list.results)\n  }\n\n  useEffect(() => {\n    getWeeklyPage(currentPage)\n  }, [currentPage])\n\n  // Modal\n  const [showModal, setShowModal] = useState(false)\n\n  const handleButtonClick = (index: number) => {\n    setShowModal(true)\n    setIndex(index)\n  }\n\n  const handleCloseModal = () => {\n    setShowModal(false)\n  }\n\n  return (\n    <MainContainer>\n      <InnerBoxHeader>\n        <InnerBoxTitle>주보 목록</InnerBoxTitle>\n      </InnerBoxHeader>\n      <InnerBoxContainer>\n        <div style={{ paddingTop: 36 }} />\n        <InfoBox text={infoBoxTexts.default} />\n        {weeklyData.length !== 0 && <div style={{ marginTop: '36px' }} />}\n        {weeklyData.length !== 0 ? (\n          weeklyData[0].title !== '' &&\n          weeklyData.map((weekly, index) => {\n            return (\n              <WeeklyContainer>\n                <WeeklyBox onClick={() => handleButtonClick(index)}>\n                  <WeeklyImage>\n                    <img src={weekly.image} alt=\"\" />\n                  </WeeklyImage>\n                  <WeeklyInnerBox>\n                    <WeeklyTitle>{weekly.title}</WeeklyTitle>\n                    <WeeklySubTitle>\n                      {weekly.created_at.substring(0, 10).replace(/-/gi, '.')}\n                    </WeeklySubTitle>\n                  </WeeklyInnerBox>\n                </WeeklyBox>\n              </WeeklyContainer>\n            )\n          })\n        ) : (\n          <EmptyText text=\"등록된 주보가 없어요.\" />\n        )}\n        {showModal && (\n          <WeeklyModal\n            refresh={refresh}\n            setRefresh={setRefresh}\n            onCloseModal={handleCloseModal}\n            church_weekly_id={weeklyData[currentIndex].church_weekly_id}\n            weekly_title={weeklyData[currentIndex].title}\n            weekly_image={weeklyData[currentIndex].image}\n            weekly_year={weeklyData[currentIndex].year}\n            weekly_month={weeklyData[currentIndex].month}\n          />\n        )}\n\n        <Page\n          pageList={pageList}\n          currentPage={currentPage}\n          getPrevPage={getPrevPage}\n          getNextPage={getNextPage}\n          clickPage={clickPage}\n          lastPage={maxPage}\n        />\n      </InnerBoxContainer>\n      <div\n        style={{\n          height: '24px',\n        }}\n      />\n    </MainContainer>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-weekly/regist/index.tsx",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/api/admin-information/index.tsx",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/api/admin-notification/index.tsx",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/api/admin-weekly/index.tsx",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/api/admin-pastor/index.tsx",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-member/index.tsx",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-weekly/list/patch-modal/modal.tsx",["508","509"],[],"import React, {\n  Dispatch,\n  SetStateAction,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport styled from 'styled-components'\nimport Select from 'react-select'\nimport { setAuthToken } from '../../../../../api'\nimport {\n  deleteChurchWeekly,\n  patchChurchWeekly,\n} from '../../../../../api/admin-weekly'\nimport {\n  InnerBoxHeader,\n  InnerBoxTitle,\n  Margin24,\n  Margin36,\n  SubTitle,\n  SubTitleColorText,\n} from '../../../../../component/styledComponent'\nimport { useErrorNavigator } from '../../../../../error-pages/useErrorNavigator'\n\nconst ModalOverlay = styled.div`\n  z-index: 1;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ModalWrapper = styled.div`\n  position: relative;\n  width: 714px;\n  background-color: #ffffff;\n  border-radius: 20px;\n`\n\nconst ModalCloseButton = styled.button`\n  top: 10px;\n  right: 20px;\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background-color: #ffffff;\n  border: none;\n  cursor: pointer;\n`\n\nconst NoticeModalContent = styled.div`\n  padding: 0 36px 0 36px;\n  // display: flex;\n\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`\n\nconst ButtonStyle = `\n  width: 100%;\n  height: 48px;\n  border-radius: 16px;\n  font-family: \"Spoqa Han Sans Neo\", 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  text-align: center;\n  cursor: pointer;\n`\n\nconst ButtonBox = styled.div`\n  margin-top: 16px;\n  display: flex;\n  gap: 28px;\n  justify-content: space-between;\n`\n\nconst UploadButton = styled.button`\n  ${ButtonStyle}\n`\n\nconst DeleteButton = styled.button`\n  ${ButtonStyle}\n`\n\nconst Image = styled.div`\n  width: 423px;\n  height: 258px;\n  padding: 16px;\n  background: #f0f1f3;\n  border-radius: 16px;\n  overflow: hidden;\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: scale-down;\n  }\n`\n\nconst InputBox = styled.input`\n  width: 100%;\n  box-sizing: border-box;\n  border-radius: 16px;\n  height: 56px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 24px;\n  border: 1px solid #c1c2c3;\n  padding: 0 78px 0 16px;\n  color: ${props => (props.value ? '#000000' : '#797a7b')};\n  &:focus {\n    outline: 2px solid #000000;\n    outline-offset: -1px;\n  }\n`\n\nconst DatePickerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst WeeklyDateSelect = styled.div`\n  width: 171px;\n  margin-top: 16px;\n  flex-direction: row;\n`\n\nconst RowContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`\n\nconst DataBox = styled.div`\n  width: 100%;\n  margin-top: 16px;\n`\n\ninterface WeeklyModalProps {\n  refresh: boolean\n  setRefresh: Dispatch<SetStateAction<boolean>>\n  onCloseModal: () => void\n  church_weekly_id: string\n  weekly_title: string\n  weekly_image: string\n  weekly_year: string\n  weekly_month: string\n}\n\nexport const WeeklyModal = (props: WeeklyModalProps) => {\n  const {\n    refresh,\n    setRefresh,\n    onCloseModal,\n    church_weekly_id,\n    weekly_title,\n    weekly_image,\n    weekly_year,\n    weekly_month,\n  } = props\n  const errorNavigator = useErrorNavigator()\n\n  var year = Number(weekly_year)\n  const yearOptions = [\n    {\n      value: (year - 1).toString(),\n      label: '20' + (year - 1).toString() + '년',\n    },\n    { value: year.toString(), label: '20' + year.toString() + '년' },\n    {\n      value: (year + 1).toString(),\n      label: '20' + (year + 1).toString() + '년',\n    },\n  ]\n  const monthOptions = [\n    { value: '01', label: '01월' },\n    { value: '02', label: '02월' },\n    { value: '03', label: '03월' },\n    { value: '04', label: '04월' },\n    { value: '05', label: '05월' },\n    { value: '06', label: '06월' },\n    { value: '07', label: '07월' },\n    { value: '08', label: '08월' },\n    { value: '09', label: '09월' },\n    { value: '10', label: '10월' },\n    { value: '11', label: '11월' },\n    { value: '12', label: '12월' },\n  ]\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      setAuthToken(token)\n    }\n  }, [])\n  const [image, setImage] = useState(weekly_image)\n  const [title, setTitle] = useState(weekly_title)\n  const [weeklyYear, setWeeklyYear] = useState(weekly_year)\n  const [weeklyMonth, setWeeklyMonth] = useState(weekly_month)\n  const [uploadImage, setUploadImage] = useState<any>([])\n  const imageFile = useRef<HTMLInputElement>(null)\n  const openImageFile = () => {\n    if (imageFile.current) imageFile.current.click()\n  }\n  const saveImageFile = (event: any) => {\n    if (event.target.files !== null && event.target.files[0] !== undefined) {\n      setUploadImage(event.target.files[0])\n      setImage(URL.createObjectURL(event.target.files[0]))\n    }\n  }\n\n  const handleCloseModal = () => {\n    onCloseModal()\n  }\n\n  const addButtonRef = useRef<HTMLDivElement>(null)\n  const scrollRef = useRef<HTMLDivElement>(null)\n\n  const handleWrapperClick = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => {\n    event.stopPropagation()\n  }\n\n  const onClickSaveButton = async () => {\n    const response = await patchChurchWeekly(\n      uploadImage,\n      church_weekly_id,\n      title,\n      weeklyYear,\n      weeklyMonth\n    )\n    errorNavigator.navigate(response)\n    setRefresh(!refresh)\n    onCloseModal()\n  }\n  const onClickDeleteButton = async () => {\n    const response = await deleteChurchWeekly(church_weekly_id)\n    errorNavigator.navigate(response)\n    setRefresh(!refresh)\n    onCloseModal()\n  }\n\n  return (\n    <ModalOverlay onClick={handleCloseModal}>\n      <ModalWrapper onClick={handleWrapperClick}>\n        <Margin36 />\n        <InnerBoxHeader>\n          <InnerBoxTitle>주보 수정</InnerBoxTitle>\n          <ModalCloseButton onClick={onCloseModal}>\n            <img src=\"source/icon/close.svg\" alt=\"close\" />\n          </ModalCloseButton>\n        </InnerBoxHeader>\n        <Margin24 style={{ background: '#ffffff' }} />\n\n        <NoticeModalContent>\n          <SubTitle>\n            제목<SubTitleColorText> *</SubTitleColorText>\n          </SubTitle>\n          <DataBox>\n            <InputBox\n              type=\"text\"\n              value={title}\n              placeholder={'제목 입력'}\n              onChange={e => setTitle(e.target.value)}\n            />\n          </DataBox>\n          <Margin24 style={{ background: '#ffffff' }} />\n          <RowContainer>\n            <div>\n              <SubTitle>\n                날짜<SubTitleColorText> *</SubTitleColorText>\n              </SubTitle>\n\n              <DatePickerContainer>\n                <WeeklyDateSelect>\n                  <div\n                    style={{\n                      textAlign: 'left',\n                      width: '100%',\n                    }}\n                  >\n                    <Select\n                      options={yearOptions}\n                      defaultValue={yearOptions[1]}\n                      onChange={e => e && setWeeklyYear(e?.value)}\n                      isSearchable={false}\n                      theme={theme => ({\n                        ...theme,\n                        borderRadius: 12,\n                        colors: {\n                          ...theme.colors,\n                          primary25: '#F0E6FD',\n                          primary: '#5500DD',\n                          neutral20: '#C1C2C3',\n                        },\n                      })}\n                    />\n                  </div>\n                </WeeklyDateSelect>\n                <WeeklyDateSelect>\n                  <div\n                    style={{\n                      float: 'right',\n                      textAlign: 'left',\n                      width: '100%',\n                    }}\n                  >\n                    <Select\n                      options={monthOptions}\n                      defaultValue={monthOptions[Number(weeklyMonth) - 1]}\n                      onChange={e => e && setWeeklyMonth(e?.value)}\n                      isSearchable={false}\n                      theme={theme => ({\n                        ...theme,\n                        borderRadius: 12,\n                        colors: {\n                          ...theme.colors,\n                          primary25: '#F0E6FD',\n                          primary: '#5500DD',\n                          neutral20: '#C1C2C3',\n                        },\n                      })}\n                    />\n                  </div>\n                </WeeklyDateSelect>\n              </DatePickerContainer>\n            </div>\n            <Image>\n              <img src={image || 'source/no_image.svg'} alt=\"교회 로고\" />\n            </Image>\n          </RowContainer>\n\n          <Margin24 style={{ background: '#ffffff' }} />\n\n          <UploadButton\n            style={{\n              background: '#ffffff',\n              border: '1px solid #5500DD',\n              color: '#5500DD',\n            }}\n            onClick={openImageFile}\n          >\n            <input\n              type=\"file\"\n              id=\"file\"\n              ref={imageFile}\n              style={{ display: 'none' }}\n              onChange={saveImageFile}\n            />\n            이미지 변경\n          </UploadButton>\n\n          <ButtonBox>\n            <DeleteButton\n              style={{\n                background: '#ffffff',\n                border: '1px solid #D40030',\n                color: '#D40030',\n              }}\n              onClick={onClickDeleteButton}\n            >\n              삭제\n            </DeleteButton>\n            <UploadButton\n              style={{\n                background: '#5500DD',\n                border: 'NONE',\n                color: '#FFFFFF',\n              }}\n              onClick={onClickSaveButton}\n            >\n              저장\n            </UploadButton>\n          </ButtonBox>\n        </NoticeModalContent>\n        <Margin36 />\n      </ModalWrapper>\n    </ModalOverlay>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-notification/list/patch-modal/modal.tsx",["510"],[],"import React, {\n  Dispatch,\n  SetStateAction,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport styled from 'styled-components'\nimport { setAuthToken } from '../../../../../api'\nimport {\n  deleteChurchNotification,\n  patchChurchNotification,\n} from '../../../../../api/admin-notification'\nimport {\n  InnerBoxHeader,\n  InnerBoxTitle,\n  Margin16,\n  Margin24,\n  Margin36,\n} from '../../../../../component/styledComponent'\nimport { useErrorNavigator } from '../../../../../error-pages/useErrorNavigator'\n\nconst ModalOverlay = styled.div`\n  z-index: 1;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst DataContainer = styled.div`\n  padding: 0 36px 0 36px;\n`\n\nconst ButtonContainer = styled.div`\n  width: 218px;\n  height: 360px;\n  display: flex;\n  flex-direction: column;\n`\n\nconst ButtonBox = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n  padding: 0 36px 0 36px;\n`\n\nconst ModalWrapper = styled.div`\n  // position: relative;\n  width: 714px;\n  background-color: #ffffff;\n  border-radius: 20px;\n`\n\nconst ModalCloseButton = styled.button`\n  top: 10px;\n  right: 20px;\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background-color: #ffffff;\n  border: none;\n  cursor: pointer;\n`\n\nconst NoticeModalContent = styled.div`\n  display: flex;\n  gap: 24px;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`\n\nconst ButtonStyle = `\n  width: 100%;\n  height: 48px;\n  border-radius: 16px;\n  font-family: \"Spoqa Han Sans Neo\", 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  text-align: center;\n  cursor: pointer;\n`\n\nconst UploadButton = styled.button`\n  ${ButtonStyle}\n`\n\nconst DeleteButton = styled.button`\n  ${ButtonStyle}\n`\n\nconst Image = styled.div`\n  width: 400px;\n  height: 360px;\n  background: #f0f1f3;\n  border-radius: 16px;\n  overflow: hidden;\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`\n\nconst InputBox = styled.input`\n  width: 100%;\n  box-sizing: border-box;\n  margin-top: 16px;\n  border-radius: 16px;\n  height: 56px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 24px;\n  border: 1px solid #c1c2c3;\n  padding: 0 78px 0 16px;\n  color: ${props => (props.value ? '#000000' : '#797a7b')};\n  &:focus {\n    outline: 2px solid #000000;\n    outline-offset: -1px;\n  }\n`\n\nconst InputSubBox = styled.textarea`\n  width: 100%;\n  box-sizing: border-box;\n  margin-top: 16px;\n  border-radius: 16px;\n  height: 140px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n  border: 1px solid #c1c2c3;\n  padding: 16px;\n  color: ${props => (props.value ? '#000000' : '#797a7b')};\n  resize: none;\n  overflow: auto;\n  &:focus {\n    outline: 2px solid #000000;\n    outline-offset: -1px;\n  }\n`\n\nconst SubTitleText = styled.div`\n  text-align: left;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 32px;\n  color: #000000;\n`\n\nconst DataBox = styled.div`\n  width: 100%;\n`\n\ninterface NoticeModalProps {\n  refresh: boolean\n  setRefresh: Dispatch<SetStateAction<boolean>>\n  onCloseModal: () => void\n  church_notice_id: string\n  notice_title: string\n  notice_content: string\n  notice_image: string\n}\n\nexport const NoticeModal = (props: NoticeModalProps) => {\n  const {\n    refresh,\n    setRefresh,\n    onCloseModal,\n    church_notice_id,\n    notice_title,\n    notice_content,\n    notice_image,\n  } = props\n  const errorNavigator = useErrorNavigator()\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      setAuthToken(token)\n    }\n  }, [])\n\n  const [image, setImage] = useState(notice_image)\n  const [title, setTitle] = useState(notice_title)\n  const [content, setContent] = useState(notice_content)\n  const [uploadImage, setUploadImage] = useState<any>([])\n  const imageFile = useRef<HTMLInputElement>(null)\n  const openImageFile = () => {\n    if (imageFile.current) imageFile.current.click()\n  }\n  const saveImageFile = (event: any) => {\n    if (event.target.files !== null && event.target.files[0] !== undefined) {\n      setUploadImage(event.target.files[0])\n      setImage(URL.createObjectURL(event.target.files[0]))\n    }\n  }\n  const deleteImageFile = () => {\n    setImage('')\n    setUploadImage([false])\n  }\n\n  const handleCloseModal = () => {\n    onCloseModal()\n  }\n\n  const handleWrapperClick = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => {\n    event.stopPropagation()\n  }\n\n  const onClickSaveButton = async () => {\n    const response = await patchChurchNotification(\n      uploadImage,\n      church_notice_id,\n      title,\n      content\n    )\n    errorNavigator.navigate(response)\n    setRefresh(!refresh)\n    onCloseModal()\n  }\n  const onClickDeleteButton = async () => {\n    const response = await deleteChurchNotification(church_notice_id)\n    errorNavigator.navigate(response)\n    setRefresh(!refresh)\n    onCloseModal()\n  }\n\n  return (\n    <ModalOverlay onClick={handleCloseModal}>\n      <ModalWrapper onClick={handleWrapperClick}>\n        <Margin36 />\n        <InnerBoxHeader>\n          <InnerBoxTitle>공지사항 수정</InnerBoxTitle>\n          <ModalCloseButton onClick={onCloseModal}>\n            <img src=\"source/icon/close.svg\" alt=\"close\" />\n          </ModalCloseButton>\n        </InnerBoxHeader>\n        <Margin24 style={{ background: '#ffffff' }} />\n        <NoticeModalContent>\n          <Image>\n            <img src={image || 'source/no_image.svg'} alt=\"교회 로고\" />\n          </Image>\n          <ButtonContainer>\n            <UploadButton\n              style={{\n                background: '#ffffff',\n                border: '1px solid #5500DD',\n                color: '#5500DD',\n              }}\n              onClick={openImageFile}\n            >\n              <input\n                type=\"file\"\n                id=\"file\"\n                ref={imageFile}\n                style={{ display: 'none' }}\n                onChange={saveImageFile}\n              />\n              이미지 변경\n            </UploadButton>\n            <Margin16 />\n            <DeleteButton\n              style={{\n                background: '#ffffff',\n                border: '1px solid #D40030',\n                color: '#D40030',\n              }}\n              onClick={deleteImageFile}\n            >\n              이미지 삭제\n            </DeleteButton>\n          </ButtonContainer>\n        </NoticeModalContent>\n\n        <DataContainer>\n          <DataBox>\n            <InputBox\n              type=\"text\"\n              value={title}\n              placeholder={'제목 입력'}\n              onChange={e => setTitle(e.target.value)}\n            />\n          </DataBox>\n          <DataBox>\n            <InputSubBox\n              // type=\"text\"\n              value={content}\n              placeholder={'내용 입력'}\n              onChange={e => setContent(e.target.value)}\n            />\n          </DataBox>\n        </DataContainer>\n        <Margin24 style={{ background: '#ffffff' }} />\n        <ButtonBox>\n          <DeleteButton\n            style={{\n              background: '#ffffff',\n              border: '1px solid #D40030',\n              color: '#D40030',\n            }}\n            onClick={onClickDeleteButton}\n          >\n            삭제\n          </DeleteButton>\n          <UploadButton\n            style={{\n              background: '#ffffff',\n              border: '1px solid #5500DD',\n              color: '#5500DD',\n            }}\n            onClick={onClickSaveButton}\n          >\n            저장\n          </UploadButton>\n        </ButtonBox>\n        <Margin36 />\n      </ModalWrapper>\n    </ModalOverlay>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-information/pastor/patch-modal/order/modal.tsx",["511","512","513"],[],"import React, { useCallback, useEffect, useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { setAuthToken } from '../../../../../../api'\nimport {\n  getPastorNoLimit,\n  patchChurchPastorOrder,\n} from '../../../../../../api/admin-pastor'\nimport {\n  InnerBoxHeader,\n  InnerBoxTitle,\n  Margin24,\n  Margin36,\n} from '../../../../../../component/styledComponent'\nimport { InfoBox } from '../../../../../../component/box/info'\nimport { PastorBoxOrder } from '../../pastorBoxOrder'\nimport { useErrorNavigator } from '../../../../../../error-pages/useErrorNavigator'\n\nconst ModalContentContainer = styled.div`\n  // max-height: 80vh;\n  overflow-y: auto;\n`\n\nconst ModalOverlay = styled.div`\n  z-index: 1;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ModalWrapper = styled.div`\n  position: relative;\n  width: 714px;\n  background-color: #ffffff;\n  border-radius: 20px;\n`\n\nconst ModalCloseButton = styled.button`\n  top: 10px;\n  right: 20px;\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background-color: #ffffff;\n  border: none;\n  cursor: pointer;\n`\n\nconst PastorContainer = styled.div`\n  max-height: 504px;\n`\nconst PastorTwoColumnContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-left: 36px;\n  margin-right: 36px;\n  gap: 16px;\n`\n\nconst DataContainer = styled.div`\n  padding: 0 36px 0 36px;\n  gap: 48px;\n  justify-content: space-between;\n`\ninterface PastorData {\n  church_pastor_id: string\n  order: string\n  name: string\n  role: string\n  image: string\n}\ninterface NoticeModalProps {\n  onCloseModal: () => void\n}\n\nexport const PatchOrderModal = (props: NoticeModalProps) => {\n  const { onCloseModal } = props\n  const errorNavigator = useErrorNavigator()\n  const [pastorData, setPastorData] = useState<Array<PastorData>>([])\n  const currentDragIndex = useRef<number>(-1)\n\n  const NoActive = (event: any) => {\n    event.preventDefault()\n    event.stopPropagation()\n  }\n  const movePastor = async (startIndex: number, endIndex: number) => {\n    if (startIndex !== endIndex) {\n      var index = startIndex < endIndex ? endIndex + 1 : endIndex\n      const response = await patchChurchPastorOrder(\n        pastorData[startIndex].church_pastor_id,\n        index\n      )\n      errorNavigator.navigate(response)\n      const pastors = [...pastorData]\n      const moveData = pastors.splice(startIndex, 1)\n      pastors.splice(endIndex, 0, moveData[0])\n      setPastorData(pastors)\n    }\n  }\n\n  const onDrop = (event: any, index: number) => {\n    if (index === -1) {\n      currentDragIndex.current = -1\n    } else {\n      movePastor(currentDragIndex.current, index)\n      currentDragIndex.current = -1\n    }\n  }\n  const onDragEnter = (event: any, index: number) => {\n    if (currentDragIndex.current === -1) currentDragIndex.current = index\n  }\n\n  const handleCloseModal = () => {\n    onCloseModal()\n  }\n\n  const handleWrapperClick = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => {\n    event.stopPropagation()\n  }\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      setAuthToken(token)\n    }\n\n    const fetchData = async () => {\n      const response = await getPastorNoLimit()\n      errorNavigator.navigate(response)\n      setPastorData(response.payload.church_pastor_list.results)\n    }\n    fetchData()\n  }, [])\n\n  useEffect(() => {\n    document.body.style.cssText = `\n      position: fixed; \n      top: -${window.scrollY}px;\n      overflow-y: scroll;\n      width: 100%;`\n    return () => {\n      const scrollY = document.body.style.top\n      document.body.style.cssText = ''\n      window.scrollTo(0, parseInt(scrollY || '0', 10) * -1)\n    }\n  }, [])\n\n  const OrderPastor = useCallback(() => {\n    const loopCount = Math.ceil(pastorData.length / 2)\n    return (\n      <PastorContainer\n        onDragOver={event => NoActive(event)}\n        onDrop={event => onDrop(event, -1)}\n        onDragEnter={event => NoActive(event)}\n        onDragLeave={event => NoActive(event)}\n      >\n        {pastorData.length !== 0 &&\n          pastorData.map((pastor, index) => {\n            if (loopCount > index) {\n              return (\n                <PastorTwoColumnContainer>\n                  <PastorBoxOrder\n                    key={pastorData[index * 2].church_pastor_id}\n                    index={index * 2}\n                    image={\n                      pastorData[index * 2].image ||\n                      'source/no_pastor_image.svg'\n                    }\n                    name={pastorData[index * 2].name}\n                    role={pastorData[index * 2].role}\n                    changeIndex={movePastor}\n                    NoActive={NoActive}\n                    onDrop={onDrop}\n                    onDragEnter={onDragEnter}\n                  />\n                  {index * 2 < pastorData.length && (\n                    <PastorBoxOrder\n                      key={pastorData[index * 2 + 1].church_pastor_id}\n                      index={index * 2 + 1}\n                      image={\n                        pastorData[index * 2 + 1].image ||\n                        'source/no_pastor_image.svg'\n                      }\n                      name={pastorData[index * 2 + 1].name}\n                      role={pastorData[index * 2 + 1].role}\n                      changeIndex={movePastor}\n                      NoActive={NoActive}\n                      onDrop={onDrop}\n                      onDragEnter={onDragEnter}\n                    />\n                  )}\n                </PastorTwoColumnContainer>\n              )\n            }\n          })}\n      </PastorContainer>\n    )\n  }, [pastorData])\n\n  return (\n    <ModalOverlay onClick={handleCloseModal}>\n      <ModalWrapper onClick={handleWrapperClick}>\n        <Margin36 />\n        <InnerBoxHeader>\n          <InnerBoxTitle>섬기는 이 순서변경</InnerBoxTitle>\n          <ModalCloseButton onClick={onCloseModal}>\n            <img src=\"source/icon/close.svg\" alt=\"close\" />\n          </ModalCloseButton>\n        </InnerBoxHeader>\n        <Margin24 style={{ background: '#ffffff' }} />\n        <DataContainer>\n          <InfoBox text=\"순서를 변경하고 싶다면 숫자를 변경하거나, 박스를 잡고 순서를 변경할 수 있어요.\" />\n        </DataContainer>\n        <Margin24 style={{ background: '#ffffff' }} />\n        <ModalContentContainer>\n          {/* <NoticeModalContent> */}\n          <OrderPastor />\n\n          {/* </NoticeModalContent> */}\n        </ModalContentContainer>\n        <Margin36 />\n      </ModalWrapper>\n    </ModalOverlay>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/hooks/usePage.ts",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-information/pastor/patch-modal/info/modal.tsx",["514","515","516","517","518","519","520"],[],"import React, {\n  Dispatch,\n  SetStateAction,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport styled from 'styled-components'\nimport Select from 'react-select'\nimport { setAuthToken } from '../../../../../../api'\nimport { PastorBox } from '../../pastorBox'\nimport {\n  deleteChurchPastor,\n  patchChurchPastor,\n} from '../../../../../../api/admin-pastor'\nimport {\n  InnerBoxHeader,\n  InnerBoxTitle,\n  Margin24,\n  Margin36,\n} from '../../../../../../component/styledComponent'\nimport { InfoBox } from '../../../../../../component/box/info'\nimport { useErrorNavigator } from '../../../../../../error-pages/useErrorNavigator'\n\nconst ModalOverlay = styled.div`\n  z-index: 1;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ModalWrapper = styled.div`\n  position: relative;\n  width: 714px;\n  background-color: #ffffff;\n  border-radius: 20px;\n`\n\nconst DataContainer = styled.div`\n  padding: 0 36px 0 36px;\n  gap: 48px;\n  justify-content: space-between;\n`\n\nconst ModalCloseButton = styled.button`\n  top: 10px;\n  right: 20px;\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background-color: #ffffff;\n  border: none;\n  cursor: pointer;\n`\n\nconst NoticeModalContent = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`\n\nconst ButtonStyle = `\n  width: 100%;\n  height: 48px;\n  border-radius: 16px;\n  font-family: \"Spoqa Han Sans Neo\", 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  text-align: center;\n  cursor: pointer;\n`\n\nconst UploadButton = styled.button`\n  ${ButtonStyle}\n`\n\nconst DeleteButton = styled.button`\n  ${ButtonStyle}\n`\n\nconst WeeklyDateSelect = styled.div`\n  width: 303px;\n  height: 56px;\n`\n\nconst Image = styled.div`\n  margin-top: 24px;\n  width: 202px;\n  height: 202px;\n  background: #f0f1f3;\n  border-radius: 16px;\n  overflow: hidden;\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`\n\nconst InputBox = styled.input`\n  width: 100%;\n  box-sizing: border-box;\n  margin-top: 16px;\n  border-radius: 16px;\n  height: 56px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 24px;\n  border: 1px solid #c1c2c3;\n  padding: 0 78px 0 16px;\n  color: ${props => (props.value ? '#000000' : '#797a7b')};\n  &:focus {\n    outline: 2px solid #000000;\n    outline-offset: -1px;\n  }\n`\n\nconst SubTitleText = styled.div`\n  text-align: left;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 32px;\n  color: #000000;\n`\n\nconst DataBox = styled.div`\n  width: 100%;\n`\n\nconst ButtonBox = styled.div`\n  margin-top: 16px;\n  display: flex;\n  gap: 28px;\n  justify-content: space-between;\n`\n\nconst ButtonDataContainer = styled.div`\n  padding: 0 36px 0 36px;\n  gap: 48px;\n  justify-content: space-between;\n`\n\ninterface PastorModalProps {\n  refresh: boolean\n  setRefresh: Dispatch<SetStateAction<boolean>>\n  onCloseModal: () => void\n  church_pastor_id: string\n  pastor_index: number\n  pastor_name: string\n  pastor_role: string\n  pastor_image: string\n}\n\nexport const PastorInfoModal = (props: PastorModalProps) => {\n  const {\n    refresh,\n    setRefresh,\n    onCloseModal,\n    church_pastor_id,\n    pastor_index,\n    pastor_name,\n    pastor_role,\n    pastor_image,\n  } = props\n  const errorNavigator = useErrorNavigator()\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      setAuthToken(token)\n    }\n  }, [])\n  const [image, setImage] = useState(pastor_image)\n  const [name, setName] = useState(pastor_name)\n  const [role, setRole] = useState(pastor_role)\n  const [uploadImage, setUploadImage] = useState<any>([])\n\n  const saveImageFile = (event: any, index: number) => {\n    if (event.target.files !== null && event.target.files[0] !== undefined) {\n      setUploadImage(event.target.files[0])\n      setImage(URL.createObjectURL(event.target.files[0]))\n    }\n  }\n\n  const handleCloseModal = () => {\n    onCloseModal()\n  }\n\n  const handleWrapperClick = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => {\n    event.stopPropagation()\n  }\n\n  const onClickSaveButton = async () => {\n    const response = await patchChurchPastor(\n      church_pastor_id,\n      name,\n      role,\n      uploadImage\n    )\n    errorNavigator.navigate(response)\n    setRefresh(!refresh)\n    onCloseModal()\n  }\n  const onClickDeleteButton = async () => {\n    const response = await deleteChurchPastor(church_pastor_id)\n    errorNavigator.navigate(response)\n    setRefresh(!refresh)\n    onCloseModal()\n  }\n  const changeName = (index: number, name: string) => {\n    setName(name)\n    // setRender(!render)\n  }\n  const changeRole = (index: number, role: string) => {\n    setRole(role)\n    // setRender(!render)\n  }\n\n  return (\n    <ModalOverlay onClick={handleCloseModal}>\n      <ModalWrapper onClick={handleWrapperClick}>\n        <Margin36 />\n        <InnerBoxHeader>\n          <InnerBoxTitle>섬기는 이 수정</InnerBoxTitle>\n          <ModalCloseButton onClick={onCloseModal}>\n            <img src=\"source/icon/close.svg\" alt=\"close\" />\n          </ModalCloseButton>\n        </InnerBoxHeader>\n        <Margin24 style={{ background: '#ffffff' }} />\n        <DataContainer>\n          <InfoBox text=\"이미지를 클릭하면 이미지를 변경할 수 있어요.\" />\n        </DataContainer>\n        <Margin24 style={{ background: '#ffffff' }} />\n        <NoticeModalContent>\n          <PastorBox\n            index={pastor_index}\n            image={image || 'source/no_image.svg'}\n            name={name}\n            role={role}\n            saveImageFile={saveImageFile}\n            changeName={changeName}\n            changeRole={changeRole}\n          />\n        </NoticeModalContent>\n        <ButtonDataContainer>\n          <ButtonBox>\n            <DeleteButton\n              style={{\n                background: '#ffffff',\n                border: '1px solid #D40030',\n                color: '#D40030',\n              }}\n              onClick={onClickDeleteButton}\n            >\n              삭제\n            </DeleteButton>\n            <UploadButton\n              style={{\n                background: '#5500DD',\n                border: 'none',\n                color: '#ffffff',\n              }}\n              onClick={onClickSaveButton}\n            >\n              저장\n            </UploadButton>\n          </ButtonBox>\n        </ButtonDataContainer>\n        <Margin36 />\n      </ModalWrapper>\n    </ModalOverlay>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-information/pastor/create-modal/modal.tsx",["521","522","523","524","525","526"],[],"import React, {\n  Dispatch,\n  SetStateAction,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport styled from 'styled-components'\nimport Select from 'react-select'\nimport { setAuthToken } from '../../../../../api'\nimport { Ref } from 'react'\nimport { PastorBox } from '../pastorBox'\nimport { createChurchPastors } from '../../../../../api/admin-pastor'\nimport {\n  InnerBoxHeader,\n  InnerBoxTitle,\n  Margin24,\n  Margin36,\n} from '../../../../../component/styledComponent'\nimport { useErrorNavigator } from '../../../../../error-pages/useErrorNavigator'\n\nconst ModalOverlay = styled.div`\n  z-index: 1;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ModalWrapper = styled.div`\n  position: relative;\n  width: 714px;\n  background-color: #ffffff;\n  border-radius: 20px;\n`\n\nconst ModalCloseButton = styled.button`\n  top: 10px;\n  right: 20px;\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background-color: #ffffff;\n  border: none;\n  cursor: pointer;\n`\n\nconst NoticeModalContent = styled.div`\n  justify-content: center;\n  max-height: 300px;\n  overflow-y: auto;\n`\n\nconst ButtonStyle = `\n  width: 100%;\n  height: 48px;\n  border-radius: 16px;\n  font-family: \"Spoqa Han Sans Neo\", 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  text-align: center;\n  cursor: pointer;\n`\n\nconst UploadButton = styled.button`\n  ${ButtonStyle}\n`\n\nconst DeleteButton = styled.button`\n  ${ButtonStyle}\n`\n\nconst WeeklyDateSelect = styled.div`\n  width: 303px;\n  height: 56px;\n`\n\nconst Image = styled.div`\n  margin-top: 24px;\n  width: 40px;\n  height: 60px;\n  background: #f0f1f3;\n  border-radius: 16px;\n  overflow: hidden;\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`\n\nconst InputBox = styled.input`\n  width: 200px;\n  box-sizing: border-box;\n  margin-top: 16px;\n  border-radius: 16px;\n  height: 56px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 24px;\n  border: 1px solid #c1c2c3;\n  padding: 0 78px 0 16px;\n  color: ${props => (props.value ? '#000000' : '#797a7b')};\n  &:focus {\n    outline: 2px solid #000000;\n    outline-offset: -1px;\n  }\n`\n\nconst SubTitleText = styled.div`\n  text-align: left;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 32px;\n  color: #000000;\n`\n\nconst DataBox = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: 'row';\n`\n\nconst DataContainer = styled.div`\n  padding: 24px 36px 0 36px;\n  gap: 48px;\n  justify-content: space-between;\n`\n\nconst ButtonDataContainer = styled.div`\n  padding: 0 36px 0 36px;\n  gap: 48px;\n  justify-content: space-between;\n`\nconst AddButtonBox = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n`\n\nconst AddButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 56px;\n  border-radius: 16px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 24px;\n  color: #5500dd;\n  text-align: center;\n  cursor: pointer;\n`\n\nconst ButtonBox = styled.div`\n  margin-top: 16px;\n  display: flex;\n  gap: 28px;\n  justify-content: space-between;\n`\n\nconst InfoBox = styled.div`\n  align-items: center;\n  display: flex;\n  padding: 16px;\n  text-align: left;\n  background: #f7f0ff;\n  border-radius: 16px;\n`\n\nconst InfoTitle = styled.div`\n  margin-left: 8px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  color: #454648;\n  line-height: 24px;\n`\n\ninterface PastorModalProps {\n  refresh: boolean\n  setRefresh: Dispatch<SetStateAction<boolean>>\n  onCloseModal: () => void\n}\n\ninterface Pastor {\n  name: string\n  role: string\n  image: string\n  uploadImage: File | undefined\n}\n\nexport const PastorCreateModal = (props: PastorModalProps) => {\n  const { refresh, setRefresh, onCloseModal } = props\n  const errorNavigator = useErrorNavigator()\n  const pastorInit = {\n    name: '',\n    role: '',\n    image: '',\n    uploadImage: undefined,\n  }\n\n  const addButtonRef = useRef<HTMLDivElement>(null)\n  const scrollRef = useRef<HTMLDivElement>(null)\n\n  const handleCloseModal = () => {\n    onCloseModal()\n  }\n\n  const handleWrapperClick = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => {\n    event.stopPropagation()\n  }\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      setAuthToken(token)\n    }\n  }, [])\n  const [render, setRender] = useState(false)\n  const [pastorList, setPastorList] = useState<Array<Pastor>>([pastorInit])\n\n  const saveImageFile = (event: any, index: number) => {\n    if (event.target.files !== null && event.target.files[0] !== undefined) {\n      pastorList[index] = {\n        ...pastorList[index],\n        uploadImage: event.target.files[0],\n      }\n      pastorList[index] = {\n        ...pastorList[index],\n        image: URL.createObjectURL(event.target.files[0]),\n      }\n      setPastorList(pastorList)\n      setRender(!render)\n    }\n  }\n  const changeName = (index: number, name: string) => {\n    pastorList[index] = { ...pastorList[index], name: name }\n    setPastorList(pastorList)\n    setRender(!render)\n  }\n  const changeRole = (index: number, role: string) => {\n    pastorList[index] = { ...pastorList[index], role: role }\n    setPastorList(pastorList)\n    setRender(!render)\n  }\n\n  const onClickSaveButton = async () => {\n    const pastor_list = []\n    const image_list = []\n    for (let i = 0; i < pastorList.length; i++) {\n      if (pastorList[i].name.length !== 0 && pastorList[i].role.length !== 0) {\n        if (pastorList[i].image.length !== 0) {\n          pastor_list.push({\n            name: pastorList[i].name,\n            role: pastorList[i].role,\n            image_state: 'update',\n          })\n          image_list.push(pastorList[i].uploadImage)\n        } else {\n          pastor_list.push({\n            name: pastorList[i].name,\n            role: pastorList[i].role,\n          })\n        }\n      }\n    }\n    const response = await createChurchPastors(pastor_list, image_list)\n    errorNavigator.navigate(response)\n    setRefresh(!refresh)\n    onCloseModal()\n  }\n\n  return (\n    <ModalOverlay onClick={handleCloseModal}>\n      <ModalWrapper onClick={handleWrapperClick}>\n        <Margin36 />\n        <InnerBoxHeader>\n          <InnerBoxTitle>섬기는 이 추가</InnerBoxTitle>\n          <ModalCloseButton onClick={onCloseModal}>\n            <img src=\"source/icon/close.svg\" alt=\"close\" />\n          </ModalCloseButton>\n        </InnerBoxHeader>\n        <DataContainer>\n          <InfoBox>\n            <img\n              src=\"/source/icon/information.svg\"\n              alt=\"information\"\n              style={{ marginTop: '-24px' }}\n            />\n            <InfoTitle>\n              등록한 순서대로 목록이 나열되니 먼저 보여질 인원을 가장 먼저\n              등록해주세요.\n              <br />\n              만약 순서를 변경하고 싶다면 [순서 변경]에서 순서를 변경해주세요.\n            </InfoTitle>\n          </InfoBox>\n        </DataContainer>\n        <Margin24 style={{ background: '#ffffff' }} />\n        <NoticeModalContent ref={scrollRef}>\n          {pastorList.map((pastor, index) => (\n            <div\n              key={index}\n              style={{\n                fontWeight: '700',\n                fontSize: '20px',\n                lineHeight: '28px',\n              }}\n            >\n              <DataBox>\n                <PastorBox\n                  index={index}\n                  image={pastor.image || '/source/icon/pastor_upload_image.svg'}\n                  name={pastor.name}\n                  role={pastor.role}\n                  saveImageFile={saveImageFile}\n                  changeName={changeName}\n                  changeRole={changeRole}\n                />\n              </DataBox>\n            </div>\n          ))}\n          <div ref={addButtonRef}></div>\n        </NoticeModalContent>\n\n        <Margin24 style={{ background: '#ffffff' }} />\n\n        <ButtonDataContainer>\n          <AddButtonBox>\n            <AddButton\n              onClick={() => setPastorList([...pastorList, pastorInit])}\n              style={{\n                background: '#ffffff',\n                border: '1px solid #5500dd',\n                color: '#5500dd',\n              }}\n            >\n              <img\n                src=\"/source/icon/add.svg\"\n                alt=\"information\"\n                style={{ marginRight: '8px' }}\n              />\n              섬기는 이 추가\n            </AddButton>\n          </AddButtonBox>\n          <ButtonBox>\n            <DeleteButton\n              style={{\n                background: '#ffffff',\n                border: '1px solid #C1C2C3',\n                color: '#797A7B',\n              }}\n              onClick={onCloseModal}\n            >\n              취소\n            </DeleteButton>\n            <UploadButton\n              style={{\n                background: '#5500DD',\n                border: 'none',\n                color: '#ffffff',\n              }}\n              onClick={onClickSaveButton}\n            >\n              저장\n            </UploadButton>\n          </ButtonBox>\n        </ButtonDataContainer>\n        <Margin36 />\n      </ModalWrapper>\n    </ModalOverlay>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-information/pastor/pastorBox.tsx",["527","528","529","530"],[],"import { Dispatch, SetStateAction, useRef, useState } from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  height: 110px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  border: 1px solid #c1c2c3;\n  border-radius: 16px;\n  padding-left: 24px;\n  margin-bottom: 16px;\n  margin-left: 36px;\n  margin-right: 36px;\n`\nconst IndexIndicator = styled.text`\n  font-family: 'Spoqa Han Sans Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 28px;\n  color: #5500dd;\n`\nconst Image = styled.div`\n  width: 58px;\n  height: 78px;\n  background: #f0f1f3;\n  border-radius: 8px;\n  border: none;\n  overflow: hidden;\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n  margin-left: 24px;\n  cursor: pointer;\n  margin-right: 24px;\n`\nconst InputBox = styled.input`\n  width: 226px;\n  box-sizing: border-box;\n  border-radius: 16px;\n  height: 56px;\n  font-family: 'Spoqa Han Sans Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  border: 1px solid #c1c2c3;\n  padding: 0 78px 0 16px;\n  color: ${props => (props.value ? '#000000' : '#797a7b')};\n  &:focus {\n    outline: 2px solid #000000;\n    outline-offset: -1px;\n  }\n  margin-right: 24px;\n`\n\ninterface PastorImageProps {\n  index: number\n  image: string\n  name: string\n  role: string\n  saveImageFile: Function\n  changeName: Function\n  changeRole: Function\n}\n\nexport const PastorBox = (props: PastorImageProps) => {\n  const { index, saveImageFile, image, name, role, changeName, changeRole } =\n    props\n  const imageFile = useRef<HTMLInputElement>(null)\n  const openImageFile = () => {\n    if (imageFile.current) imageFile.current.click()\n  }\n\n  return (\n    <Container>\n      <IndexIndicator>{index + 1}</IndexIndicator>\n      <Image\n        style={{\n          background: '#ffffff',\n        }}\n        onClick={openImageFile}\n      >\n        <input\n          type=\"file\"\n          id=\"file\"\n          ref={imageFile}\n          style={{ display: 'none' }}\n          onChange={e => saveImageFile(e, index)}\n        />\n        <img\n          src={image === '' ? '/source/icon/pastor_upload_image.svg' : image}\n        />\n      </Image>\n      <InputBox\n        type=\"text\"\n        value={name}\n        placeholder={'제목 입력'}\n        onChange={e => changeName(index, e.target.value)}\n      />\n      <InputBox\n        type=\"text\"\n        value={role}\n        placeholder={'직분 입력'}\n        onChange={e => changeRole(index, e.target.value)}\n      />\n    </Container>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-information/history/create-modal/modal.tsx",["531","532","533","534","535","536"],[],"import React, {\n  Dispatch,\n  SetStateAction,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport styled from 'styled-components'\nimport { setAuthToken } from '../../../../../api'\nimport { HistoryInputBox } from '../historyInputBox'\nimport { createChurchHistories } from '../../../../../api/admin-history'\nimport {\n  InnerBoxHeader,\n  InnerBoxTitle,\n  Margin24,\n  Margin36,\n} from '../../../../../component/styledComponent'\nimport { useErrorNavigator } from '../../../../../error-pages/useErrorNavigator'\n\nconst ModalOverlay = styled.div`\n  z-index: 1;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ModalWrapper = styled.div`\n  position: relative;\n  width: 714px;\n  background-color: #ffffff;\n  border-radius: 20px;\n`\n\nconst ButtonDataContainer = styled.div`\n  padding: 0 36px 0 36px;\n  gap: 48px;\n  justify-content: space-between;\n`\n\nconst ModalCloseButton = styled.button`\n  top: 10px;\n  right: 20px;\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background-color: #ffffff;\n  border: none;\n  cursor: pointer;\n`\n\nconst ButtonBox = styled.div`\n  margin-top: 16px;\n  display: flex;\n  gap: 28px;\n  justify-content: space-between;\n`\n\nconst NoticeModalContent = styled.div`\n  justify-content: center;\n  max-height: 300px;\n  overflow-y: auto;\n`\n\nconst ButtonStyle = `\n  width: 100%;\n  height: 48px;\n  border-radius: 16px;\n  font-family: \"Spoqa Han Sans Neo\", 'Apple SD Gothic Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  text-align: center;\n  cursor: pointer;\n`\n\nconst UploadButton = styled.button`\n  ${ButtonStyle}\n`\n\nconst DeleteButton = styled.button`\n  ${ButtonStyle}\n`\n\nconst WeeklyDateSelect = styled.div`\n  width: 303px;\n  height: 56px;\n`\n\nconst Image = styled.div`\n  margin-top: 24px;\n  width: 40px;\n  height: 60px;\n  background: #f0f1f3;\n  border-radius: 16px;\n  overflow: hidden;\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`\n\nconst InputBox = styled.input`\n  width: 200px;\n  box-sizing: border-box;\n  margin-top: 16px;\n  border-radius: 16px;\n  height: 56px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 24px;\n  border: 1px solid #c1c2c3;\n  padding: 0 78px 0 16px;\n  color: ${props => (props.value ? '#000000' : '#797a7b')};\n  &:focus {\n    outline: 2px solid #000000;\n    outline-offset: -1px;\n  }\n`\n\nconst SubTitleText = styled.div`\n  text-align: left;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 32px;\n  color: #000000;\n`\n\nconst DataBox = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: 'row';\n`\n\nconst DataContainer = styled.div`\n  padding: 48px 0 0 48px;\n  width: calc(100% - 96px);\n  gap: 48px;\n  justify-content: space-between;\n`\n\nconst AddButtonBox = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n`\n\nconst AddButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 56px;\n  border-radius: 16px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 24px;\n  color: #5500dd;\n  text-align: center;\n  cursor: pointer;\n`\n\ninterface HistoryModalProps {\n  refresh: boolean\n  setRefresh: Dispatch<SetStateAction<boolean>>\n  onCloseModal: () => void\n}\n\ninterface History {\n  date: string\n  content: string\n}\n\nexport const CreateModal = (props: HistoryModalProps) => {\n  const { refresh, setRefresh, onCloseModal } = props\n  const historyInit = {\n    date: '',\n    content: '',\n  }\n  const errorNavigator = useErrorNavigator()\n\n  const addButtonRef = useRef<HTMLDivElement>(null)\n  const scrollRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      setAuthToken(token)\n    }\n  }, [])\n  const [render, setRender] = useState(false)\n  const [historyList, setHistoryList] = useState<Array<History>>([historyInit])\n\n  const changeDate = (index: number, date: string) => {\n    historyList[index] = { ...historyList[index], date: date }\n    setHistoryList(historyList)\n    setRender(!render)\n  }\n  const changeContent = (index: number, content: string) => {\n    historyList[index] = { ...historyList[index], content: content }\n    setHistoryList(historyList)\n    setRender(!render)\n  }\n  const deleteHistroy = (index: number) => {\n    historyList.splice(index, 1)\n    setHistoryList(historyList)\n    setRender(!render)\n  }\n\n  const handleCloseModal = () => {\n    onCloseModal()\n  }\n  console.log(historyList)\n\n  const handleWrapperClick = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => {\n    event.stopPropagation()\n  }\n\n  const onClickSaveButton = async () => {\n    const history_list = []\n    for (let i = 0; i < historyList.length; i++) {\n      if (historyList[i].content !== '' && historyList[i].date.length === 10) {\n        var history = historyList[i]\n        history_list.push({\n          content: history.content,\n          year: history.date.slice(0, 4),\n          month: history.date.slice(5, 7),\n          day: history.date.slice(8),\n        })\n      }\n    }\n    const response = await createChurchHistories(history_list)\n    errorNavigator.navigate(response)\n    setRefresh(!refresh)\n    onCloseModal()\n  }\n\n  return (\n    <ModalOverlay onClick={handleCloseModal}>\n      <ModalWrapper onClick={handleWrapperClick}>\n        <Margin36 />\n        <InnerBoxHeader>\n          <InnerBoxTitle>교회 연혁 추가</InnerBoxTitle>\n          <ModalCloseButton onClick={onCloseModal}>\n            <img src=\"source/icon/close.svg\" alt=\"close\" />\n          </ModalCloseButton>\n        </InnerBoxHeader>\n\n        <Margin24 style={{ background: '#ffffff' }} />\n\n        <NoticeModalContent ref={scrollRef}>\n          {historyList &&\n            historyList.map((history, index) => {\n              return (\n                <HistoryInputBox\n                  index={index}\n                  date={history.date}\n                  content={history.content}\n                  changeDate={changeDate}\n                  changeContent={changeContent}\n                  deleteHistroy={deleteHistroy}\n                />\n              )\n            })}\n          <div ref={addButtonRef}></div>\n        </NoticeModalContent>\n\n        <Margin24 style={{ background: '#ffffff' }} />\n\n        <ButtonDataContainer>\n          <AddButtonBox>\n            <AddButton\n              onClick={() => setHistoryList([...historyList, historyInit])}\n              style={{\n                background: '#ffffff',\n                border: '1px solid #5500dd',\n                color: '#5500dd',\n              }}\n            >\n              <img\n                src=\"/source/icon/add.svg\"\n                alt=\"information\"\n                style={{ marginRight: '8px' }}\n              />\n              교회 연혁 추가\n            </AddButton>\n          </AddButtonBox>\n\n          <ButtonBox>\n            <DeleteButton\n              style={{\n                background: '#ffffff',\n                border: '1px solid #C1C2C3',\n                color: '#797A7B',\n              }}\n              onClick={onCloseModal}\n            >\n              취소\n            </DeleteButton>\n            <UploadButton\n              style={{\n                background: '#5500DD',\n                border: 'none',\n                color: '#ffffff',\n              }}\n              onClick={onClickSaveButton}\n            >\n              저장\n            </UploadButton>\n          </ButtonBox>\n        </ButtonDataContainer>\n        <Margin36 />\n      </ModalWrapper>\n    </ModalOverlay>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-information/history/patch-modal/modal.tsx",["537","538","539","540","541","542","543","544"],[],"import React, {\n  Dispatch,\n  SetStateAction,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport styled from 'styled-components'\nimport { setAuthToken } from '../../../../../api'\nimport { HistoryInputBox } from '../historyInputBox'\nimport {\n  deleteChurchHistories,\n  patchChurchHistories,\n} from '../../../../../api/admin-history'\nimport {\n  InnerBoxHeader,\n  InnerBoxTitle,\n  Margin24,\n  Margin36,\n} from '../../../../../component/styledComponent'\nimport { useErrorNavigator } from '../../../../../error-pages/useErrorNavigator'\n\nconst ModalOverlay = styled.div`\n  z-index: 1;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ModalWrapper = styled.div`\n  position: relative;\n  width: 714px;\n  background-color: #ffffff;\n  border-radius: 20px;\n`\n\nconst ButtonDataContainer = styled.div`\n  padding: 0 36px 0 36px;\n  gap: 48px;\n  justify-content: space-between;\n`\n\nconst ModalCloseButton = styled.button`\n  top: 10px;\n  right: 20px;\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background-color: #ffffff;\n  border: none;\n  cursor: pointer;\n`\n\nconst NoticeModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`\n\nconst ButtonStyle = `\n  width: 100%;\n  height: 48px;\n  border-radius: 16px;\n  font-family: \"Spoqa Han Sans Neo\", 'Apple SD Gothic Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  text-align: center;\n  cursor: pointer;\n`\n\nconst ButtonBox = styled.div`\n  margin-top: 16px;\n  display: flex;\n  gap: 28px;\n  justify-content: space-between;\n`\n\nconst UploadButton = styled.button`\n  ${ButtonStyle}\n`\n\nconst DeleteButton = styled.button`\n  ${ButtonStyle}\n`\n\nconst WeeklyDateSelect = styled.div`\n  width: 303px;\n  height: 56px;\n`\n\nconst Image = styled.div`\n  margin-top: 24px;\n  width: 40px;\n  height: 60px;\n  background: #f0f1f3;\n  border-radius: 16px;\n  overflow: hidden;\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`\n\nconst InputBox = styled.input`\n  width: 200px;\n  box-sizing: border-box;\n  margin-top: 16px;\n  border-radius: 16px;\n  height: 56px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 24px;\n  border: 1px solid #c1c2c3;\n  padding: 0 78px 0 16px;\n  color: ${props => (props.value ? '#000000' : '#797a7b')};\n  &:focus {\n    outline: 2px solid #000000;\n    outline-offset: -1px;\n  }\n`\n\nconst SubTitleText = styled.div`\n  text-align: left;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 32px;\n  color: #000000;\n`\n\nconst DataBox = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: 'row';\n`\n\nconst DataContainer = styled.div`\n  padding: 48px 0 0 48px;\n  width: calc(100% - 96px);\n  gap: 48px;\n  justify-content: space-between;\n`\n\nconst AddButtonBox = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n`\n\nconst AddButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 72px;\n  border-radius: 16px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 24px;\n  color: #5500dd;\n  text-align: center;\n  cursor: pointer;\n`\n\ninterface HistoryModalProps {\n  historyData: Array<History>\n  refresh: boolean\n  setRefresh: Dispatch<SetStateAction<boolean>>\n  onCloseModal: () => void\n}\n\ninterface History {\n  church_history_id: string\n  date: string\n  content: string\n}\n\nexport const PatchModal = (props: HistoryModalProps) => {\n  const { historyData, refresh, setRefresh, onCloseModal } = props\n  const errorNavigator = useErrorNavigator()\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      setAuthToken(token)\n    }\n  }, [])\n  const [render, setRender] = useState(false)\n  const [historyList, setHistoryList] = useState<Array<History>>([\n    ...historyData,\n  ])\n  const [deleteHistoryList, setDeleteHistoryList] = useState<Array<string>>([])\n\n  const changeDate = (index: number, date: string) => {\n    historyList[index] = { ...historyList[index], date: date }\n    setHistoryList(historyList)\n    setRender(!render)\n  }\n  const changeContent = (index: number, content: string) => {\n    historyList[index] = { ...historyList[index], content: content }\n    setHistoryList(historyList)\n    setRender(!render)\n  }\n  const deleteHistroy = (index: number) => {\n    setDeleteHistoryList([\n      ...deleteHistoryList,\n      historyList[index].church_history_id,\n    ])\n    historyList.splice(index, 1)\n    setHistoryList(historyList)\n  }\n  console.log(historyList)\n\n  const handleCloseModal = () => {\n    onCloseModal()\n  }\n\n  const addButtonRef = useRef<HTMLDivElement>(null)\n  const scrollRef = useRef<HTMLDivElement>(null)\n\n  const handleWrapperClick = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => {\n    event.stopPropagation()\n  }\n\n  const onClickSaveButton = async () => {\n    const history_list = []\n    var deleteCount = 0\n    for (let i = 0; i < historyList.length; i++) {\n      if (deleteHistoryList.indexOf(historyData[i].church_history_id) > -1) {\n        deleteCount = deleteCount + 1\n      } else if (\n        historyList[i - deleteCount].content !== historyData[i].content ||\n        historyList[i - deleteCount].date !==\n          historyData[i].date.replaceAll('.', '-')\n      ) {\n        var history = historyList[i - deleteCount]\n        var historyObject: any = {}\n        historyObject['church_history_id'] =\n          history.church_history_id.toString()\n        if (history.content !== historyData[i].content) {\n          historyObject['content'] = history.content\n        }\n        if (history.date !== historyData[i].date.replaceAll('.', '-')) {\n          historyObject['year'] = history.date.slice(0, 4)\n          historyObject['month'] = history.date.slice(5, 7)\n          historyObject['day'] = history.date.slice(8)\n        }\n        history_list.push(historyObject)\n      }\n    }\n    const response_patch = await patchChurchHistories(history_list)\n    errorNavigator.navigate(response_patch)\n    const response_delete = await deleteChurchHistories(deleteHistoryList)\n    errorNavigator.navigate(response_delete)\n    setRefresh(!refresh)\n    onCloseModal()\n  }\n\n  return (\n    <ModalOverlay onClick={handleCloseModal}>\n      <ModalWrapper onClick={handleWrapperClick}>\n        <Margin36 />\n        <InnerBoxHeader>\n          <InnerBoxTitle>교회 연혁 수정</InnerBoxTitle>\n          <ModalCloseButton onClick={onCloseModal}>\n            <img src=\"source/icon/close.svg\" alt=\"close\" />\n          </ModalCloseButton>\n        </InnerBoxHeader>\n\n        <Margin24 style={{ background: '#ffffff' }} />\n\n        <NoticeModalContent ref={scrollRef}>\n          {historyList &&\n            historyList.map((history, index) => {\n              return (\n                <HistoryInputBox\n                  index={index}\n                  date={history.date}\n                  content={history.content}\n                  changeDate={changeDate}\n                  changeContent={changeContent}\n                  deleteHistroy={deleteHistroy}\n                />\n              )\n            })}\n          <div ref={addButtonRef}></div>\n        </NoticeModalContent>\n\n        <ButtonDataContainer>\n          <ButtonBox>\n            <DeleteButton\n              style={{\n                background: '#ffffff',\n                border: '1px solid #C1C2C3',\n                color: '#797A7B',\n              }}\n              onClick={onCloseModal}\n            >\n              취소\n            </DeleteButton>\n            <UploadButton\n              style={{\n                background: '#5500DD',\n                border: 'none',\n                color: '#ffffff',\n              }}\n              onClick={onClickSaveButton}\n            >\n              저장\n            </UploadButton>\n          </ButtonBox>\n        </ButtonDataContainer>\n        <Margin36 />\n      </ModalWrapper>\n    </ModalOverlay>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/api/admin-history/index.tsx",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/component/page/index.tsx",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-information/history/historyInputBox.tsx",["545","546","547","548","549","550","551","552"],[],"import { Dispatch, SetStateAction, useEffect, useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { useFormatDate } from '../../../../hooks/useFormatDate'\nimport { useDebounce } from '../../../../hooks/useDebounce'\nimport { InputBoxWithError } from '../../../../component/styledComponent'\n\nconst Container = styled.div`\n  width: 642px;\n  height: 56px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  border-radius: 16px;\n  // padding-left: 24px;\n  margin-bottom: 16px;\n  margin-left: 36px;\n  margin-right: 36px;\n  margin-top: 1px;\n`\n\nconst HistoryBoxDot = styled.div`\n  width: 16px;\n  height: 16px;\n  border-radius: 100px;\n  background: #5500dd;\n  margin-right: 24px;\n`\ninterface InputBoxProps {\n  error: boolean\n  value: string\n}\nconst InputDateBox = styled.input<InputBoxProps>`\n  width: 126px;\n  box-sizing: border-box;\n  border-radius: 16px;\n  height: 56px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  border: 1px solid #c1c2c3;\n  padding: 0 0 0 16px;\n  color: ${props => (props.value ? '#000000' : '#797a7b')};\n  border: 1px solid ${({ error }) => (error ? '#D40030' : '#c1c2c3')};\n  &:focus {\n    outline: 2px solid ${({ error }) => (error ? '#D40030' : '#000000')};\n    outline-offset: -1px;\n  }\n  margin-right: 24px;\n`\n\nconst InputContentBox = styled.input`\n  width: 412px;\n  box-sizing: border-box;\n  border-radius: 16px;\n  height: 56px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  border: 1px solid #c1c2c3;\n  padding: 0 78px 0 16px;\n  color: ${props => (props.value ? '#000000' : '#797a7b')};\n  &:focus {\n    outline: 2px solid #000000;\n    outline-offset: -1px;\n  }\n  margin-right: 24px;\n`\n\ninterface HistoryProps {\n  index: number\n  date: string\n  content: string\n  changeDate: Function\n  changeContent: Function\n  deleteHistroy: Function\n}\n\nexport const HistoryInputBox = (props: HistoryProps) => {\n  const { index, date, content, changeDate, changeContent, deleteHistroy } =\n    props\n  const { date: historyDate, setDate, isValid, isError } = useFormatDate()\n  useEffect(() => {\n    if (isValid) changeDate(index, historyDate)\n  }, [historyDate, isValid])\n  useEffect(() => {\n    setDate(date ? date : historyDate + ' ')\n  }, [date])\n\n  return (\n    <Container>\n      <HistoryBoxDot />\n\n      <InputDateBox\n        type=\"text\"\n        value={historyDate}\n        error={isError}\n        maxLength={10}\n        placeholder={'2023-10-01'}\n        onChange={e => setDate(e.target.value)}\n      />\n      <InputContentBox\n        type=\"text\"\n        value={content}\n        placeholder={'내용 입력'}\n        onChange={e => changeContent(index, e.target.value)}\n      />\n      <img\n        onClick={() => deleteHistroy(index)}\n        src=\"/source/icon/clear.svg\"\n        alt=\"\"\n        style={{ marginRight: '8px' }}\n      />\n    </Container>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-member/member/index.tsx",["553","554","555","556"],[],"import React, { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Page } from '../../../../component/page'\nimport { usePage } from '../../../../hooks/usePage'\nimport { useDebounce } from '../../../../hooks/useDebounce'\nimport { getMember, kickOffMember } from '../../../../api/admin-member'\nimport { MemberBox } from '../memberBox'\nimport { setAuthToken } from '../../../../api'\nimport { MemberHeader } from '../memberHeader'\nimport { Modal } from '../modal'\nimport { EmptyText } from '../../../../component/empty_text'\nimport {\n  InnerBoxContainer,\n  InnerBoxHeader,\n  InnerBoxTitle,\n  MainContainer,\n} from '../../../../component/styledComponent'\nimport { useErrorNavigator } from '../../../../error-pages/useErrorNavigator'\n\nconst InputBox = styled.input`\n  margin-top: 36px;\n  margin-bottom: 36px;\n  width: 100%;\n  box-sizing: border-box;\n  border-radius: 16px;\n  height: 56px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 24px;\n  border: 1px solid #c1c2c3;\n  padding: 0 78px 0 16px;\n  color: ${props => (props.value ? '#000000' : '#797a7b')};\n  &:focus {\n    outline: 2px solid #000000;\n    outline-offset: -1px;\n  }\n  padding-left: 48px;\n`\nconst KickOffButton = styled.button`\n  width: 120px;\n  height: 40px;\n  border: none;\n  cursor: pointer;\n  border-radius: 16px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n`\nconst SearchContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n`\nconst SearchImogi = styled.img`\n  z-index: 100;\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  margin-top: 52px;\n  margin-left: 16px;\n`\n\ninterface Member {\n  account_id: string\n  birth_date: string\n  gender: string\n  name: string\n  phone_number: string\n}\ninterface MemberPageProps {\n  refresh: boolean\n  setRefresh: Dispatch<SetStateAction<boolean>>\n}\n\nconst pagePerLimit = 10\nexport const InnerMemberPage = (props: MemberPageProps) => {\n  const { refresh, setRefresh } = props\n  const errorNavigator = useErrorNavigator()\n  const [memberData, setMemberData] = useState<Array<Member>>([])\n  const [keyword, setKeyword] = useState('')\n\n  const {\n    pageList,\n    currentPage,\n    maxPage,\n    getPrevPage,\n    getNextPage,\n    clickPage,\n    setMaxPage,\n  } = usePage()\n  const { debounceCallback, isLoading } = useDebounce({ time: 700 })\n  const [clickedAccountList, setClickedAccountList] = useState<Array<string>>(\n    []\n  )\n  const [showModal, setShowModal] = useState(false)\n  const [searchIconPath, setSearchIconPath] = useState('source/icon/search.svg')\n  const getChurchMember = async (page: number, keyword: string) => {\n    const response = await getMember((page - 1) * pagePerLimit, keyword)\n    errorNavigator.navigate(response)\n    setMemberData(response.payload.church_members.results)\n    setMaxPage(\n      Math.ceil(response.payload.church_members.total_count / pagePerLimit)\n    )\n  }\n  useEffect(() => {\n    if (memberData.length !== 0 || refresh) {\n      getChurchMember(currentPage, keyword)\n    }\n  }, [refresh])\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      setAuthToken(token)\n    }\n\n    getChurchMember(1, '')\n  }, [])\n\n  useEffect(() => {\n    if (maxPage !== 0) {\n      debounceCallback(() => {\n        setMaxPage(0)\n        getChurchMember(1, keyword)\n      })\n    }\n  }, [keyword])\n\n  const onClickMemberBox = (account_id: string) => {\n    if (clickedAccountList.indexOf(account_id) > -1) {\n      setClickedAccountList(clickedAccountList.filter(id => id !== account_id))\n    } else {\n      setClickedAccountList([...clickedAccountList, account_id])\n    }\n  }\n\n  const onClickMemberHeader = () => {\n    if (clickedAccountList.length === memberData.length) {\n      setClickedAccountList([])\n    } else {\n      var allAccountList = memberData.map(member => member.account_id)\n      setClickedAccountList([...allAccountList])\n    }\n  }\n\n  const clickButton = async () => {\n    const response = await kickOffMember(clickedAccountList)\n    errorNavigator.navigate(response)\n    setClickedAccountList([])\n    setShowModal(false)\n    setRefresh(!refresh)\n  }\n\n  return (\n    <MainContainer>\n      <InnerBoxHeader>\n        <InnerBoxTitle>신도 명단</InnerBoxTitle>\n        <KickOffButton\n          style={{\n            backgroundColor:\n              clickedAccountList.length === 0 ? '#E3E4E6' : '#d40030',\n            color: clickedAccountList.length === 0 ? '#A2A3A5' : '#ffffff',\n          }}\n          onClick={() => {\n            clickedAccountList.length !== 0 && setShowModal(true)\n          }}\n        >\n          내보내기\n        </KickOffButton>\n      </InnerBoxHeader>\n\n      <InnerBoxContainer>\n        <SearchContainer>\n          <SearchImogi src={searchIconPath} />\n          <InputBox\n            type=\"text\"\n            value={keyword}\n            placeholder={'신도 검색'}\n            onChange={e => setKeyword(e.target.value)}\n            onFocus={() => setSearchIconPath('source/icon/search_focused.svg')}\n            onBlur={() => setSearchIconPath('source/icon/search.svg')}\n          ></InputBox>\n        </SearchContainer>\n\n        <MemberHeader onClickMemberHeader={onClickMemberHeader} />\n        {memberData.length !== 0 ? (\n          memberData.map(member => {\n            return (\n              <div key={member.account_id}>\n                <MemberBox\n                  clickedAccountList={clickedAccountList}\n                  account_id={member.account_id}\n                  birth_date={member.birth_date}\n                  gender={member.gender}\n                  name={member.name}\n                  phone_number={member.phone_number}\n                  onClickMemberBox={onClickMemberBox}\n                />\n              </div>\n            )\n          })\n        ) : (\n          <EmptyText text=\"등록된 신도가 없어요.\" />\n        )}\n\n        {showModal && (\n          <Modal\n            onCloseModal={() => setShowModal(false)}\n            text={'신도를 내보내시겠어요?'}\n            buttonText={'내보내기'}\n            buttonColor={'#D40030'}\n            clickButton={clickButton}\n          />\n        )}\n        <Page\n          pageList={pageList}\n          currentPage={currentPage}\n          getPrevPage={getPrevPage}\n          getNextPage={getNextPage}\n          clickPage={clickPage}\n          lastPage={maxPage}\n        />\n      </InnerBoxContainer>\n      <div\n        style={{\n          height: '24px',\n        }}\n      />\n    </MainContainer>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/hooks/useDebounce.ts",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/api/admin-member/index.tsx",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-member/memberHeader.tsx",["557","558"],[],"import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\n\nconst Check = styled.image`\n  width: 24px;\n  height: 24px;\n  margin-left: 24px;\n  margin-right: 24px;\n`\n\nconst Text = styled.text`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 24px;\n  color: #ffffff;\n`\nconst SmallBox = styled.div`\n  width: 130px;\n  height: 100%;\n  display: flex;\n  align-items: center;\n`\nconst LargeBox = styled.div`\n  width: 282px;\n  height: 100%;\n  display: flex;\n  align-items: center;\n`\ninterface MemberHeaderProps {\n  onClickMemberHeader: () => void\n}\nexport const MemberHeader = (props: MemberHeaderProps) => {\n  const { onClickMemberHeader } = props\n  return (\n    <div\n      style={{\n        background: '#5500dd',\n        display: 'flex',\n        width: '100%',\n        marginTop: '8px',\n        height: '56px',\n        alignItems: 'center',\n        borderRadius: '16px',\n        borderWidth: '0px',\n      }}\n      onClick={onClickMemberHeader}\n    >\n      <Check>\n        <img src={'/source/icon/white_check.svg'} alt=\"\" />\n      </Check>\n      <SmallBox>\n        <Text>이름</Text>\n      </SmallBox>\n      <SmallBox>\n        <Text>성별</Text>\n      </SmallBox>\n      <LargeBox>\n        <Text>생년월일</Text>\n      </LargeBox>\n      <LargeBox>\n        <Text>전화번호</Text>\n      </LargeBox>\n    </div>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-member/memberBox.tsx",["559"],[],"import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\n\nconst Check = styled.image`\n  width: 24px;\n  height: 24px;\n  margin-left: 24px;\n  margin-right: 24px;\n`\n\nconst Text = styled.text`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n`\nconst SmallBox = styled.div`\n  width: 130px;\n  height: 100%;\n  display: flex;\n  align-items: center;\n`\nconst LargeBox = styled.div`\n  width: 282px;\n  height: 100%;\n  display: flex;\n  align-items: center;\n`\ninterface MemberBoxProps {\n  clickedAccountList: Array<string>\n  account_id: string\n  birth_date: string\n  gender: string\n  name: string\n  phone_number: string\n  onClickMemberBox: (account_id: string) => void\n}\n\nexport const MemberBox = (props: MemberBoxProps) => {\n  const {\n    clickedAccountList,\n    account_id,\n    birth_date,\n    gender,\n    name,\n    phone_number,\n    onClickMemberBox,\n  } = props\n  const [clicked, setClicked] = useState(false)\n  useEffect(() => {\n    if (clickedAccountList.indexOf(account_id) > -1) {\n      setClicked(true)\n    } else {\n      setClicked(false)\n    }\n  }, [clickedAccountList])\n  return (\n    <div\n      style={{\n        background: clicked ? '#F0F1F3' : '#ffffff',\n        display: 'flex',\n        width: '100%',\n        marginTop: '8px',\n        height: '56px',\n        alignItems: 'center',\n      }}\n      onClick={() => onClickMemberBox(account_id)}\n    >\n      <Check>\n        <img\n          src={clicked ? '/source/icon/check.svg' : '/source/icon/no_check.svg'}\n          alt=\"\"\n        />\n      </Check>\n      <SmallBox>\n        <Text>{name}</Text>\n      </SmallBox>\n      <SmallBox>\n        <Text>{gender}</Text>\n      </SmallBox>\n      <LargeBox>\n        <Text>{birth_date}</Text>\n      </LargeBox>\n      <LargeBox>\n        <Text>{phone_number}</Text>\n      </LargeBox>\n    </div>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-member/modal.tsx",["560","561","562","563","564","565","566"],[],"import React, {\n  Dispatch,\n  SetStateAction,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport styled from 'styled-components'\nimport Select from 'react-select'\nimport { Ref } from 'react'\n\nconst ModalOverlay = styled.div`\n  z-index: 1;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ModalWrapper = styled.div`\n  position: relative;\n  width: 328px;\n  height: 192px;\n  background-color: #ffffff;\n  border-radius: 20px;\n`\n\nconst Title = styled.text`\nfont-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\nfont-style: normal;\nfont-weight: 700;\nfont-size: 20px;\nline - height: 28px;\n`\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`\nconst CloseButton = styled.button`\n  width: 120px;\n  height: 56px;\n  border-radius: 16px;\n  background-color: #ffffff;\n  border: 1px solid #c1c2c3;\n  cursor: pointer;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 24px;\n  color: #797a7b;\n`\nconst CustomButton = styled.button`\n  width: 120px;\n  height: 56px;\n  border-radius: 16px;\n  background-color: #ffffff;\n  border: none;\n  cursor: pointer;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 24px;\n  color: #ffffff;\n  margin-left: 16px;\n`\n\ninterface HistoryModalProps {\n  onCloseModal: () => void\n  text: string\n  buttonText: string\n  buttonColor: string\n  clickButton: () => void\n}\n\nexport const Modal = (props: HistoryModalProps) => {\n  const { onCloseModal, text, buttonText, buttonColor, clickButton } = props\n\n  return (\n    <ModalOverlay>\n      <ModalWrapper>\n        <div style={{ marginTop: '36px' }} />\n        <Title>{text}</Title>\n        <div style={{ marginTop: '36px' }} />\n        <ButtonContainer>\n          <CloseButton onClick={onCloseModal}>취소</CloseButton>\n          <CustomButton\n            onClick={clickButton}\n            style={{ backgroundColor: buttonColor }}\n          >\n            {buttonText}\n          </CustomButton>\n        </ButtonContainer>\n      </ModalWrapper>\n    </ModalOverlay>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-member/confirm/index.tsx",["567","568","569","570"],[],"import React, {\n  Dispatch,\n  SetStateAction,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport styled from 'styled-components'\nimport { Page } from '../../../../component/page'\nimport { usePage } from '../../../../hooks/usePage'\nimport { useDebounce } from '../../../../hooks/useDebounce'\nimport {\n  getConfirmMember,\n  patchConfirmMember,\n} from '../../../../api/admin-member'\nimport { MemberBox } from '../memberBox'\nimport { setAuthToken } from '../../../../api'\nimport { MemberHeader } from '../memberHeader'\nimport { Modal } from '../modal'\nimport { EmptyText } from '../../../../component/empty_text'\nimport {\n  InnerBoxContainer,\n  InnerBoxHeader,\n  InnerBoxTitle,\n  MainContainer,\n} from '../../../../component/styledComponent'\nimport { useErrorNavigator } from '../../../../error-pages/useErrorNavigator'\n\nconst InputBox = styled.input`\n  margin-top: 36px;\n  margin-bottom: 36px;\n  width: 100%;\n  box-sizing: border-box;\n  border-radius: 16px;\n  height: 56px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 24px;\n  border: 1px solid #c1c2c3;\n  padding: 0 78px 0 16px;\n  color: ${props => (props.value ? '#000000' : '#797a7b')};\n  &:focus {\n    outline: 2px solid #000000;\n    outline-offset: -1px;\n  }\n  padding-left: 48px;\n`\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`\nconst RejectButton = styled.button`\n  width: 120px;\n  height: 40px;\n  border: none;\n  cursor: pointer;\n  border-radius: 16px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n`\nconst SuccessButton = styled.button`\n  width: 120px;\n  height: 40px;\n  border: none;\n  cursor: pointer;\n  border-radius: 16px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  margin-right: 16px;\n`\nconst SearchContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n`\nconst SearchImogi = styled.img`\n  z-index: 100;\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  margin-top: 52px;\n  margin-left: 16px;\n`\n\ninterface Member {\n  account_id: string\n  birth_date: string\n  gender: string\n  name: string\n  phone_number: string\n}\ninterface MemberPageProps {\n  refresh: boolean\n  setRefresh: Dispatch<SetStateAction<boolean>>\n}\n\nconst pagePerLimit = 10\nexport const InnerConfirmMemberPage = (props: MemberPageProps) => {\n  const { refresh, setRefresh } = props\n  const errorNavigator = useErrorNavigator()\n  const [memberData, setMemberData] = useState<Array<Member>>([])\n  const [keyword, setKeyword] = useState('')\n\n  const {\n    pageList,\n    currentPage,\n    maxPage,\n    getPrevPage,\n    getNextPage,\n    clickPage,\n    setMaxPage,\n  } = usePage()\n  const { debounceCallback, isLoading } = useDebounce({ time: 1000 })\n  const [clickedAccountList, setClickedAccountList] = useState<Array<string>>(\n    []\n  )\n  const [showRejectModal, setShowRejectModal] = useState(false)\n  const [showSuccessModal, setShowSuccessModal] = useState(false)\n  const [searchIconPath, setSearchIconPath] = useState('source/icon/search.svg')\n\n  const firstLoading = useRef<boolean>(false)\n\n  const getChurchMember = async (page: number, keyword: string) => {\n    const response = await getConfirmMember((page - 1) * pagePerLimit, keyword)\n    errorNavigator.navigate(response)\n    setMemberData(response.payload.confirm_members.results)\n    setMaxPage(\n      Math.ceil(response.payload.confirm_members.total_count / pagePerLimit)\n    )\n    firstLoading.current = true\n  }\n  useEffect(() => {\n    if (memberData.length !== 0) {\n      getChurchMember(currentPage, keyword)\n    }\n  }, [refresh])\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      setAuthToken(token)\n    }\n\n    getChurchMember(1, '')\n  }, [])\n\n  useEffect(() => {\n    if (maxPage !== 0) {\n      debounceCallback(() => {\n        setMaxPage(0)\n        getChurchMember(1, keyword)\n      })\n    }\n  }, [keyword])\n\n  const onClickMemberBox = (account_id: string) => {\n    if (clickedAccountList.indexOf(account_id) > -1) {\n      setClickedAccountList(clickedAccountList.filter(id => id !== account_id))\n    } else {\n      setClickedAccountList([...clickedAccountList, account_id])\n    }\n  }\n\n  const onClickMemberHeader = () => {\n    if (clickedAccountList.length === memberData.length) {\n      setClickedAccountList([])\n    } else {\n      var allAccountList = memberData.map(member => member.account_id)\n      setClickedAccountList([...allAccountList])\n    }\n  }\n\n  const clickRejectButton = async () => {\n    const response = await patchConfirmMember(clickedAccountList, 'reject')\n    errorNavigator.navigate(response)\n    setClickedAccountList([])\n    setShowRejectModal(false)\n    setRefresh(!refresh)\n  }\n  const clickSuccessButton = async () => {\n    const response = await patchConfirmMember(clickedAccountList, 'success')\n    errorNavigator.navigate(response)\n    setClickedAccountList([])\n    setShowSuccessModal(false)\n    setRefresh(!refresh)\n  }\n\n  return (\n    <MainContainer>\n      <InnerBoxHeader>\n        <InnerBoxTitle>등록 대기 명단</InnerBoxTitle>\n        <ButtonContainer>\n          <SuccessButton\n            style={{\n              backgroundColor:\n                clickedAccountList.length === 0 ? '#E3E4E6' : '#5500dd',\n              color: clickedAccountList.length === 0 ? '#A2A3A5' : '#ffffff',\n            }}\n            onClick={() => {\n              clickedAccountList.length !== 0 && setShowSuccessModal(true)\n            }}\n          >\n            승인\n          </SuccessButton>\n          <RejectButton\n            style={{\n              backgroundColor:\n                clickedAccountList.length === 0 ? '#E3E4E6' : '#d40030',\n              color: clickedAccountList.length === 0 ? '#A2A3A5' : '#ffffff',\n            }}\n            onClick={() => {\n              clickedAccountList.length !== 0 && setShowRejectModal(true)\n            }}\n          >\n            거절\n          </RejectButton>\n        </ButtonContainer>\n      </InnerBoxHeader>\n\n      <InnerBoxContainer>\n        <SearchContainer>\n          <SearchImogi src={searchIconPath} />\n          <InputBox\n            type=\"text\"\n            value={keyword}\n            placeholder={'신도 검색'}\n            onChange={e => setKeyword(e.target.value)}\n            onFocus={() => setSearchIconPath('source/icon/search_focused.svg')}\n            onBlur={() => setSearchIconPath('source/icon/search.svg')}\n          />\n        </SearchContainer>\n\n        <MemberHeader onClickMemberHeader={onClickMemberHeader} />\n\n        {memberData.length !== 0 ? (\n          memberData.map(member => {\n            return (\n              <div key={member.account_id}>\n                <MemberBox\n                  clickedAccountList={clickedAccountList}\n                  account_id={member.account_id}\n                  birth_date={member.birth_date}\n                  gender={member.gender}\n                  name={member.name}\n                  phone_number={member.phone_number}\n                  onClickMemberBox={onClickMemberBox}\n                />\n              </div>\n            )\n          })\n        ) : (\n          <EmptyText text=\"등록 신청을 한 신도가 없어요.\" />\n        )}\n\n        {showRejectModal && (\n          <Modal\n            onCloseModal={() => setShowRejectModal(false)}\n            text={'신도를 거절하시겠어요?'}\n            buttonText={'거절'}\n            buttonColor={'#D40030'}\n            clickButton={clickRejectButton}\n          />\n        )}\n        {showSuccessModal && (\n          <Modal\n            onCloseModal={() => setShowSuccessModal(false)}\n            text={'신도를 승인하시겠어요?'}\n            buttonText={'승인'}\n            buttonColor={'#5500dd'}\n            clickButton={clickSuccessButton}\n          />\n        )}\n        <Page\n          pageList={pageList}\n          currentPage={currentPage}\n          getPrevPage={getPrevPage}\n          getNextPage={getNextPage}\n          clickPage={clickPage}\n          lastPage={maxPage}\n        />\n      </InnerBoxContainer>\n      <div\n        style={{\n          height: '48px',\n        }}\n      />\n    </MainContainer>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/component/empty_text/index.tsx",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/component/styledComponent/index.tsx",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/component/box/info.tsx",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-schedule/schedule/index.tsx",["571"],[],"import React, { useState } from 'react'\nimport { InnerScheduleList } from './list'\nimport { InnerScheduleRegist } from './regist'\nimport { Margin24 } from '../../../../component/styledComponent'\n\nexport const InnerSchedulePage = () => {\n  const [refresh, setRefresh] = useState(false)\n  return (\n    <>\n      <InnerScheduleList\n        refresh={refresh}\n        setRefresh={setRefresh}\n      ></InnerScheduleList>\n\n      <InnerScheduleRegist\n        refresh={refresh}\n        setRefresh={setRefresh}\n      ></InnerScheduleRegist>\n    </>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/api/admin-schedule/index.tsx",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-schedule/schedule/list/index.tsx",["572","573","574"],[],"import React, { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport {\n  FlexRowContainer,\n  InnerBoxContainer,\n  InnerBoxHeader,\n  InnerBoxTitle,\n  MainContainer,\n  Margin24,\n  Margin36,\n} from '../../../../../component/styledComponent'\nimport { InfoBox } from '../../../../../component/box/info'\nimport { usePage } from '../../../../../hooks/usePage'\nimport { Page } from '../../../../../component/page'\nimport { getSchedule } from '../../../../../api/admin-schedule'\nimport { setAuthToken } from '../../../../../api'\nimport { EmptyText } from '../../../../../component/empty_text'\nimport styled from 'styled-components'\nimport { Margin16 } from '../../../../../component/styledComponent'\nimport { ScheduleModal } from './patch-modal'\nimport { useErrorNavigator } from '../../../../../error-pages/useErrorNavigator'\n\nconst ScheduleContainer = styled.div`\n  width: 100%;\n  border-radius: 16px;\n  border: 1px solid #c1c2c3;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  cursor: pointer;\n\n  &:hover {\n    border: 2px solid #000000;\n  }\n`\nconst ContentContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\nconst ScheduleIndex = styled.text`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 28px;\n  color: #5500dd;\n  margin-left: 24px;\n  margin-right: 24px;\n  margin-top: 26px;\n  margin-bottom: 26px;\n`\nconst ScheduleTitle = styled.text`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  text-align: left;\n`\nconst ScheduleText = styled.text`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 24px;\n  text-align: center;\n  color: #797a7b;\n  margin-right: 16px;\n`\n\ninterface ScheduleBoxProps {\n  index: number\n  title: string\n  subtitle: string\n  time: string\n}\nconst ScheduleBox = (props: ScheduleBoxProps) => {\n  const { index, title, subtitle, time } = props\n  return (\n    <>\n      <Margin16 />\n      <ScheduleContainer>\n        <FlexRowContainer>\n          <ScheduleIndex>{index}</ScheduleIndex>\n          <ContentContainer>\n            <ScheduleTitle>{title}</ScheduleTitle>\n            <FlexRowContainer>\n              {subtitle && <ScheduleText>{subtitle}</ScheduleText>}\n              <ScheduleText>{time}</ScheduleText>\n            </FlexRowContainer>\n          </ContentContainer>\n        </FlexRowContainer>\n      </ScheduleContainer>\n    </>\n  )\n}\ninterface Schedule {\n  church_worship_schedule_id: string\n  title: string\n  subtitle: string\n  weekday: string\n  place: string\n  mc: string\n  target: string\n  reference: string\n  time: string\n}\ninterface InnerScheduleProps {\n  refresh: boolean\n  setRefresh: Dispatch<SetStateAction<boolean>>\n}\n\nconst pagePerLimit = 6\nexport const InnerScheduleList = (props: InnerScheduleProps) => {\n  const { refresh, setRefresh } = props\n  const errorNavigator = useErrorNavigator()\n  const {\n    pageList,\n    currentPage,\n    maxPage,\n    getPrevPage,\n    getNextPage,\n    clickPage,\n    setMaxPage,\n  } = usePage()\n  const [scheduleData, setScheduleData] = useState<Array<Schedule>>([])\n  const [showModal, setShowModal] = useState(false)\n  const [currentIndex, setCurrentIndex] = useState(-1)\n  const openModal = (index: number) => {\n    setShowModal(true)\n    setCurrentIndex((currentPage - 1) * pagePerLimit + index)\n  }\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      setAuthToken(token)\n    }\n\n    const fetchData = async () => {\n      const response = await getSchedule()\n      errorNavigator.navigate(response)\n      setScheduleData(response.payload.worship_schedule_list)\n    }\n\n    fetchData()\n  }, [refresh])\n\n  useEffect(() => {\n    setMaxPage(Math.ceil(scheduleData.length / pagePerLimit))\n  }, [scheduleData])\n\n  return (\n    <MainContainer>\n      <InnerBoxHeader>\n        <InnerBoxTitle>예배 일정 목록</InnerBoxTitle>\n      </InnerBoxHeader>\n      <InnerBoxContainer>\n        <Margin36 />\n        <InfoBox text=\"박스를 클릭하면 수정 및 삭제를 할 수 있어요.\" />\n        {scheduleData.length !== 0 && <div style={{ paddingTop: '20px' }} />}\n        {scheduleData.length !== 0 ? (\n          scheduleData\n            .slice((currentPage - 1) * pagePerLimit, currentPage * pagePerLimit)\n            .map((schedule, index) => {\n              return (\n                <div onClick={() => openModal(index)}>\n                  <ScheduleBox\n                    key={index}\n                    index={index + pagePerLimit * (currentPage - 1) + 1}\n                    title={schedule.title}\n                    subtitle={schedule.subtitle}\n                    time={schedule.time}\n                  />\n                </div>\n              )\n            })\n        ) : (\n          <EmptyText text=\"등록된 예배 일정이 없어요.\" />\n        )}\n        {/* <ScheduleBox index={0} /> */}\n        <Page\n          pageList={pageList}\n          currentPage={currentPage}\n          getPrevPage={getPrevPage}\n          getNextPage={getNextPage}\n          clickPage={clickPage}\n          lastPage={maxPage}\n        />\n        {showModal && (\n          <ScheduleModal\n            refresh={refresh}\n            setRefresh={setRefresh}\n            onCloseModal={() => setShowModal(false)}\n            schedule={scheduleData[currentIndex]}\n          />\n        )}\n      </InnerBoxContainer>\n      <div style={{ paddingTop: '24px' }} />\n    </MainContainer>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-schedule/schedule/regist/index.tsx",["575"],[],"import React, { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport {\n  FlexRowContainer,\n  FlexRowInnerLeft,\n  FlexRowInnerRight,\n  InnerBoxContainer,\n  InnerBoxHeader,\n  InnerBoxTitle,\n  InputBox,\n  InputBoxWithCount,\n  InputBoxWithError,\n  InputCount,\n  MainContainer,\n  Margin16,\n  Margin24,\n  Margin36,\n  SubTitle,\n  SubTitleColorText,\n} from '../../../../../component/styledComponent'\nimport styled from 'styled-components'\nimport { useFormatTime } from '../../../../../hooks/useFormatTime'\nimport { createSchedule } from '../../../../../api/admin-schedule'\nimport { setAuthToken } from '../../../../../api'\nimport { useErrorNavigator } from '../../../../../error-pages/useErrorNavigator'\n\nconst ActiveRegisterButton = styled.button`\n  color: #ffffff;\n  background-color: #5500dd;\n  width: 120px;\n  height: 40px;\n  border: none;\n  cursor: pointer;\n  border-radius: 16px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n`\nconst DeActiveRegisterButton = styled.button`\n  color: #5500dd;\n  background: #ffffff;\n  width: 120px;\n  height: 40px;\n  border: none;\n  cursor: pointer;\n  border-radius: 16px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  border: 1px solid #5500dd;\n`\n\nconst Time = styled.div`\n  width: calc(50% - 18px);\n`\nconst TimeDivider = styled.div`\n  width: 36px;\n  margin-top: 56px;\n  font-family: 'Spoqa Han Sans Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n`\nconst DaysContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`\nconst DayContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-size: 16px;\n  line-height: 24px;\n  background: #ffffff;\n`\nconst ClickedDayText = styled.text`\n  color: #5500dd;\n`\nconst Check = styled.image`\n  width: 24px;\n  height: 24px;\n  margin-left: 8px;\n`\n\nconst days = [\n  '월요일',\n  '화요일',\n  '수요일',\n  '목요일',\n  '금요일',\n  '토요일',\n  '일요일',\n]\ninterface DayProps {\n  weekday: string | undefined\n  index: number\n  setWeekday: Dispatch<SetStateAction<string>>\n}\nexport const Day = (props: DayProps) => {\n  const { weekday, index, setWeekday } = props\n\n  return (\n    <DayContainer\n      onClick={() => {\n        setWeekday(index.toString())\n      }}\n    >\n      {weekday === index.toString() ? (\n        <ClickedDayText>{days[index]}</ClickedDayText>\n      ) : (\n        days[index]\n      )}\n\n      <Check>\n        <img\n          src={\n            weekday === index.toString()\n              ? '/source/icon/check.svg'\n              : '/source/icon/dark_check.svg'\n          }\n          alt=\"\"\n        />\n      </Check>\n    </DayContainer>\n  )\n}\ninterface InnerScheduleProps {\n  refresh: boolean\n  setRefresh: Dispatch<SetStateAction<boolean>>\n}\n\nexport const InnerScheduleRegist = (props: InnerScheduleProps) => {\n  const { refresh, setRefresh } = props\n  const errorNavigator = useErrorNavigator()\n  const [title, setTitle] = useState<string>('')\n  const [subtitle, setSubtitle] = useState<string>('')\n  const [weekday, setWeekday] = useState<string>('')\n  const [place, setPlace] = useState<string>('')\n  const [mc, setMc] = useState<string>('')\n  const [target, setTarget] = useState<string>('')\n  const [reference, setReference] = useState<string>('')\n  const [isActive, setIsActive] = useState(false)\n  const {\n    time: startTime,\n    setTime: setStartTime,\n    isValid: isStartValid,\n    isError: isStartError,\n  } = useFormatTime()\n  const {\n    time: endTime,\n    setTime: setEndTime,\n    isValid: isEndValid,\n    isError: isEndError,\n  } = useFormatTime()\n\n  const onClickRegisterButton = async () => {\n    const response = await createSchedule(\n      title,\n      subtitle,\n      weekday,\n      place,\n      mc,\n      target,\n      reference,\n      startTime,\n      isEndValid ? endTime : ''\n    )\n    errorNavigator.navigate(response)\n    setTitle('')\n    setSubtitle('')\n    setWeekday('')\n    setPlace('')\n    setMc('')\n    setTarget('')\n    setReference('')\n    setIsActive(false)\n    setStartTime('')\n    setEndTime('')\n    setRefresh(!refresh)\n  }\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      setAuthToken(token)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (title !== '' && weekday !== '' && isStartValid) {\n      setIsActive(true)\n    } else {\n      setIsActive(false)\n    }\n  }, [title, weekday, isStartValid])\n  return (\n    <MainContainer>\n      <InnerBoxHeader>\n        <InnerBoxTitle>예배 일정 등록</InnerBoxTitle>\n        {isActive ? (\n          <ActiveRegisterButton onClick={onClickRegisterButton}>\n            등록\n          </ActiveRegisterButton>\n        ) : (\n          <DeActiveRegisterButton>등록</DeActiveRegisterButton>\n        )}\n      </InnerBoxHeader>\n      <InnerBoxContainer>\n        <Margin36 />\n        <FlexRowContainer>\n          <FlexRowInnerLeft>\n            <SubTitle>\n              예배명<SubTitleColorText> *</SubTitleColorText>\n            </SubTitle>\n            <InputBox\n              type=\"text\"\n              maxLength={20}\n              value={title}\n              placeholder=\"예배명 입력\"\n              onChange={e => setTitle(e.target.value)}\n            />\n          </FlexRowInnerLeft>\n          <FlexRowInnerRight>\n            <SubTitle>소제목</SubTitle>\n            <InputBox\n              type=\"text\"\n              maxLength={20}\n              value={subtitle}\n              placeholder=\"소제목 입력\"\n              onChange={e => setSubtitle(e.target.value)}\n            />\n          </FlexRowInnerRight>\n        </FlexRowContainer>\n        <Margin36 />\n        <FlexRowContainer>\n          <Time>\n            <SubTitle>\n              시간<SubTitleColorText> *</SubTitleColorText>\n            </SubTitle>\n            <InputBoxWithError\n              type=\"text\"\n              maxLength={5}\n              value={startTime}\n              error={isStartError}\n              placeholder=\"05:00\"\n              onChange={e => setStartTime(e.target.value)}\n            />\n          </Time>\n          <TimeDivider>~</TimeDivider>\n          <Time>\n            <div style={{ paddingTop: '24px' }} />\n            <InputBoxWithError\n              type=\"text\"\n              maxLength={5}\n              value={endTime}\n              error={isEndError}\n              placeholder=\"06:30\"\n              onChange={e => setEndTime(e.target.value)}\n            />\n          </Time>\n        </FlexRowContainer>\n        <Margin36 />\n        <SubTitle>\n          요일<SubTitleColorText> *</SubTitleColorText>\n        </SubTitle>\n\n        <Margin16 />\n        <DaysContainer>\n          {days.map((day, index) => {\n            return (\n              <Day\n                key={index}\n                setWeekday={() => setWeekday(index.toString())}\n                weekday={weekday}\n                index={index}\n              />\n            )\n          })}\n        </DaysContainer>\n        <Margin36 />\n        <FlexRowContainer>\n          <FlexRowInnerLeft>\n            <SubTitle>장소</SubTitle>\n            <InputBoxWithCount>\n              <InputBox\n                type=\"text\"\n                maxLength={15}\n                value={place}\n                placeholder=\"장소 입력\"\n                onChange={e => setPlace(e.target.value)}\n              />\n              <InputCount>({place.length}/15)</InputCount>\n            </InputBoxWithCount>\n            <Margin36 />\n            <SubTitle>대상</SubTitle>\n            <InputBoxWithCount>\n              <InputBox\n                type=\"text\"\n                maxLength={15}\n                value={target}\n                placeholder=\"대상 입력\"\n                onChange={e => setTarget(e.target.value)}\n              />\n              <InputCount>({target.length}/15)</InputCount>\n            </InputBoxWithCount>\n          </FlexRowInnerLeft>\n          <FlexRowInnerRight>\n            <SubTitle>설교/진행</SubTitle>\n            <InputBoxWithCount>\n              <InputBox\n                type=\"text\"\n                maxLength={15}\n                value={mc}\n                placeholder=\"설교/진행 입력\"\n                onChange={e => setMc(e.target.value)}\n              />\n              <InputCount>({mc.length}/15)</InputCount>\n            </InputBoxWithCount>\n            <Margin36 />\n            <SubTitle>참고</SubTitle>\n            <InputBoxWithCount>\n              <InputBox\n                type=\"text\"\n                maxLength={15}\n                value={reference}\n                placeholder=\"참고 입력\"\n                onChange={e => setReference(e.target.value)}\n              />\n              <InputCount>({reference.length}/15)</InputCount>\n            </InputBoxWithCount>\n          </FlexRowInnerRight>\n        </FlexRowContainer>\n        <Margin36 />\n      </InnerBoxContainer>\n      <div style={{ paddingTop: '24px' }} />\n    </MainContainer>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/hooks/useFormatTime.ts",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-schedule/calendar/index.tsx",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-schedule/calendar/view/index.tsx",["576","577"],[],"import React, { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport {\n  InnerBoxContainer,\n  InnerBoxHeader,\n  InnerBoxTitle,\n  MainContainer,\n  Margin36,\n  SubTitle,\n} from '../../../../../component/styledComponent'\nimport { Date, useMonth } from '../../../../../hooks/useMonth'\nimport { WeekView } from './week'\nimport styled from 'styled-components'\nimport { setAuthToken } from '../../../../../api'\nimport { getCalendar } from '../../../../../api/admin-calendar'\nimport { useErrorNavigator } from '../../../../../error-pages/useErrorNavigator'\n\nconst WeekHeader = styled.div`\n  height: 48px;\n  display: flex;\n  flex-direction: row;\n`\nconst WeekHeaderText = styled.text`\n  width: 128px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n`\nconst Calendar = styled.div`\n  margin-left: calc(50% - 448px);\n`\n\nexport const CalendarHeader = styled.div`\n  display: flex;\n  flex-direction: row\n  min-width: 884px;\n`\nconst ArrowImage = styled.image`\n  width: 24px;\n  height: 24px;\n  margin-bottom: 36px;\n  margin-left: 8px;\n`\n\ninterface InnerCalendarProps {\n  refresh: boolean\n  setRefresh: Dispatch<SetStateAction<boolean>>\n}\n\nconst weekHeader = ['일', '월', '화', '수', '목', '금', '토']\nexport const CalendarView = (props: InnerCalendarProps) => {\n  const { refresh, setRefresh } = props\n  const errorNavigator = useErrorNavigator()\n  const { weekList, year, month, setYear, setMonth } = useMonth()\n  const [calendarList, setCalendarList] = useState([])\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      setAuthToken(token)\n    }\n    const fetchData = async () => {\n      const response = await getCalendar(year, month)\n      errorNavigator.navigate(response)\n      setCalendarList(response.payload.church_calendar_list)\n    }\n\n    fetchData()\n  }, [year, month, refresh])\n\n  return (\n    <MainContainer>\n      <InnerBoxHeader>\n        <InnerBoxTitle>달력</InnerBoxTitle>\n      </InnerBoxHeader>\n      <InnerBoxContainer>\n        <Margin36 />\n        <Calendar>\n          <CalendarHeader>\n            <SubTitle>\n              {year}년 {month}월\n            </SubTitle>\n            <div style={{ marginLeft: '730px' }}>\n              <ArrowImage>\n                <img\n                  onClick={() => setMonth(month - 1)}\n                  src={'/source/icon/arrow_left_dark.svg'}\n                  alt=\"information\"\n                />\n              </ArrowImage>\n              <ArrowImage>\n                <img\n                  onClick={() => setMonth(month + 1)}\n                  src={'/source/icon/arrow_right_dark.svg'}\n                  alt=\"information\"\n                />\n              </ArrowImage>\n            </div>\n          </CalendarHeader>\n\n          <Margin36 />\n          <WeekHeader>\n            {weekHeader.map((haederText, index) => {\n              return <WeekHeaderText key={index}>{haederText}</WeekHeaderText>\n            })}\n          </WeekHeader>\n          {weekList &&\n            weekList.map((week: Date[], index: number) => {\n              return (\n                <WeekView\n                  key={index}\n                  refresh={refresh}\n                  setRefresh={setRefresh}\n                  week={week}\n                  year={year}\n                  month={month}\n                  calendar_list={calendarList}\n                />\n              )\n            })}\n        </Calendar>\n      </InnerBoxContainer>\n      <div style={{ paddingTop: '24px' }} />\n    </MainContainer>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/hooks/useMonth.ts",["578"],[],"import { useCallback, useEffect, useRef, useState } from 'react'\n\nexport interface Date {\n  date: number\n  month: number\n  year: number\n}\n\nexport const useMonth = () => {\n  const date = new Date()\n  const [year, setYear] = useState(date.getFullYear())\n  const [month, setMonth] = useState(date.getMonth() + 1)\n  const [weekList, setWeekList] = useState<any>()\n\n  const getWeekList = useCallback(() => {\n    let weekList: Date[][] = []\n    var firstDay = new Date(year, month - 1, 1).getDay()\n    var lastDay = new Date(year, month, 0).getDate()\n    var beforeMonthLastDay = new Date(year, month - 1, 0).getDate()\n    var weekCount = Math.ceil((lastDay + firstDay) / 7)\n    var lastDate = 0\n\n    for (let week = 0; week < weekCount; week++) {\n      var week_list = []\n      if (week === 0) {\n        for (let date = firstDay - 1; date >= 0; date--) {\n          week_list.push({\n            date: beforeMonthLastDay - date,\n            month: month === 1 ? 12 : month - 1,\n            year: month === 1 ? year - 1 : year,\n          })\n        }\n        for (let date = 1; date <= 7 - firstDay; date++) {\n          week_list.push({\n            date: date,\n            month: month,\n            year: year,\n          })\n        }\n        lastDate = 7 - firstDay\n      } else {\n        for (let date = 1; date <= 7; date++) {\n          var isCurrentMonth = date + lastDate <= lastDay\n          week_list.push({\n            date: isCurrentMonth ? date + lastDate : date + lastDate - lastDay,\n            month: isCurrentMonth ? month : month === 12 ? 1 : month + 1,\n            year: isCurrentMonth ? year : month === 12 ? year + 1 : year,\n          })\n        }\n        lastDate = 7 + lastDate\n      }\n      weekList[week] = week_list\n    }\n    setWeekList(weekList)\n  }, [year, month])\n\n  useEffect(() => {\n    getWeekList()\n  }, [year, month, getWeekList])\n\n  return { weekList, year, month, setYear, setMonth }\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-schedule/calendar/view/week.tsx",["579","580"],[],"import React, { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport { Date } from '../../../../../hooks/useMonth'\nimport styled from 'styled-components'\nimport { CalendarList, useWeek } from '../../../../../hooks/useWeek'\nimport { CalendarModal } from './patch-modal/modal'\n\nconst DayContainer = styled.div`\n  width: 128px;\n  height: 26px;\n`\n\nconst WeekDateContainer = styled.div`\n  height: 30px;\n  display: flex;\n  flex-direction: row;\n`\nconst WeekContentContainer = styled.div`\n  height: 94px;\n`\nconst DateText = styled.text`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n`\n\nconst ScheduleBox = styled.div`\n  margin-top: 2px;\n  border-radius: 8px;\n  background: #5500dd;\n  position: absolute;\n  height: 26px;\n  text-align: left;\n  justify-content: center;\n  align-item: center;\n  color: #ffffff;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 26px;\n  text-align: left;\n  padding-left: 4px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  box-sizing: border-box;\n  border: 1px solid;\n  cursor: pointer;\n`\n\ninterface DayProps {\n  index: number\n  date: Date\n  currentYear: number\n  currentMonth: number\n}\ninterface WeekViewProps {\n  week: Array<Date>\n  year: number\n  month: number\n  calendar_list: Array<CalendarList>\n  refresh: boolean\n  setRefresh: Dispatch<SetStateAction<boolean>>\n}\n\nconst Day = (props: DayProps) => {\n  const { index, date, currentYear, currentMonth } = props\n  return (\n    <DayContainer>\n      <DateText\n        style={{\n          color:\n            date.month !== currentMonth\n              ? '#c1c2c3'\n              : index === 0\n              ? '#D40030'\n              : '#000000',\n        }}\n      >\n        {date.date}\n      </DateText>\n    </DayContainer>\n  )\n}\n\n// const scheduleWidth = [0, 120, 248, 376, 504, 632, 760, 888]\nconst scheduleWidth = [0, 124, 252, 380, 508, 636, 764, 892]\nexport const WeekView = (props: WeekViewProps) => {\n  const { week, year, month, calendar_list, refresh, setRefresh } = props\n  const { weekData } = useWeek(week, calendar_list, year, month)\n  const [showModal, setShowModal] = useState(false)\n  const [currentIndex, setCurrentIndex] = useState(-1)\n  const openModal = (id: string) => {\n    setShowModal(true)\n    setCurrentIndex(\n      calendar_list.findIndex(calendar => calendar.church_calendar_id === id)\n    )\n  }\n  return (\n    <>\n      <WeekDateContainer>\n        {week &&\n          week.map((day, index) => {\n            return (\n              <Day\n                key={index}\n                index={index}\n                date={day}\n                currentYear={year}\n                currentMonth={month}\n              />\n            )\n          })}\n      </WeekDateContainer>\n\n      <WeekContentContainer>\n        {weekData &&\n          weekData.map((schedule, index) => {\n            return (\n              <ScheduleBox\n                onClick={() => openModal(schedule.church_calendar_id)}\n                style={{\n                  marginLeft: schedule.x * 128 + 2,\n                  marginTop: schedule.y * 26 + schedule.y * 2,\n                  width: scheduleWidth[schedule.length],\n                  height: 26,\n                  backgroundColor:\n                    schedule.end_date === ''\n                      ? '#ffffff'\n                      : schedule.is_current_month\n                      ? '#5500dd'\n                      : '#D8C2F9',\n                  color:\n                    schedule.end_date !== ''\n                      ? '#ffffff'\n                      : schedule.is_current_month\n                      ? '#5500dd'\n                      : '#D8C2F9',\n                  borderColor: schedule.is_current_month\n                    ? '#5500dd'\n                    : '#D8C2F9',\n                }}\n              >\n                {schedule.title}\n              </ScheduleBox>\n            )\n          })}\n      </WeekContentContainer>\n\n      {showModal && (\n        <CalendarModal\n          refresh={refresh}\n          setRefresh={setRefresh}\n          onCloseModal={() => setShowModal(false)}\n          schedule={calendar_list[currentIndex]}\n        />\n      )}\n    </>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/hooks/useWeek.ts",["581","582","583","584"],[],"import { useCallback, useEffect, useRef, useState } from 'react'\n\ninterface Date {\n  date: number\n  month: number\n  year: number\n}\ninterface ReturnCalendarList {\n  church_calendar_id: string\n  title: string\n  content: string\n  start_date: string\n  end_date: string\n  is_current_month: boolean\n  x: number\n  y: number\n  length: number\n}\n\nexport interface CalendarList {\n  church_calendar_id: string\n  title: string\n  content: string\n  start_date: string\n  end_date: string\n  is_current_month: boolean\n}\nconst numRows = 3\nconst ableMatrix = [\n  [true, true, true, true, true, true, true],\n  [true, true, true, true, true, true, true],\n  [true, true, true, true, true, true, true],\n]\nexport const useWeek = (\n  week: Array<Date>,\n  calendarList: Array<CalendarList>,\n  year: number,\n  month: number\n) => {\n  const [weekStartDate, setWeekStartDate] = useState<string>('')\n  const [weekEndDate, setWeekEndDate] = useState<string>('')\n  const [weekSchedule, setWeekSchedule] = useState<ReturnCalendarList[]>([])\n  const [weekData, setWeekData] = useState<ReturnCalendarList[]>([])\n\n  const getScheduleLength = useCallback(\n    (start_date: string, end_date: string) => {\n      if (end_date.length === 0) {\n        return 1\n      } else {\n        var startDate = new Date(start_date)\n        var endDate = new Date(end_date)\n        var diff = endDate.getTime() - startDate.getTime()\n        return diff === 0 ? 1 : diff / (1000 * 60 * 60 * 24) + 1\n      }\n    },\n    []\n  )\n  const getLocation = useCallback(\n    (length: number, ableMatrix: boolean[][], startX: number) => {\n      for (let y = 0; y < numRows; y++) {\n        var count = 0\n        for (let x = startX; x < startX + length; x++) {\n          if (ableMatrix[y][x]) {\n            count = count + 1\n            if (count === length) {\n              for (let i = 0; i < length; i++) {\n                ableMatrix[y][startX + i] = false\n              }\n              return {\n                y: y,\n              }\n            }\n            continue\n          }\n        }\n      }\n      return {\n        y: -1,\n      }\n    },\n    []\n  )\n\n  const getWeekSchedule = useCallback(() => {\n    const results: ReturnCalendarList[] = []\n    calendarList &&\n      calendarList.map(schedule => {\n        if (weekStartDate.length !== 0 && weekEndDate.length !== 0) {\n          if (\n            (weekStartDate <= schedule.start_date &&\n              schedule.start_date <= weekEndDate) ||\n            (schedule.end_date.length !== 0 &&\n              weekStartDate <= schedule.end_date &&\n              schedule.end_date <= weekEndDate) ||\n            (schedule.end_date.length !== 0 &&\n              weekStartDate >= schedule.start_date &&\n              weekEndDate <= schedule.end_date)\n          ) {\n            var start_date =\n              weekStartDate > schedule.start_date\n                ? weekStartDate\n                : schedule.start_date\n            results.push({\n              church_calendar_id: schedule.church_calendar_id,\n              title: schedule.title,\n              content: schedule.content,\n              start_date: start_date,\n              end_date:\n                weekEndDate < schedule.end_date\n                  ? weekEndDate\n                  : schedule.end_date,\n              is_current_month: schedule.is_current_month,\n              x: getScheduleLength(weekStartDate, start_date) - 1,\n              y: 0,\n              length: 0,\n            })\n          }\n        }\n      })\n\n    setWeekSchedule(results)\n  }, [calendarList, getScheduleLength, weekEndDate, weekStartDate])\n\n  const findLocationSchedule = (ableMatrix: boolean[][]) => {\n    const results: ReturnCalendarList[] = []\n    weekSchedule.map(schedule => {\n      const scheduleLength = getScheduleLength(\n        schedule.start_date,\n        schedule.end_date\n      )\n      const { y } = getLocation(scheduleLength, ableMatrix, schedule.x)\n      if (y !== -1) {\n        results.push({\n          church_calendar_id: schedule.church_calendar_id,\n          title: schedule.title,\n          content: schedule.content,\n          start_date: schedule.start_date,\n          end_date: schedule.end_date,\n          is_current_month: schedule.is_current_month,\n          x: schedule.x,\n          y: y,\n          length: scheduleLength,\n        })\n      }\n    })\n\n    setWeekData(results)\n  }\n\n  useEffect(() => {\n    var start_year = week[0].year.toString()\n    var start_month = week[0].month.toString()\n    start_month = start_month.length === 2 ? start_month : '0' + start_month\n    var start_date = week[0].date.toString()\n    start_date = start_date.length === 2 ? start_date : '0' + start_date\n    setWeekStartDate(start_year + '-' + start_month + '-' + start_date)\n    var end_year = week[6].year.toString()\n    var end_month = week[6].month.toString()\n    end_month = end_month.length === 2 ? end_month : '0' + end_month\n    var end_date = week[6].date.toString()\n    end_date = end_date.length === 2 ? end_date : '0' + end_date\n    setWeekEndDate(end_year + '-' + end_month + '-' + end_date)\n  }, [week, year, month])\n\n  useEffect(() => {\n    if (weekStartDate.length !== 0 && weekEndDate.length !== 0) {\n      getWeekSchedule()\n    }\n  }, [weekStartDate, weekEndDate, getWeekSchedule])\n\n  useEffect(() => {\n    findLocationSchedule(JSON.parse(JSON.stringify(ableMatrix)))\n  }, [weekSchedule])\n\n  return { weekData }\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-schedule/calendar/regist/index.tsx",["585","586","587","588"],[],"import React, { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport {\n  FlexRowContainer,\n  FlexRowInnerLeft,\n  FlexRowInnerRight,\n  InnerBoxContainer,\n  InnerBoxHeader,\n  InnerBoxTitle,\n  InputBox,\n  InputBoxWithCount,\n  InputBoxWithError,\n  InputCount,\n  MainContainer,\n  Margin16,\n  Margin24,\n  Margin36,\n  SubTitle,\n  SubTitleColorText,\n} from '../../../../../component/styledComponent'\nimport styled from 'styled-components'\nimport { setAuthToken } from '../../../../../api'\nimport { useFormatDate } from '../../../../../hooks/useFormatDate'\nimport { createCalendar } from '../../../../../api/admin-calendar'\nimport { useToday } from '../../../../../hooks/useToday'\nimport { useErrorNavigator } from '../../../../../error-pages/useErrorNavigator'\n\nconst ActiveRegisterButton = styled.button`\n  color: #ffffff;\n  background-color: #5500dd;\n  width: 120px;\n  height: 40px;\n  border: none;\n  cursor: pointer;\n  border-radius: 16px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n`\nconst DeActiveRegisterButton = styled.button`\n  color: #5500dd;\n  width: 120px;\n  background: #ffffff;\n  height: 40px;\n  border: none;\n  cursor: pointer;\n  border-radius: 16px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  border: 1px solid #5500dd;\n`\n\nconst Date = styled.div`\n  width: calc(50% - 18px);\n`\nconst DateDivider = styled.div`\n  width: 36px;\n  margin-top: 56px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n`\nconst InputSubBox = styled.textarea`\n  width: 100%;\n  box-sizing: border-box;\n  margin-top: 16px;\n  border-radius: 16px;\n  height: 92px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n  border: 1px solid #c1c2c3;\n  padding: 16px;\n  color: ${props => (props.value ? '#000000' : '#797a7b')};\n  resize: none;\n  overflow: auto;\n  &:focus {\n    outline: 2px solid #000000;\n    outline-offset: -1px;\n  }\n`\n\ninterface InnerCalendarProps {\n  refresh: boolean\n  setRefresh: Dispatch<SetStateAction<boolean>>\n}\n\nexport const InnerCalendarRegist = (props: InnerCalendarProps) => {\n  const today = useToday()\n  const errorNavigator = useErrorNavigator()\n  const { refresh, setRefresh } = props\n  const [isActive, setIsActive] = useState(false)\n  const [title, setTitle] = useState<string>('')\n  const [content, setContent] = useState<string>('')\n  const {\n    date: startDate,\n    setDate: setStartDate,\n    isValid: isStartValid,\n    isError: isStartError,\n  } = useFormatDate()\n  const {\n    date: endDate,\n    setDate: setEndDate,\n    isValid: isEndValid,\n    isError: isEndError,\n  } = useFormatDate()\n\n  const onClickRegisterButton = async () => {\n    var end_date = isEndValid ? (startDate < endDate ? endDate : '') : ''\n    const response = await createCalendar(title, content, startDate, end_date)\n    errorNavigator.navigate(response)\n    setRefresh(!refresh)\n    setTitle('')\n    setContent('')\n    setStartDate(today)\n    setEndDate(today)\n  }\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      setAuthToken(token)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (title !== '' && content !== '' && isStartValid) {\n      setIsActive(true)\n    } else {\n      setIsActive(false)\n    }\n  }, [title, content, isStartValid])\n  return (\n    <MainContainer>\n      <InnerBoxHeader>\n        <InnerBoxTitle>일정 등록</InnerBoxTitle>\n        {isActive ? (\n          <ActiveRegisterButton onClick={onClickRegisterButton}>\n            등록\n          </ActiveRegisterButton>\n        ) : (\n          <DeActiveRegisterButton>등록</DeActiveRegisterButton>\n        )}\n      </InnerBoxHeader>\n      <InnerBoxContainer>\n        <Margin36 />\n\n        <SubTitle>\n          제목<SubTitleColorText> *</SubTitleColorText>\n        </SubTitle>\n        <InputBoxWithCount>\n          <InputBox\n            type=\"text\"\n            maxLength={15}\n            value={title}\n            placeholder=\"제목 입력\"\n            onChange={e => setTitle(e.target.value)}\n          />\n          <InputCount>({title.length}/15)</InputCount>\n        </InputBoxWithCount>\n        <Margin36 />\n        <FlexRowContainer>\n          <Date>\n            <SubTitle>\n              날짜<SubTitleColorText> *</SubTitleColorText>\n            </SubTitle>\n            <InputBoxWithError\n              type=\"text\"\n              maxLength={10}\n              value={startDate}\n              error={isStartError}\n              placeholder=\"2023-05-05\"\n              onChange={e => setStartDate(e.target.value)}\n            />\n          </Date>\n          <DateDivider>~</DateDivider>\n          <Date>\n            <div style={{ paddingTop: '24px' }} />\n            <InputBoxWithError\n              type=\"text\"\n              maxLength={10}\n              value={endDate}\n              error={isEndError}\n              placeholder=\"2023-05-15\"\n              onChange={e => setEndDate(e.target.value)}\n            />\n          </Date>\n        </FlexRowContainer>\n        <Margin36 />\n\n        <SubTitle>\n          내용<SubTitleColorText> *</SubTitleColorText>\n        </SubTitle>\n        <InputBoxWithCount>\n          <InputSubBox\n            maxLength={200}\n            value={content}\n            placeholder=\"내용 입력\"\n            onChange={e => {\n              setContent(e.target.value)\n            }}\n          />\n          <InputCount>({content.length}/200)</InputCount>\n        </InputBoxWithCount>\n        <Margin36 />\n\n        <Margin36 />\n      </InnerBoxContainer>\n      <div style={{ paddingTop: '24px' }} />\n    </MainContainer>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/hooks/useFormatDate.ts",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/api/admin-calendar/index.tsx",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/hooks/useToday.ts",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-schedule/schedule/list/patch-modal/index.tsx",["589"],[],"import React, { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { setAuthToken } from '../../../../../../api'\nimport {\n  FlexRowContainer,\n  FlexRowInnerRight,\n  InnerBoxHeader,\n  InnerBoxTitle,\n  InputBoxWithCount,\n  InputBoxWithError,\n  InputCount,\n  Margin16,\n  Margin24,\n  Margin36,\n  SubTitle,\n  SubTitleColorText,\n} from '../../../../../../component/styledComponent'\nimport { useFormatTime } from '../../../../../../hooks/useFormatTime'\nimport {\n  deleteSchedule,\n  patchSchedule,\n} from '../../../../../../api/admin-schedule'\nimport { useErrorNavigator } from '../../../../../../error-pages/useErrorNavigator'\n\nconst ModalOverlay = styled.div`\n  z-index: 1;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ButtonBox = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n  padding: 0 36px 0 36px;\n`\n\nconst ModalWrapper = styled.div`\n  // position: relative;\n  width: 714px;\n  background-color: #ffffff;\n  border-radius: 20px;\n`\n\nconst ModalCloseButton = styled.button`\n  top: 10px;\n  right: 20px;\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background-color: #ffffff;\n  border: none;\n  cursor: pointer;\n`\nexport const FlexRowInnerLeft = styled.div`\n  width: 50%;\n  margin-right: 16px;\n`\n\nconst ButtonStyle = `\n    width: 100%;\n    height: 48px;\n    border-radius: 16px;\n    font-family: \"Spoqa Han Sans Neo\", 'Apple SD Gothic Neo';\n    font-style: normal;\n    font-weight: 700;\n    font-size: 16px;\n    line-height: 24px;\n    text-align: center;\n    cursor: pointer;\n  `\n\nconst UploadButton = styled.button`\n  ${ButtonStyle}\n`\n\nconst DeleteButton = styled.button`\n  ${ButtonStyle}\n`\nconst ModalContentContainer = styled.div`\n  margin-left: 36px;\n  margin-right: 36px;\n`\n\nconst InputBox = styled.input`\n  width: 100%;\n  box-sizing: border-box;\n  margin-top: 16px;\n  border-radius: 16px;\n  height: 56px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 24px;\n  border: 1px solid #c1c2c3;\n  padding: 0 78px 0 16px;\n  color: ${props => (props.value ? '#000000' : '#797a7b')};\n  &:focus {\n    outline: 2px solid #000000;\n    outline-offset: -1px;\n  }\n`\n\nconst Time = styled.div`\n  width: calc(50% - 10.5px);\n`\nconst TimeDivider = styled.div`\n  width: 21px;\n  margin-top: 56px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n`\nconst DaysContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`\nconst DayContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-size: 16px;\n  line-height: 24px;\n  background: #ffffff;\n  margin-right: 36px;\n`\nconst ClickedDayText = styled.text`\n  color: #5500dd;\n`\nconst Check = styled.image`\n  width: 24px;\n  height: 24px;\n  margin-left: 8px;\n`\nconst LeftTimeContainer = styled.div`\n  width: calc(50% - 8px);\n  display: flex;\n  flex-direction: row;\n`\nconst RightDaysContainer = styled.div`\n  width: calc(50% - 12px);\n`\nconst RowContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`\nconst days = [\n  '월요일',\n  '화요일',\n  '수요일',\n  '목요일',\n  '금요일',\n  '토요일',\n  '일요일',\n]\nconst daysValue = ['월', '화', '수', '목', '금', '토', '일']\ninterface DayProps {\n  weekday: string | undefined\n  index: number\n  setWeekday: Dispatch<SetStateAction<string>>\n}\nexport const Day = (props: DayProps) => {\n  const { weekday, index, setWeekday } = props\n\n  return (\n    <DayContainer\n      onClick={() => {\n        setWeekday(index.toString())\n      }}\n    >\n      {weekday === index.toString() ? (\n        <ClickedDayText>{daysValue[index]}</ClickedDayText>\n      ) : (\n        daysValue[index]\n      )}\n\n      <Check>\n        <img\n          src={\n            weekday === index.toString()\n              ? '/source/icon/check.svg'\n              : '/source/icon/dark_check.svg'\n          }\n          alt=\"\"\n        />\n      </Check>\n    </DayContainer>\n  )\n}\ninterface Schedule {\n  church_worship_schedule_id: string\n  title: string\n  subtitle: string\n  weekday: string\n  place: string\n  mc: string\n  target: string\n  reference: string\n  time: string\n}\n\ninterface ScheduleModalProps {\n  refresh: boolean\n  setRefresh: Dispatch<SetStateAction<boolean>>\n  onCloseModal: () => void\n  schedule: Schedule\n}\n\nexport const ScheduleModal = (props: ScheduleModalProps) => {\n  const { refresh, setRefresh, onCloseModal, schedule } = props\n  const errorNavigator = useErrorNavigator()\n  const [title, setTitle] = useState<string>(schedule.title)\n  const [subtitle, setSubtitle] = useState<string>(\n    schedule.subtitle ? schedule.subtitle : ''\n  )\n  const [weekday, setWeekday] = useState<string>(\n    days.findIndex(day => day === schedule.weekday).toString()\n  )\n  const [place, setPlace] = useState<string>(\n    schedule.place ? schedule.place : ''\n  )\n  const [mc, setMc] = useState<string>(schedule.mc ? schedule.mc : '')\n  const [target, setTarget] = useState<string>(\n    schedule.target ? schedule.target : ''\n  )\n  const [reference, setReference] = useState<string>(\n    schedule.reference ? schedule.reference : ''\n  )\n  console.log(\n    schedule.weekday,\n    typeof schedule.weekday,\n    days.findIndex(day => day === schedule.weekday).toString()\n  )\n  const {\n    time: startTime,\n    setTime: setStartTime,\n    isValid: isStartValid,\n    isError: isStartError,\n  } = useFormatTime()\n  const {\n    time: endTime,\n    setTime: setEndTime,\n    isValid: isEndValid,\n    isError: isEndError,\n  } = useFormatTime()\n  useEffect(() => {\n    setStartTime(schedule.time.slice(0, 5))\n    schedule.time.length === 11 && setEndTime(schedule.time.slice(6))\n  }, [schedule])\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      setAuthToken(token)\n    }\n  }, [])\n\n  const handleCloseModal = () => {\n    onCloseModal()\n  }\n\n  const handleWrapperClick = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => {\n    event.stopPropagation()\n  }\n\n  const onClickSaveButton = async () => {\n    const response = await patchSchedule(\n      schedule.church_worship_schedule_id,\n      title,\n      subtitle,\n      weekday,\n      place,\n      mc,\n      target,\n      reference,\n      isStartValid ? startTime : '',\n      isEndValid ? endTime : ''\n    )\n    errorNavigator.navigate(response)\n    setRefresh(!refresh)\n    onCloseModal()\n  }\n  const onClickDeleteButton = async () => {\n    const response = await deleteSchedule(schedule.church_worship_schedule_id)\n    errorNavigator.navigate(response)\n    setRefresh(!refresh)\n    onCloseModal()\n  }\n\n  return (\n    <ModalOverlay onClick={handleCloseModal}>\n      <ModalWrapper onClick={handleWrapperClick}>\n        <Margin36 />\n        <InnerBoxHeader>\n          <InnerBoxTitle>예배 일정 수정</InnerBoxTitle>\n          <ModalCloseButton onClick={onCloseModal}>\n            <img src=\"source/icon/close.svg\" alt=\"close\" />\n          </ModalCloseButton>\n        </InnerBoxHeader>\n        <Margin24 style={{ background: '#ffffff' }} />\n        <ModalContentContainer>\n          <FlexRowContainer>\n            <FlexRowInnerLeft>\n              <SubTitle>\n                예배명<SubTitleColorText> *</SubTitleColorText>\n              </SubTitle>\n              <InputBox\n                type=\"text\"\n                maxLength={20}\n                value={title}\n                placeholder=\"예배명 입력\"\n                onChange={e => setTitle(e.target.value)}\n              />\n            </FlexRowInnerLeft>\n            <FlexRowInnerRight>\n              <SubTitle>소제목</SubTitle>\n              <InputBox\n                type=\"text\"\n                maxLength={20}\n                value={subtitle}\n                placeholder=\"소제목 입력\"\n                onChange={e => setSubtitle(e.target.value)}\n              />\n            </FlexRowInnerRight>\n          </FlexRowContainer>\n          <Margin36 />\n          <RowContainer>\n            <LeftTimeContainer>\n              <Time>\n                <SubTitle>\n                  시간<SubTitleColorText> *</SubTitleColorText>\n                </SubTitle>\n                <InputBoxWithError\n                  type=\"text\"\n                  maxLength={5}\n                  value={startTime}\n                  error={isStartError}\n                  placeholder=\"05:00\"\n                  onChange={e => setStartTime(e.target.value)}\n                />\n              </Time>\n              <TimeDivider>~</TimeDivider>\n              <Time>\n                <div style={{ paddingTop: '24px' }} />\n                <InputBoxWithError\n                  type=\"text\"\n                  maxLength={5}\n                  value={endTime}\n                  error={isEndError}\n                  placeholder=\"06:30\"\n                  onChange={e => setEndTime(e.target.value)}\n                />\n              </Time>\n            </LeftTimeContainer>\n            <RightDaysContainer>\n              <SubTitle>\n                요일<SubTitleColorText> *</SubTitleColorText>\n              </SubTitle>\n\n              <Margin16 />\n              <DaysContainer>\n                <Day\n                  setWeekday={() => setWeekday('0')}\n                  weekday={weekday}\n                  index={0}\n                />\n                <Day\n                  setWeekday={() => setWeekday('1')}\n                  weekday={weekday}\n                  index={1}\n                />\n                <Day\n                  setWeekday={() => setWeekday('2')}\n                  weekday={weekday}\n                  index={2}\n                />\n                <Day\n                  setWeekday={() => setWeekday('3')}\n                  weekday={weekday}\n                  index={3}\n                />\n              </DaysContainer>\n              <div style={{ paddingTop: '8px' }} />\n              <DaysContainer>\n                <Day\n                  setWeekday={() => setWeekday('4')}\n                  weekday={weekday}\n                  index={4}\n                />\n                <Day\n                  setWeekday={() => setWeekday('5')}\n                  weekday={weekday}\n                  index={5}\n                />\n                <Day\n                  setWeekday={() => setWeekday('6')}\n                  weekday={weekday}\n                  index={6}\n                />\n              </DaysContainer>\n            </RightDaysContainer>\n          </RowContainer>\n          <Margin36 />\n          <FlexRowContainer>\n            <FlexRowInnerLeft>\n              <SubTitle>장소</SubTitle>\n              <InputBoxWithCount>\n                <InputBox\n                  type=\"text\"\n                  maxLength={15}\n                  value={place}\n                  placeholder=\"장소 입력\"\n                  onChange={e => setPlace(e.target.value)}\n                />\n                <InputCount>({place ? place.length : 0}/15)</InputCount>\n              </InputBoxWithCount>\n              <Margin36 />\n              <SubTitle>대상</SubTitle>\n              <InputBoxWithCount>\n                <InputBox\n                  type=\"text\"\n                  maxLength={15}\n                  value={target}\n                  placeholder=\"대상 입력\"\n                  onChange={e => setTarget(e.target.value)}\n                />\n                <InputCount>({target ? target.length : 0}/15)</InputCount>\n              </InputBoxWithCount>\n            </FlexRowInnerLeft>\n            <FlexRowInnerRight>\n              <SubTitle>설교/진행</SubTitle>\n              <InputBoxWithCount>\n                <InputBox\n                  type=\"text\"\n                  maxLength={15}\n                  value={mc}\n                  placeholder=\"설교/진행 입력\"\n                  onChange={e => setMc(e.target.value)}\n                />\n                <InputCount>({mc ? mc.length : 0}/15)</InputCount>\n              </InputBoxWithCount>\n              <Margin36 />\n              <SubTitle>참고</SubTitle>\n              <InputBoxWithCount>\n                <InputBox\n                  type=\"text\"\n                  maxLength={15}\n                  value={reference}\n                  placeholder=\"참고 입력\"\n                  onChange={e => setReference(e.target.value)}\n                />\n                <InputCount>({reference ? reference.length : 0}/15)</InputCount>\n              </InputBoxWithCount>\n            </FlexRowInnerRight>\n          </FlexRowContainer>\n          <Margin24 style={{ background: '#ffffff' }} />\n        </ModalContentContainer>\n        <ButtonBox>\n          <DeleteButton\n            style={{\n              background: '#ffffff',\n              border: '1px solid #D40030',\n              color: '#D40030',\n            }}\n            onClick={onClickDeleteButton}\n          >\n            삭제\n          </DeleteButton>\n          <UploadButton\n            style={{\n              background: '#ffffff',\n              border: '1px solid #5500DD',\n              color: '#5500DD',\n            }}\n            onClick={onClickSaveButton}\n          >\n            저장\n          </UploadButton>\n        </ButtonBox>\n\n        <Margin36 />\n      </ModalWrapper>\n    </ModalOverlay>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-schedule/calendar/view/patch-modal/modal.tsx",["590","591","592","593","594","595","596","597","598","599"],[],"import React, {\n  Dispatch,\n  SetStateAction,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport styled from 'styled-components'\nimport { setAuthToken } from '../../../../../../api'\nimport {\n  FlexRowContainer,\n  InnerBoxHeader,\n  InnerBoxTitle,\n  InputBoxWithCount,\n  InputBoxWithError,\n  InputCount,\n  Margin24,\n  Margin36,\n  SubTitle,\n} from '../../../../../../component/styledComponent'\nimport { CalendarList } from '../../../../../../hooks/useWeek'\nimport { useFormatDate } from '../../../../../../hooks/useFormatDate'\nimport {\n  deleteCalendar,\n  patchCalendar,\n} from '../../../../../../api/admin-calendar'\nimport { useErrorNavigator } from '../../../../../../error-pages/useErrorNavigator'\n\nconst ModalOverlay = styled.div`\n  z-index: 1;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst DataContainer = styled.div`\n  padding: 0 36px 0 36px;\n`\n\nconst ButtonContainer = styled.div`\n  width: 218px;\n  height: 360px;\n  display: flex;\n  flex-direction: column;\n`\n\nconst ButtonBox = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n  padding: 0 36px 0 36px;\n`\n\nconst ModalWrapper = styled.div`\n  // position: relative;\n  width: 714px;\n  background-color: #ffffff;\n  border-radius: 20px;\n`\n\nconst ModalCloseButton = styled.button`\n  top: 10px;\n  right: 20px;\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background-color: #ffffff;\n  border: none;\n  cursor: pointer;\n`\n\nconst NoticeModalContent = styled.div`\n  display: flex;\n  gap: 24px;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`\n\nconst ButtonStyle = `\n  width: 100%;\n  height: 48px;\n  border-radius: 16px;\n  font-family: \"Spoqa Han Sans Neo\", 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  text-align: center;\n  cursor: pointer;\n`\n\nconst UploadButton = styled.button`\n  ${ButtonStyle}\n`\n\nconst DeleteButton = styled.button`\n  ${ButtonStyle}\n`\nconst ModalContentContainer = styled.div`\n  margin-left: 36px;\n  margin-right: 36px;\n`\nconst Date = styled.div`\n  width: calc(50% - 18px);\n`\nconst DateDivider = styled.div`\n  width: 36px;\n  margin-top: 56px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n`\n\nconst Image = styled.div`\n  width: 400px;\n  height: 360px;\n  background: #f0f1f3;\n  border-radius: 16px;\n  overflow: hidden;\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`\n\nconst InputBox = styled.input`\n  width: 100%;\n  box-sizing: border-box;\n  margin-top: 16px;\n  border-radius: 16px;\n  height: 56px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 24px;\n  border: 1px solid #c1c2c3;\n  padding: 0 78px 0 16px;\n  color: ${props => (props.value ? '#000000' : '#797a7b')};\n  &:focus {\n    outline: 2px solid #000000;\n    outline-offset: -1px;\n  }\n`\n\nconst InputSubBox = styled.textarea`\n  width: 100%;\n  box-sizing: border-box;\n  margin-top: 16px;\n  border-radius: 16px;\n  height: 140px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n  border: 1px solid #c1c2c3;\n  padding: 16px;\n  color: ${props => (props.value ? '#000000' : '#797a7b')};\n  resize: none;\n  overflow: auto;\n  &:focus {\n    outline: 2px solid #000000;\n    outline-offset: -1px;\n  }\n`\n\nconst SubTitleText = styled.div`\n  text-align: left;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 32px;\n  color: #000000;\n`\n\nconst DataBox = styled.div`\n  width: 100%;\n`\n\ninterface CalendarModalProps {\n  refresh: boolean\n  setRefresh: Dispatch<SetStateAction<boolean>>\n  onCloseModal: () => void\n  schedule: CalendarList\n}\n\nexport const CalendarModal = (props: CalendarModalProps) => {\n  const { refresh, setRefresh, onCloseModal, schedule } = props\n  const errorNavigator = useErrorNavigator()\n  const [title, setTitle] = useState<string>(schedule.title)\n  const [content, setContent] = useState<string>(schedule.content)\n  const {\n    date: startDate,\n    setDate: setStartDate,\n    isValid: isStartValid,\n    isError: isStartError,\n  } = useFormatDate()\n  const {\n    date: endDate,\n    setDate: setEndDate,\n    isValid: isEndValid,\n    isError: isEndError,\n  } = useFormatDate()\n  useEffect(() => {\n    setStartDate(schedule.start_date)\n    setEndDate(schedule.end_date)\n  }, [schedule])\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      setAuthToken(token)\n    }\n  }, [])\n\n  const handleCloseModal = () => {\n    onCloseModal()\n  }\n\n  const handleWrapperClick = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => {\n    event.stopPropagation()\n  }\n\n  const onClickSaveButton = async () => {\n    const response = await patchCalendar(\n      schedule.church_calendar_id,\n      title,\n      content,\n      startDate,\n      endDate\n    )\n    errorNavigator.navigate(response)\n    setRefresh(!refresh)\n    onCloseModal()\n  }\n  const onClickDeleteButton = async () => {\n    const response = await deleteCalendar(schedule.church_calendar_id)\n    errorNavigator.navigate(response)\n    setRefresh(!refresh)\n    onCloseModal()\n  }\n\n  return (\n    <ModalOverlay onClick={handleCloseModal}>\n      <ModalWrapper onClick={handleWrapperClick}>\n        <Margin36 />\n        <InnerBoxHeader>\n          <InnerBoxTitle>일정 수정</InnerBoxTitle>\n          <ModalCloseButton onClick={onCloseModal}>\n            <img src=\"source/icon/close.svg\" alt=\"close\" />\n          </ModalCloseButton>\n        </InnerBoxHeader>\n        <Margin24 style={{ background: '#ffffff' }} />\n        <ModalContentContainer>\n          <SubTitle>제목</SubTitle>\n          <InputBoxWithCount>\n            <InputBox\n              type=\"text\"\n              maxLength={15}\n              value={title}\n              placeholder=\"제목 입력\"\n              onChange={e => setTitle(e.target.value)}\n            />\n            <InputCount>({title.length}/15)</InputCount>\n          </InputBoxWithCount>\n          <Margin36 />\n          <FlexRowContainer>\n            <Date>\n              <SubTitle>날짜</SubTitle>\n              <InputBoxWithError\n                type=\"text\"\n                maxLength={10}\n                value={startDate}\n                error={isStartError}\n                placeholder=\"2023-05-05\"\n                onChange={e => setStartDate(e.target.value)}\n              />\n            </Date>\n            <DateDivider>~</DateDivider>\n            <Date>\n              <div style={{ paddingTop: '24px' }} />\n              <InputBoxWithError\n                type=\"text\"\n                maxLength={10}\n                value={endDate}\n                error={isEndError}\n                placeholder=\"2023-05-15\"\n                onChange={e => setEndDate(e.target.value)}\n              />\n            </Date>\n          </FlexRowContainer>\n          <Margin36 />\n\n          <SubTitle>내용</SubTitle>\n          <InputBoxWithCount>\n            <InputSubBox\n              maxLength={200}\n              value={content}\n              placeholder=\"내용 입력\"\n              onChange={e => {\n                setContent(e.target.value)\n              }}\n            />\n            <InputCount>({content.length}/200)</InputCount>\n          </InputBoxWithCount>\n\n          <Margin24 style={{ background: '#ffffff' }} />\n        </ModalContentContainer>\n        <ButtonBox>\n          <DeleteButton\n            style={{\n              background: '#ffffff',\n              border: '1px solid #D40030',\n              color: '#D40030',\n            }}\n            onClick={onClickDeleteButton}\n          >\n            삭제\n          </DeleteButton>\n          <UploadButton\n            style={{\n              background: '#ffffff',\n              border: '1px solid #5500DD',\n              color: '#5500DD',\n            }}\n            onClick={onClickSaveButton}\n          >\n            저장\n          </UploadButton>\n        </ButtonBox>\n\n        <Margin36 />\n      </ModalWrapper>\n    </ModalOverlay>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/policy/privacy.tsx",["600","601","602"],[],"import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Header } from '../main-pages/header'\nimport { Margin24, Margin36 } from '../component/styledComponent'\nimport { TermBox } from './termBox'\nimport Select from 'react-select'\nimport { LocationText, PrivacyText } from './text'\nimport { Footer } from '../main-pages/footer'\n\nconst Container = styled.div`\n  width: 100%;\n`\nconst BodyContainer = styled.div`\n  margin: 0 auto;\n  width: 1280px;\n`\nconst TitleContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-top: 56px;\n  align-items: center;\n`\n\nconst Title = styled.div`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 24px;\n  color: #000000;\n  text-align: left;\n`\nconst SubText = styled.div`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 22px;\n  color: #000000;\n  text-align: left;\n  margin-top: 36px;\n`\nexport const Privacy = () => {\n  const DateOptions = [{ value: '0', label: '2023.05.15' }]\n  const [Date, setDate] = useState('0')\n  return (\n    <Container>\n      <Header />\n      <BodyContainer>\n        <TitleContainer>\n          <Title>개인정보처리방침</Title>\n          <Select\n            options={DateOptions}\n            defaultValue={DateOptions[0]}\n            onChange={e => e && setDate(e?.value)}\n            isSearchable={false}\n            theme={theme => ({\n              ...theme,\n              borderRadius: 12,\n              colors: {\n                ...theme.colors,\n                primary25: '#F0E6FD',\n                primary: '#5500DD',\n                neutral20: '#C1C2C3',\n              },\n            })}\n          />\n        </TitleContainer>\n        <SubText>\n          주식회사 업텐(이하 \"회사\")는 「개인정보 보호법」 제30조에 따라\n          정보주체의 개인정보를 보호하고 이와 관련한 고충을 신속하고 원활하게\n          처리할 수 있도록 하기 위해 다음과 같은 개인정보처리방침에 따라\n          처리하고 있습니다. 회사의 개인정보처리방침은 관련 법률 및 지침에 따라\n          변경될 수 있고, 회사가 개인정보처리방침을 개정하는 경우에는 홈페이지\n          또는 애플리케이션에 게시하거나 개별적으로 고시할 것입니다.\n        </SubText>\n      </BodyContainer>\n      <Margin24 style={{ backgroundColor: '#ffffff' }} />\n      <BodyContainer>\n        {PrivacyText.map(privacy => {\n          return <TermBox title={privacy.title} contents={privacy.contents} />\n        })}\n        <div style={{ marginTop: '80px' }} />\n      </BodyContainer>\n      <Footer />\n    </Container>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/policy/location.tsx",["603"],[],"import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Header } from '../main-pages/header'\nimport { Margin36 } from '../component/styledComponent'\nimport { TermBox } from './termBox'\nimport { LocationText } from './text'\nimport { Footer } from '../main-pages/footer'\nimport Select from 'react-select'\n\nconst Container = styled.div`\n  width: 100%;\n`\nconst BodyContainer = styled.div`\n  margin: 0 auto;\n  width: 1280px;\n`\nconst TitleContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-top: 56px;\n  align-items: center;\n`\n\nconst Title = styled.div`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 24px;\n  color: #000000;\n  text-align: left;\n`\n\nexport const Location = () => {\n  const DateOptions = [{ value: '0', label: '2023.05.15' }]\n  const [Date, setDate] = useState('0')\n  return (\n    <Container>\n      <Header />\n      <BodyContainer>\n        <TitleContainer>\n          <Title>위치기반 이용약관</Title>\n          <Select\n            options={DateOptions}\n            defaultValue={DateOptions[0]}\n            onChange={e => e && setDate(e?.value)}\n            isSearchable={false}\n            theme={theme => ({\n              ...theme,\n              borderRadius: 12,\n              colors: {\n                ...theme.colors,\n                primary25: '#F0E6FD',\n                primary: '#5500DD',\n                neutral20: '#C1C2C3',\n              },\n            })}\n          />\n        </TitleContainer>\n      </BodyContainer>\n      <Margin36 />\n      <BodyContainer>\n        {LocationText.map(location => {\n          return <TermBox title={location.title} contents={location.contents} />\n        })}\n        <div style={{ marginTop: '80px' }} />\n      </BodyContainer>\n      <Footer />\n    </Container>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/policy/terms.tsx",["604","605","606"],[],"import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Header } from '../main-pages/header'\nimport { Margin36 } from '../component/styledComponent'\nimport { TermBox } from './termBox'\nimport Select from 'react-select'\nimport { LocationText, PrivacyText, TermsText } from './text'\nimport { Footer } from '../main-pages/footer'\n\nconst Container = styled.div`\n  width: 100%;\n`\nconst BodyContainer = styled.div`\n  margin: 0 auto;\n  width: 1280px;\n`\n\nconst TitleContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-top: 56px;\n  align-items: center;\n`\n\nconst Title = styled.div`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 24px;\n  color: #000000;\n  text-align: left;\n`\n\nexport const Terms = () => {\n  const DateOptions = [{ value: '0', label: '2023.05.15' }]\n  const [Date, setDate] = useState('0')\n  return (\n    <Container>\n      <Header />\n      <BodyContainer>\n        <TitleContainer>\n          <Title>서비스 이용약관</Title>\n          <Select\n            options={DateOptions}\n            defaultValue={DateOptions[0]}\n            onChange={e => e && setDate(e?.value)}\n            isSearchable={false}\n            theme={theme => ({\n              ...theme,\n              borderRadius: 12,\n              colors: {\n                ...theme.colors,\n                primary25: '#F0E6FD',\n                primary: '#5500DD',\n                neutral20: '#C1C2C3',\n              },\n            })}\n          />\n        </TitleContainer>\n      </BodyContainer>\n      <Margin36 />\n      <BodyContainer>\n        {TermsText.map(terms => {\n          return <TermBox title={terms.title} contents={terms.contents} />\n        })}\n        <div style={{ marginTop: '80px' }} />\n      </BodyContainer>\n      <Footer />\n    </Container>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/main-pages/header.tsx",["607","608"],[],"import React from 'react'\nimport { useNavigate } from 'react-router'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  background-color: #ffffff;\n  border-bottom: 1px solid #c1c2c3;\n  display: fixed;\n  justify-content: center;\n`\n\nconst HeaderWrapper = styled.div`\n  height: 100px;\n  width: 1280px;\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst LogoWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n  cursor: pointer;\n`\n\nconst Logo = styled.span`\n  width: 56px;\n  height: 56px;\n`\n\nconst Title = styled.span`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 28px;\n`\n\nconst ButtonWrapper = styled.div`\n  gap: 36px;\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst Button = styled.div``\n\nconst Navigator = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 168px;\n  height: 48px;\n  border: 1px solid #5500dd;\n  background-color: #ffffff;\n  border-radius: 16px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  color: #5500dd;\n  text-decoration: none;\n  cursor: pointer;\n`\n\nexport const Header = () => {\n  const navigate = useNavigate()\n  const onClickAdminLogin = () => {\n    navigate('/AdminLogin')\n  }\n  const onClickLogo = () => {\n    navigate('/')\n  }\n\n  return (\n    <Container>\n      <HeaderWrapper>\n        <LogoWrapper onClick={onClickLogo}>\n          <Logo>\n            <img\n              style={{ width: '56px', height: '56px' }}\n              src=\"/source/main_logo.png\"\n              alt=\"jooda logo\"\n            />\n          </Logo>\n          <Title>주다</Title>\n        </LogoWrapper>\n        <ButtonWrapper>\n          <Button>\n            <a href=\"http://www.naver.com\" target=\"_blank\">\n              <img src=\"/source/app_store.svg\" alt=\"apple store\" />\n            </a>\n          </Button>\n          <Button>\n            <a href=\"http://www.google.com\" target=\"_blank\">\n              <img src=\"/source/play_store.svg\" alt=\"play store\" />\n            </a>\n          </Button>\n          <Navigator onClick={onClickAdminLogin}>관리자 로그인</Navigator>\n        </ButtonWrapper>\n      </HeaderWrapper>\n    </Container>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/policy/termBox.tsx",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/policy/text.ts",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/main-pages/footer.tsx",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/main-pages/home-pages/page1.tsx",["609","610"],[],"import React from 'react'\n\nimport styled from 'styled-components'\nimport { Margin24 } from '../../component/styledComponent'\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  height: 890px;\n  align-items: center;\n  min-width: 1200px;\n`\nconst TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 463px;\n  width: 436px;\n  margin-right: 164px;\n  margin-top: 137px;\n  justify-content: flex-start;\n  text-align: left;\n`\nconst Title = styled.text`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 56px;\n  line-height: 72px;\n  color: #000000;\n  white-space: nowrap;\n`\nconst Description = styled.div`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 36px;\n  color: #656667;\n`\nconst Button = styled.div`\n  // width: 203px;\n  height: 40px;\n  background: #5500dd;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.24);\n  border-radius: 36px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 24px;\n  \n  color: #ffffff;\n  display: flex;\n  text-align: center;\n  align-item: center;\n  padding-left: 95px;\n  padding-top: 16px;\n`\nconst LeftArrow = styled.div`\n  margin-left: 47px;\n`\nconst MainPageImage = styled.img`\n  width: 600px;\n  height: 600px;\n`\n\nexport const Page1 = () => {\n  return (\n    <div\n      style={{\n        width: '100vw',\n        height: '890px',\n        backgroundColor: '#ffffff',\n      }}\n    >\n      <Container>\n        <TextContainer>\n          <Title>교회 관리를</Title>\n          <Title>\n            <text style={{ fontWeight: 700, color: '#5500dd' }}>\n              빠르고 효율적\n            </text>\n            으로,\n          </Title>\n          <Margin24 style={{ backgroundColor: '#ffffff' }} />\n          <Description>\n            복잡했던 예배 일정 공지, 주보 제작 및 인쇄, 신도 관리를\n          </Description>\n          <Description>\n            쉽고편리하게 교회를 관리할 수 있는 통합 서비스입니다.\n          </Description>\n          <Margin24 style={{ backgroundColor: '#ffffff' }} />\n          <Margin24 style={{ backgroundColor: '#ffffff' }} />\n          <a href=\"https://forms.gle/RJB1F8aDL6RkFngk9\" target=\"_blank\" style={{ maxWidth: \"298px\", textDecoration: \"None\" }}>\n            <Button>\n              고객 제휴 문의\n              <LeftArrow>\n                <img src=\"/source/icon/arrow_right_white.svg\" />\n              </LeftArrow>\n            </Button>\n          </a>\n        </TextContainer>\n        <MainPageImage src=\"/source/main_page_1.png\" />\n      </Container>\n    </div>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/main-pages/home-pages/page3.tsx",["611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626"],[],"import React from 'react'\nimport {\n  Animator,\n  ScrollContainer,\n  ScrollPage,\n  batch,\n  Fade,\n  FadeIn,\n  FadeOut,\n  Move,\n  MoveIn,\n  MoveOut,\n  Sticky,\n  StickyIn,\n  StickyOut,\n  Zoom,\n  ZoomIn,\n  ZoomOut,\n} from 'react-scroll-motion'\nimport styled from 'styled-components'\nimport { Margin24 } from '../../component/styledComponent'\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  height: 890px;\n  align-items: center;\n  min-width: 1200px;\n`\nconst TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 420px;\n  width: 436px;\n  margin-right: 164px;\n  padding-top: 180px;\n  justify-content: flex-start;\n  text-align: left;\n`\nconst Title = styled.text`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 56px;\n  line-height: 72px;\n  color: #000000;\n  white-space: nowrap;\n`\nconst Description = styled.div`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 36px;\n  color: #656667;\n`\nconst MainPageImage = styled.img`\n  width: 600px;\n  height: 600px;\n`\n\nexport const Page3 = () => {\n  return (\n    <div\n      style={{\n        width: '100vw',\n        height: '890px',\n        backgroundColor: '#F5F4F7',\n      }}\n    >\n      <Container>\n        <TextContainer>\n          <Title>교회 관리를</Title>\n          <Title>\n            <text style={{ fontWeight: 700, color: '#5500dd' }}>10초</text>\n            만에\n          </Title>\n          <Margin24 style={{ backgroundColor: '#f5f4f7' }} />\n          <Description>주다와 함께라면 간단한 등록 한 번에</Description>\n          <Description>\n            모든 교인들이 앱으로 빠르게 확인할 수 있어요.\n          </Description>\n        </TextContainer>\n        <MainPageImage src=\"/source/main_page_3.png\" />\n      </Container>\n    </div>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/main-pages/home-pages/page4.tsx",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/main-pages/home-pages/page5.tsx",["627","628"],[],"import React from 'react'\n\nimport styled from 'styled-components'\nimport { Margin24 } from '../../component/styledComponent'\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  height: 890px;\n  align-items: center;\n  min-width: 1200px;\n`\nconst TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 600px;\n  width: 436px;\n  margin-right: 162px;\n  padding-top: 24px;\n  justify-content: flex-start;\n  text-align: left;\n`\nconst Title = styled.text`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 56px;\n  line-height: 72px;\n  color: #000000;\n  white-space: nowrap;\n`\nconst Description = styled.div`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 36px;\n  color: #656667;\n`\nconst ButtonContanier = styled.div`\n  width: 394px;\n  height: 240px;\n  background: #5500dd;\n  border-radius: 24px;\n  padding-top: 32px;\n  padding-left: 48px;\n`\nconst ButtonText = styled.div`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 48px;\n  color: #ffffff;\n`\nconst Button = styled.div`\n  width: 250px;\n  height: 44px;\n  background: #5500dd;\n  border: 1px solid #ffffff;\n  filter: drop-shadow(0px 4px 8px rgba(0, 0, 0, 0.24));\n  border-radius: 36px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 24px;\n  color: #ffffff;\n  display: flex;\n  text-align: center;\n  align-item: center;\n  padding-left: 95px;\n  padding-top: 16px;\n  margin-top: 24px;\n`\nconst LeftArrow = styled.div`\n  margin-left: 47px;\n`\nconst MainPageImage = styled.img`\n  width: 600px;\n  height: 600px;\n`\n\nexport const Page5 = () => {\n  return (\n    <div\n      style={{\n        width: '100vw',\n        height: '890px',\n        backgroundColor: '#F5F4F7',\n      }}\n    >\n      <Container>\n        <TextContainer>\n          <Title>손쉬운 사용을 위한</Title>\n          <Title>\n            <text style={{ fontWeight: 700, color: '#5500dd' }}>가이드북</text>\n          </Title>\n          <Margin24 style={{ backgroundColor: '#f5f4f7' }} />\n          <Description>\n            누구나 쉽게 이용할 수 있게 가이드라인을 제공해요.\n          </Description>\n          <Description>앞으로의 교회 생활을 주다와 함께해요.</Description>\n          <Margin24 style={{ backgroundColor: '#f5f4f7' }} />\n          <Margin24 style={{ backgroundColor: '#f5f4f7' }} />\n          <ButtonContanier>\n            <ButtonText>이제 교회 관리는</ButtonText>\n            <ButtonText>주다와 함께하세요</ButtonText>\n            <a href=\"https://forms.gle/RJB1F8aDL6RkFngk9\" target=\"_blank\" style={{ maxWidth: \"298px\", textDecoration: \"None\" }}>\n              <Button>\n                고객 제휴 문의\n                <LeftArrow>\n                  <img src=\"/source/icon/arrow_right_white.svg\" />\n                </LeftArrow>\n              </Button>\n            </a>\n          </ButtonContanier>\n        </TextContainer>\n        <MainPageImage src=\"/source/main_page_5.png\" />\n      </Container >\n    </div >\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/main-pages/home-pages/page2.tsx",[],[],"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-information/pastor/pastorBoxOrder.tsx",["629","630","631"],[],"import { useEffect, useState } from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  height: 88px;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  border: 1px solid #c1c2c3;\n  border-radius: 16px;\n  padding-left: 24px;\n  margin-bottom: 16px;\n  cursor: move;\n  outline: none;\n`\nconst InfoContainer = styled.div`\n  height: 110px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\nconst Image = styled.div`\n  width: 42px;\n  height: 56px;\n  border-radius: 8px;\n  border: none;\n  overflow: hidden;\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n  margin-left: 16px;\n  margin-right: 16px;\n`\nconst InputBox = styled.input`\n  width: 48px;\n  box-sizing: border-box;\n  border-radius: 16px;\n  height: 56px;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  border: 1px solid #c1c2c3;\n  text-align: center;\n  color: ${props => (props.value ? '#000000' : '#797a7b')};\n  &:focus {\n    outline: 2px solid #000000;\n    outline-offset: -1px;\n  }\n`\nconst TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: left;\n`\n\nconst Name = styled.div`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  color: #000000;\n`\nconst Role = styled.div`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 24px;\n  color: #797a7b;\n`\ninterface PastorImageProps {\n  index: number\n  image: string\n  name: string\n  role: string\n  changeIndex: Function\n  NoActive: Function\n  onDrop: Function\n  onDragEnter: Function\n}\n\nexport const PastorBoxOrder = (props: PastorImageProps) => {\n  const {\n    index,\n    image,\n    name,\n    role,\n    changeIndex,\n    NoActive,\n    onDrop,\n    onDragEnter,\n  } = props\n\n  const [order, setOrder] = useState<number>(index + 1)\n  const [isTyping, setIsTyping] = useState<boolean>(false)\n  useEffect(() => {\n    if (order !== index + 1 && !isTyping) {\n      changeIndex(index, order - 1)\n    }\n  }, [order, isTyping])\n  return (\n    <Container\n      draggable\n      onDrop={event => onDrop(event, index)}\n      onDragLeave={event => NoActive(event)}\n      onDragStart={event => onDragEnter(event, index)}\n    >\n      <InfoContainer>\n        <InputBox\n          type=\"text\"\n          value={order}\n          placeholder={''}\n          onFocus={() => setIsTyping(true)}\n          onChange={e =>\n            setOrder(e.target.value ? parseInt(e.target.value) : 0)\n          }\n          onBlur={() => setIsTyping(false)}\n        />\n        <Image\n          style={{\n            background: '#ffffff',\n          }}\n        >\n          <img src={image} />\n        </Image>\n        <TextContainer>\n          <Name>{name}</Name>\n          <Role>{role}</Role>\n        </TextContainer>\n      </InfoContainer>\n\n      <img style={{ marginRight: '24px' }} src={'/source/icon/uil_bars.svg'} />\n    </Container>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/component/toast/index.tsx",["632","633"],[],"import { ToastContainer } from 'react-toastify'\nimport styled from 'styled-components'\nimport { toast, ToastOptions } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nconst Container = styled(ToastContainer)`\n  .Toastify__toast {\n    font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n    font-style: normal;\n    font-weight: 550;\n    font-size: 18px;\n    line-height: 24px;\n    border-radius: 16px;\n    padding: 20px;\n    padding-left: 16px;\n    background: #17181a;\n    margin-right: 12px;\n  }\n\n  .Toastify__toast-icon {\n    width: 28px;\n    height: 28px;\n  }\n  .Toastify__progress-bar-theme--dark {\n    background: #8b47f0;\n  }\n  .Toastify__close-button {\n    color: #17181a;\n  }\n`\n\nexport const showToast = (type: string) => {\n  var toast_message =\n    type === 'create'\n      ? '등록이 완료되었어요❕'\n      : type === 'patch'\n        ? '수정이 완료되었어요❕'\n        : type === 'delete'\n          ? '삭제가 완료되었어요❕'\n          : type\n  toast_message.length !== 0 &&\n    toast(toast_message, {\n      icon: ({ theme, type }) => <img src=\"source/icon/check_P400.svg\" />,\n      position: 'bottom-right',\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'dark',\n    })\n}\nexport const Toast = () => {\n  return (\n    <div style={{ textAlign: 'left' }}>\n      <Container />\n    </div>\n  )\n}\n","/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/error-pages/useErrorNavigator.ts",[],[],{"ruleId":"634","severity":1,"message":"635","line":2,"column":8,"nodeType":"636","messageId":"637","endLine":2,"endColumn":14},{"ruleId":"634","severity":1,"message":"638","line":3,"column":10,"nodeType":"636","messageId":"637","endLine":3,"endColumn":23},{"ruleId":"634","severity":1,"message":"639","line":4,"column":8,"nodeType":"636","messageId":"637","endLine":4,"endColumn":13},{"ruleId":"640","severity":1,"message":"641","line":87,"column":9,"nodeType":"642","endLine":90,"endColumn":11},{"ruleId":"634","severity":1,"message":"638","line":3,"column":10,"nodeType":"636","messageId":"637","endLine":3,"endColumn":23},{"ruleId":"634","severity":1,"message":"643","line":3,"column":25,"nodeType":"636","messageId":"637","endLine":3,"endColumn":31},{"ruleId":"634","severity":1,"message":"644","line":3,"column":33,"nodeType":"636","messageId":"637","endLine":3,"endColumn":38},{"ruleId":"634","severity":1,"message":"645","line":12,"column":8,"nodeType":"636","messageId":"637","endLine":12,"endColumn":17},{"ruleId":"646","severity":1,"message":"647","line":194,"column":6,"nodeType":"648","endLine":194,"endColumn":8,"suggestions":"649"},{"ruleId":"634","severity":1,"message":"650","line":196,"column":10,"nodeType":"636","messageId":"637","endLine":196,"endColumn":26},{"ruleId":"634","severity":1,"message":"651","line":196,"column":28,"nodeType":"636","messageId":"637","endLine":196,"endColumn":47},{"ruleId":"634","severity":1,"message":"652","line":197,"column":10,"nodeType":"636","messageId":"637","endLine":197,"endColumn":27},{"ruleId":"634","severity":1,"message":"653","line":197,"column":29,"nodeType":"636","messageId":"637","endLine":197,"endColumn":49},{"ruleId":"634","severity":1,"message":"654","line":198,"column":10,"nodeType":"636","messageId":"637","endLine":198,"endColumn":21},{"ruleId":"634","severity":1,"message":"655","line":198,"column":23,"nodeType":"636","messageId":"637","endLine":198,"endColumn":37},{"ruleId":"634","severity":1,"message":"656","line":199,"column":10,"nodeType":"636","messageId":"637","endLine":199,"endColumn":23},{"ruleId":"634","severity":1,"message":"657","line":199,"column":25,"nodeType":"636","messageId":"637","endLine":199,"endColumn":41},{"ruleId":"634","severity":1,"message":"658","line":200,"column":10,"nodeType":"636","messageId":"637","endLine":200,"endColumn":21},{"ruleId":"634","severity":1,"message":"659","line":200,"column":23,"nodeType":"636","messageId":"637","endLine":200,"endColumn":37},{"ruleId":"634","severity":1,"message":"660","line":1,"column":27,"nodeType":"636","messageId":"637","endLine":1,"endColumn":33},{"ruleId":"634","severity":1,"message":"661","line":9,"column":10,"nodeType":"636","messageId":"637","endLine":9,"endColumn":24},{"ruleId":"634","severity":1,"message":"662","line":9,"column":26,"nodeType":"636","messageId":"637","endLine":9,"endColumn":31},{"ruleId":"634","severity":1,"message":"663","line":11,"column":10,"nodeType":"636","messageId":"637","endLine":11,"endColumn":15},{"ruleId":"634","severity":1,"message":"664","line":17,"column":7,"nodeType":"636","messageId":"637","endLine":17,"endColumn":18},{"ruleId":"634","severity":1,"message":"665","line":24,"column":7,"nodeType":"636","messageId":"637","endLine":24,"endColumn":11},{"ruleId":"634","severity":1,"message":"666","line":26,"column":7,"nodeType":"636","messageId":"637","endLine":26,"endColumn":12},{"ruleId":"634","severity":1,"message":"667","line":153,"column":10,"nodeType":"636","messageId":"637","endLine":153,"endColumn":20},{"ruleId":"646","severity":1,"message":"668","line":190,"column":6,"nodeType":"648","endLine":190,"endColumn":30,"suggestions":"669"},{"ruleId":"670","severity":1,"message":"671","line":225,"column":13,"nodeType":"642","messageId":"672","endLine":225,"endColumn":75,"fix":"673"},{"ruleId":"634","severity":1,"message":"674","line":1,"column":17,"nodeType":"636","messageId":"637","endLine":1,"endColumn":26},{"ruleId":"634","severity":1,"message":"675","line":1,"column":28,"nodeType":"636","messageId":"637","endLine":1,"endColumn":36},{"ruleId":"634","severity":1,"message":"676","line":5,"column":10,"nodeType":"636","messageId":"637","endLine":5,"endColumn":18},{"ruleId":"634","severity":1,"message":"677","line":5,"column":20,"nodeType":"636","messageId":"637","endLine":5,"endColumn":28},{"ruleId":"634","severity":1,"message":"660","line":3,"column":20,"nodeType":"636","messageId":"637","endLine":3,"endColumn":26},{"ruleId":"646","severity":1,"message":"678","line":109,"column":6,"nodeType":"648","endLine":109,"endColumn":15,"suggestions":"679"},{"ruleId":"646","severity":1,"message":"680","line":119,"column":6,"nodeType":"648","endLine":119,"endColumn":19,"suggestions":"681"},{"ruleId":"646","severity":1,"message":"647","line":101,"column":6,"nodeType":"648","endLine":101,"endColumn":8,"suggestions":"682"},{"ruleId":"646","severity":1,"message":"647","line":191,"column":6,"nodeType":"648","endLine":191,"endColumn":8,"suggestions":"683"},{"ruleId":"634","severity":1,"message":"684","line":200,"column":10,"nodeType":"636","messageId":"637","endLine":200,"endColumn":26},{"ruleId":"634","severity":1,"message":"685","line":1,"column":17,"nodeType":"636","messageId":"637","endLine":1,"endColumn":25},{"ruleId":"634","severity":1,"message":"686","line":1,"column":27,"nodeType":"636","messageId":"637","endLine":1,"endColumn":41},{"ruleId":"634","severity":1,"message":"660","line":3,"column":20,"nodeType":"636","messageId":"637","endLine":3,"endColumn":26},{"ruleId":"646","severity":1,"message":"678","line":199,"column":6,"nodeType":"648","endLine":199,"endColumn":15,"suggestions":"687"},{"ruleId":"646","severity":1,"message":"688","line":209,"column":6,"nodeType":"648","endLine":209,"endColumn":19,"suggestions":"689"},{"ruleId":"634","severity":1,"message":"660","line":3,"column":20,"nodeType":"636","messageId":"637","endLine":3,"endColumn":26},{"ruleId":"634","severity":1,"message":"690","line":62,"column":7,"nodeType":"636","messageId":"637","endLine":62,"endColumn":18},{"ruleId":"646","severity":1,"message":"678","line":199,"column":6,"nodeType":"648","endLine":199,"endColumn":15,"suggestions":"691"},{"ruleId":"646","severity":1,"message":"692","line":208,"column":6,"nodeType":"648","endLine":208,"endColumn":19,"suggestions":"693"},{"ruleId":"646","severity":1,"message":"678","line":120,"column":6,"nodeType":"648","endLine":120,"endColumn":15,"suggestions":"694"},{"ruleId":"646","severity":1,"message":"695","line":130,"column":6,"nodeType":"648","endLine":130,"endColumn":19,"suggestions":"696"},{"ruleId":"634","severity":1,"message":"697","line":226,"column":9,"nodeType":"636","messageId":"637","endLine":226,"endColumn":21},{"ruleId":"634","severity":1,"message":"698","line":227,"column":9,"nodeType":"636","messageId":"637","endLine":227,"endColumn":18},{"ruleId":"634","severity":1,"message":"699","line":156,"column":7,"nodeType":"636","messageId":"637","endLine":156,"endColumn":19},{"ruleId":"646","severity":1,"message":"647","line":141,"column":6,"nodeType":"648","endLine":141,"endColumn":8,"suggestions":"700"},{"ruleId":"701","severity":1,"message":"702","line":166,"column":42,"nodeType":"703","messageId":"704","endLine":166,"endColumn":44},{"ruleId":"646","severity":1,"message":"705","line":206,"column":6,"nodeType":"648","endLine":206,"endColumn":18,"suggestions":"706"},{"ruleId":"634","severity":1,"message":"660","line":5,"column":3,"nodeType":"636","messageId":"637","endLine":5,"endColumn":9},{"ruleId":"634","severity":1,"message":"707","line":9,"column":8,"nodeType":"636","messageId":"637","endLine":9,"endColumn":14},{"ruleId":"634","severity":1,"message":"708","line":90,"column":7,"nodeType":"636","messageId":"637","endLine":90,"endColumn":23},{"ruleId":"634","severity":1,"message":"709","line":95,"column":7,"nodeType":"636","messageId":"637","endLine":95,"endColumn":12},{"ruleId":"634","severity":1,"message":"710","line":109,"column":7,"nodeType":"636","messageId":"637","endLine":109,"endColumn":15},{"ruleId":"634","severity":1,"message":"699","line":129,"column":7,"nodeType":"636","messageId":"637","endLine":129,"endColumn":19},{"ruleId":"634","severity":1,"message":"711","line":139,"column":7,"nodeType":"636","messageId":"637","endLine":139,"endColumn":14},{"ruleId":"634","severity":1,"message":"707","line":9,"column":8,"nodeType":"636","messageId":"637","endLine":9,"endColumn":14},{"ruleId":"634","severity":1,"message":"712","line":11,"column":10,"nodeType":"636","messageId":"637","endLine":11,"endColumn":13},{"ruleId":"634","severity":1,"message":"708","line":80,"column":7,"nodeType":"636","messageId":"637","endLine":80,"endColumn":23},{"ruleId":"634","severity":1,"message":"709","line":85,"column":7,"nodeType":"636","messageId":"637","endLine":85,"endColumn":12},{"ruleId":"634","severity":1,"message":"710","line":99,"column":7,"nodeType":"636","messageId":"637","endLine":99,"endColumn":15},{"ruleId":"634","severity":1,"message":"699","line":119,"column":7,"nodeType":"636","messageId":"637","endLine":119,"endColumn":19},{"ruleId":"634","severity":1,"message":"685","line":1,"column":10,"nodeType":"636","messageId":"637","endLine":1,"endColumn":18},{"ruleId":"634","severity":1,"message":"686","line":1,"column":20,"nodeType":"636","messageId":"637","endLine":1,"endColumn":34},{"ruleId":"634","severity":1,"message":"675","line":1,"column":44,"nodeType":"636","messageId":"637","endLine":1,"endColumn":52},{"ruleId":"640","severity":1,"message":"641","line":94,"column":9,"nodeType":"642","endLine":96,"endColumn":11},{"ruleId":"634","severity":1,"message":"708","line":91,"column":7,"nodeType":"636","messageId":"637","endLine":91,"endColumn":23},{"ruleId":"634","severity":1,"message":"709","line":96,"column":7,"nodeType":"636","messageId":"637","endLine":96,"endColumn":12},{"ruleId":"634","severity":1,"message":"710","line":110,"column":7,"nodeType":"636","messageId":"637","endLine":110,"endColumn":15},{"ruleId":"634","severity":1,"message":"699","line":130,"column":7,"nodeType":"636","messageId":"637","endLine":130,"endColumn":19},{"ruleId":"634","severity":1,"message":"711","line":140,"column":7,"nodeType":"636","messageId":"637","endLine":140,"endColumn":14},{"ruleId":"634","severity":1,"message":"713","line":146,"column":7,"nodeType":"636","messageId":"637","endLine":146,"endColumn":20},{"ruleId":"634","severity":1,"message":"708","line":96,"column":7,"nodeType":"636","messageId":"637","endLine":96,"endColumn":23},{"ruleId":"634","severity":1,"message":"709","line":101,"column":7,"nodeType":"636","messageId":"637","endLine":101,"endColumn":12},{"ruleId":"634","severity":1,"message":"710","line":115,"column":7,"nodeType":"636","messageId":"637","endLine":115,"endColumn":15},{"ruleId":"634","severity":1,"message":"699","line":135,"column":7,"nodeType":"636","messageId":"637","endLine":135,"endColumn":19},{"ruleId":"634","severity":1,"message":"711","line":145,"column":7,"nodeType":"636","messageId":"637","endLine":145,"endColumn":14},{"ruleId":"634","severity":1,"message":"713","line":151,"column":7,"nodeType":"636","messageId":"637","endLine":151,"endColumn":20},{"ruleId":"634","severity":1,"message":"714","line":158,"column":7,"nodeType":"636","messageId":"637","endLine":158,"endColumn":19},{"ruleId":"634","severity":1,"message":"715","line":164,"column":7,"nodeType":"636","messageId":"637","endLine":164,"endColumn":16},{"ruleId":"634","severity":1,"message":"685","line":1,"column":10,"nodeType":"636","messageId":"637","endLine":1,"endColumn":18},{"ruleId":"634","severity":1,"message":"686","line":1,"column":20,"nodeType":"636","messageId":"637","endLine":1,"endColumn":34},{"ruleId":"634","severity":1,"message":"660","line":1,"column":47,"nodeType":"636","messageId":"637","endLine":1,"endColumn":53},{"ruleId":"634","severity":1,"message":"675","line":1,"column":55,"nodeType":"636","messageId":"637","endLine":1,"endColumn":63},{"ruleId":"634","severity":1,"message":"716","line":4,"column":10,"nodeType":"636","messageId":"637","endLine":4,"endColumn":21},{"ruleId":"634","severity":1,"message":"717","line":5,"column":10,"nodeType":"636","messageId":"637","endLine":5,"endColumn":27},{"ruleId":"646","severity":1,"message":"718","line":88,"column":6,"nodeType":"648","endLine":88,"endColumn":28,"suggestions":"719"},{"ruleId":"646","severity":1,"message":"720","line":91,"column":6,"nodeType":"648","endLine":91,"endColumn":12,"suggestions":"721"},{"ruleId":"634","severity":1,"message":"722","line":95,"column":29,"nodeType":"636","messageId":"637","endLine":95,"endColumn":38},{"ruleId":"646","severity":1,"message":"723","line":113,"column":6,"nodeType":"648","endLine":113,"endColumn":15,"suggestions":"724"},{"ruleId":"646","severity":1,"message":"725","line":122,"column":6,"nodeType":"648","endLine":122,"endColumn":8,"suggestions":"726"},{"ruleId":"646","severity":1,"message":"727","line":131,"column":6,"nodeType":"648","endLine":131,"endColumn":15,"suggestions":"728"},{"ruleId":"634","severity":1,"message":"674","line":1,"column":17,"nodeType":"636","messageId":"637","endLine":1,"endColumn":26},{"ruleId":"634","severity":1,"message":"675","line":1,"column":28,"nodeType":"636","messageId":"637","endLine":1,"endColumn":36},{"ruleId":"646","severity":1,"message":"729","line":57,"column":6,"nodeType":"648","endLine":57,"endColumn":26,"suggestions":"730"},{"ruleId":"634","severity":1,"message":"685","line":2,"column":3,"nodeType":"636","messageId":"637","endLine":2,"endColumn":11},{"ruleId":"634","severity":1,"message":"686","line":3,"column":3,"nodeType":"636","messageId":"637","endLine":3,"endColumn":17},{"ruleId":"634","severity":1,"message":"674","line":4,"column":3,"nodeType":"636","messageId":"637","endLine":4,"endColumn":12},{"ruleId":"634","severity":1,"message":"660","line":5,"column":3,"nodeType":"636","messageId":"637","endLine":5,"endColumn":9},{"ruleId":"634","severity":1,"message":"675","line":6,"column":3,"nodeType":"636","messageId":"637","endLine":6,"endColumn":11},{"ruleId":"634","severity":1,"message":"707","line":9,"column":8,"nodeType":"636","messageId":"637","endLine":9,"endColumn":14},{"ruleId":"634","severity":1,"message":"712","line":10,"column":10,"nodeType":"636","messageId":"637","endLine":10,"endColumn":13},{"ruleId":"634","severity":1,"message":"722","line":121,"column":29,"nodeType":"636","messageId":"637","endLine":121,"endColumn":38},{"ruleId":"646","severity":1,"message":"723","line":144,"column":6,"nodeType":"648","endLine":144,"endColumn":15,"suggestions":"731"},{"ruleId":"646","severity":1,"message":"725","line":153,"column":6,"nodeType":"648","endLine":153,"endColumn":8,"suggestions":"732"},{"ruleId":"646","severity":1,"message":"727","line":162,"column":6,"nodeType":"648","endLine":162,"endColumn":15,"suggestions":"733"},{"ruleId":"634","severity":1,"message":"676","line":4,"column":10,"nodeType":"636","messageId":"637","endLine":4,"endColumn":18},{"ruleId":"634","severity":1,"message":"676","line":8,"column":3,"nodeType":"636","messageId":"637","endLine":8,"endColumn":11},{"ruleId":"646","severity":1,"message":"647","line":147,"column":6,"nodeType":"648","endLine":147,"endColumn":15,"suggestions":"734"},{"ruleId":"646","severity":1,"message":"735","line":151,"column":6,"nodeType":"648","endLine":151,"endColumn":20,"suggestions":"736"},{"ruleId":"634","severity":1,"message":"676","line":15,"column":3,"nodeType":"636","messageId":"637","endLine":15,"endColumn":11},{"ruleId":"634","severity":1,"message":"737","line":55,"column":34,"nodeType":"636","messageId":"637","endLine":55,"endColumn":41},{"ruleId":"646","severity":1,"message":"647","line":69,"column":6,"nodeType":"648","endLine":69,"endColumn":28,"suggestions":"738"},{"ruleId":"634","severity":1,"message":"660","line":1,"column":34,"nodeType":"636","messageId":"637","endLine":1,"endColumn":40},{"ruleId":"634","severity":1,"message":"674","line":1,"column":43,"nodeType":"636","messageId":"637","endLine":1,"endColumn":52},{"ruleId":"634","severity":1,"message":"739","line":69,"column":24,"nodeType":"636","messageId":"637","endLine":69,"endColumn":35},{"ruleId":"634","severity":1,"message":"660","line":1,"column":34,"nodeType":"636","messageId":"637","endLine":1,"endColumn":40},{"ruleId":"701","severity":1,"message":"740","line":87,"column":33,"nodeType":"703","messageId":"741","endLine":87,"endColumn":35},{"ruleId":"701","severity":1,"message":"740","line":126,"column":31,"nodeType":"703","messageId":"741","endLine":126,"endColumn":33},{"ruleId":"646","severity":1,"message":"742","line":173,"column":6,"nodeType":"648","endLine":173,"endColumn":20,"suggestions":"743"},{"ruleId":"634","severity":1,"message":"744","line":4,"column":3,"nodeType":"636","messageId":"637","endLine":4,"endColumn":19},{"ruleId":"634","severity":1,"message":"745","line":5,"column":3,"nodeType":"636","messageId":"637","endLine":5,"endColumn":20},{"ruleId":"634","severity":1,"message":"746","line":14,"column":3,"nodeType":"636","messageId":"637","endLine":14,"endColumn":11},{"ruleId":"634","severity":1,"message":"676","line":15,"column":3,"nodeType":"636","messageId":"637","endLine":15,"endColumn":11},{"ruleId":"646","severity":1,"message":"747","line":261,"column":6,"nodeType":"648","endLine":261,"endColumn":16,"suggestions":"748"},{"ruleId":"634","severity":1,"message":"660","line":5,"column":3,"nodeType":"636","messageId":"637","endLine":5,"endColumn":9},{"ruleId":"634","severity":1,"message":"713","line":42,"column":7,"nodeType":"636","messageId":"637","endLine":42,"endColumn":20},{"ruleId":"634","severity":1,"message":"749","line":46,"column":7,"nodeType":"636","messageId":"637","endLine":46,"endColumn":22},{"ruleId":"634","severity":1,"message":"750","line":78,"column":7,"nodeType":"636","messageId":"637","endLine":78,"endColumn":25},{"ruleId":"634","severity":1,"message":"709","line":123,"column":7,"nodeType":"636","messageId":"637","endLine":123,"endColumn":12},{"ruleId":"634","severity":1,"message":"699","line":178,"column":7,"nodeType":"636","messageId":"637","endLine":178,"endColumn":19},{"ruleId":"634","severity":1,"message":"711","line":188,"column":7,"nodeType":"636","messageId":"637","endLine":188,"endColumn":14},{"ruleId":"634","severity":1,"message":"751","line":207,"column":14,"nodeType":"636","messageId":"637","endLine":207,"endColumn":26},{"ruleId":"634","severity":1,"message":"752","line":213,"column":14,"nodeType":"636","messageId":"637","endLine":213,"endColumn":24},{"ruleId":"646","severity":1,"message":"753","line":219,"column":6,"nodeType":"648","endLine":219,"endColumn":16,"suggestions":"754"},{"ruleId":"634","severity":1,"message":"677","line":4,"column":20,"nodeType":"636","messageId":"637","endLine":4,"endColumn":28},{"ruleId":"634","severity":1,"message":"755","line":7,"column":10,"nodeType":"636","messageId":"637","endLine":7,"endColumn":22},{"ruleId":"634","severity":1,"message":"756","line":46,"column":10,"nodeType":"636","messageId":"637","endLine":46,"endColumn":14},{"ruleId":"634","severity":1,"message":"756","line":37,"column":10,"nodeType":"636","messageId":"637","endLine":37,"endColumn":14},{"ruleId":"634","severity":1,"message":"755","line":7,"column":10,"nodeType":"636","messageId":"637","endLine":7,"endColumn":22},{"ruleId":"634","severity":1,"message":"757","line":7,"column":24,"nodeType":"636","messageId":"637","endLine":7,"endColumn":35},{"ruleId":"634","severity":1,"message":"756","line":38,"column":10,"nodeType":"636","messageId":"637","endLine":38,"endColumn":14},{"ruleId":"670","severity":1,"message":"671","line":91,"column":13,"nodeType":"642","messageId":"672","endLine":91,"endColumn":60,"fix":"758"},{"ruleId":"670","severity":1,"message":"671","line":96,"column":13,"nodeType":"642","messageId":"672","endLine":96,"endColumn":61,"fix":"759"},{"ruleId":"670","severity":1,"message":"671","line":94,"column":11,"nodeType":"642","messageId":"672","endLine":94,"endColumn":127,"fix":"760"},{"ruleId":"640","severity":1,"message":"641","line":98,"column":17,"nodeType":"642","endLine":98,"endColumn":65},{"ruleId":"634","severity":1,"message":"761","line":3,"column":3,"nodeType":"636","messageId":"637","endLine":3,"endColumn":11},{"ruleId":"634","severity":1,"message":"762","line":4,"column":3,"nodeType":"636","messageId":"637","endLine":4,"endColumn":18},{"ruleId":"634","severity":1,"message":"763","line":5,"column":3,"nodeType":"636","messageId":"637","endLine":5,"endColumn":13},{"ruleId":"634","severity":1,"message":"764","line":6,"column":3,"nodeType":"636","messageId":"637","endLine":6,"endColumn":8},{"ruleId":"634","severity":1,"message":"765","line":7,"column":3,"nodeType":"636","messageId":"637","endLine":7,"endColumn":7},{"ruleId":"634","severity":1,"message":"766","line":8,"column":3,"nodeType":"636","messageId":"637","endLine":8,"endColumn":9},{"ruleId":"634","severity":1,"message":"767","line":9,"column":3,"nodeType":"636","messageId":"637","endLine":9,"endColumn":10},{"ruleId":"634","severity":1,"message":"768","line":10,"column":3,"nodeType":"636","messageId":"637","endLine":10,"endColumn":7},{"ruleId":"634","severity":1,"message":"769","line":11,"column":3,"nodeType":"636","messageId":"637","endLine":11,"endColumn":9},{"ruleId":"634","severity":1,"message":"770","line":12,"column":3,"nodeType":"636","messageId":"637","endLine":12,"endColumn":10},{"ruleId":"634","severity":1,"message":"771","line":13,"column":3,"nodeType":"636","messageId":"637","endLine":13,"endColumn":9},{"ruleId":"634","severity":1,"message":"772","line":14,"column":3,"nodeType":"636","messageId":"637","endLine":14,"endColumn":11},{"ruleId":"634","severity":1,"message":"773","line":15,"column":3,"nodeType":"636","messageId":"637","endLine":15,"endColumn":12},{"ruleId":"634","severity":1,"message":"774","line":16,"column":3,"nodeType":"636","messageId":"637","endLine":16,"endColumn":7},{"ruleId":"634","severity":1,"message":"775","line":17,"column":3,"nodeType":"636","messageId":"637","endLine":17,"endColumn":9},{"ruleId":"634","severity":1,"message":"776","line":18,"column":3,"nodeType":"636","messageId":"637","endLine":18,"endColumn":10},{"ruleId":"670","severity":1,"message":"671","line":109,"column":13,"nodeType":"642","messageId":"672","endLine":109,"endColumn":129,"fix":"777"},{"ruleId":"640","severity":1,"message":"641","line":113,"column":19,"nodeType":"642","endLine":113,"endColumn":67},{"ruleId":"646","severity":1,"message":"778","line":107,"column":6,"nodeType":"648","endLine":107,"endColumn":23,"suggestions":"779"},{"ruleId":"640","severity":1,"message":"641","line":131,"column":11,"nodeType":"642","endLine":131,"endColumn":30},{"ruleId":"640","severity":1,"message":"641","line":139,"column":7,"nodeType":"642","endLine":139,"endColumn":80},{"ruleId":"634","severity":1,"message":"780","line":3,"column":17,"nodeType":"636","messageId":"637","endLine":3,"endColumn":29},{"ruleId":"640","severity":1,"message":"641","line":43,"column":34,"nodeType":"642","endLine":43,"endColumn":74},"@typescript-eslint/no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Router' is defined but never used.","'Route' is defined but never used.","'ErrorPage' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'errorNavigator'. Either include it or remove the dependency array.","ArrayExpression",["781"],"'informationState' is assigned a value but never used.","'setInformationState' is assigned a value but never used.","'notificationState' is assigned a value but never used.","'setNotificationState' is assigned a value but never used.","'weeklyState' is assigned a value but never used.","'setWeeklyState' is assigned a value but never used.","'scheduleState' is assigned a value but never used.","'setScheduleState' is assigned a value but never used.","'memberState' is assigned a value but never used.","'setmemberState' is assigned a value but never used.","'useRef' is defined but never used.","'ToastContainer' is defined but never used.","'toast' is defined but never used.","'Toast' is defined but never used.","'LogoWrapper' is assigned a value but never used.","'Logo' is assigned a value but never used.","'Title' is assigned a value but never used.","'loginState' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["782"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"783","text":"784"},"'useEffect' is defined but never used.","'useState' is defined but never used.","'Margin24' is defined but never used.","'Margin36' is defined but never used.","React Hook useEffect has missing dependencies: 'currentPage', 'errorNavigator', and 'setMaxPage'. Either include them or remove the dependency array.",["785"],"React Hook useEffect has a missing dependency: 'getNoticePage'. Either include it or remove the dependency array.",["786"],["787"],["788"],"'denominationList' is assigned a value but never used.","'Dispatch' is defined but never used.","'SetStateAction' is defined but never used.",["789"],"React Hook useEffect has a missing dependency: 'getPastorPage'. Either include it or remove the dependency array.",["790"],"'buttonStyle' is assigned a value but never used.",["791"],"React Hook useEffect has a missing dependency: 'getHistoryPage'. Either include it or remove the dependency array.",["792"],["793"],"React Hook useEffect has a missing dependency: 'getWeeklyPage'. Either include it or remove the dependency array.",["794"],"'addButtonRef' is assigned a value but never used.","'scrollRef' is assigned a value but never used.","'SubTitleText' is assigned a value but never used.",["795"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useCallback has missing dependencies: 'movePastor' and 'onDrop'. Either include them or remove the dependency array.",["796"],"'Select' is defined but never used.","'WeeklyDateSelect' is assigned a value but never used.","'Image' is assigned a value but never used.","'InputBox' is assigned a value but never used.","'DataBox' is assigned a value but never used.","'Ref' is defined but never used.","'DataContainer' is assigned a value but never used.","'AddButtonBox' is assigned a value but never used.","'AddButton' is assigned a value but never used.","'useDebounce' is defined but never used.","'InputBoxWithError' is defined but never used.","React Hook useEffect has missing dependencies: 'changeDate' and 'index'. Either include them or remove the dependency array.",["797"],"React Hook useEffect has missing dependencies: 'historyDate' and 'setDate'. Either include them or remove the dependency array.",["798"],"'isLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentPage', 'getChurchMember', 'keyword', and 'memberData.length'. Either include them or remove the dependency array.",["799"],"React Hook useEffect has a missing dependency: 'getChurchMember'. Either include it or remove the dependency array.",["800"],"React Hook useEffect has missing dependencies: 'debounceCallback', 'getChurchMember', 'maxPage', and 'setMaxPage'. Either include them or remove the dependency array.",["801"],"React Hook useEffect has a missing dependency: 'account_id'. Either include it or remove the dependency array.",["802"],["803"],["804"],["805"],["806"],"React Hook useEffect has a missing dependency: 'setMaxPage'. Either include it or remove the dependency array.",["807"],"'setYear' is assigned a value but never used.",["808"],"'currentYear' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has a missing dependency: 'findLocationSchedule'. Either include it or remove the dependency array.",["809"],"'FlexRowInnerLeft' is defined but never used.","'FlexRowInnerRight' is defined but never used.","'Margin16' is defined but never used.","React Hook useEffect has missing dependencies: 'setEndTime' and 'setStartTime'. Either include them or remove the dependency array.",["810"],"'ButtonContainer' is assigned a value but never used.","'NoticeModalContent' is assigned a value but never used.","'isStartValid' is assigned a value but never used.","'isEndValid' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setEndDate' and 'setStartDate'. Either include them or remove the dependency array.",["811"],"'LocationText' is defined but never used.","'Date' is assigned a value but never used.","'PrivacyText' is defined but never used.",{"range":"812","text":"784"},{"range":"813","text":"784"},{"range":"814","text":"784"},"'Animator' is defined but never used.","'ScrollContainer' is defined but never used.","'ScrollPage' is defined but never used.","'batch' is defined but never used.","'Fade' is defined but never used.","'FadeIn' is defined but never used.","'FadeOut' is defined but never used.","'Move' is defined but never used.","'MoveIn' is defined but never used.","'MoveOut' is defined but never used.","'Sticky' is defined but never used.","'StickyIn' is defined but never used.","'StickyOut' is defined but never used.","'Zoom' is defined but never used.","'ZoomIn' is defined but never used.","'ZoomOut' is defined but never used.",{"range":"815","text":"784"},"React Hook useEffect has missing dependencies: 'changeIndex' and 'index'. Either include them or remove the dependency array.",["816"],"'ToastOptions' is defined but never used.",{"desc":"817","fix":"818"},{"desc":"819","fix":"820"},[5669,5669]," rel=\"noreferrer\"",{"desc":"821","fix":"822"},{"desc":"823","fix":"824"},{"desc":"817","fix":"825"},{"desc":"817","fix":"826"},{"desc":"821","fix":"827"},{"desc":"828","fix":"829"},{"desc":"821","fix":"830"},{"desc":"831","fix":"832"},{"desc":"821","fix":"833"},{"desc":"834","fix":"835"},{"desc":"817","fix":"836"},{"desc":"837","fix":"838"},{"desc":"839","fix":"840"},{"desc":"841","fix":"842"},{"desc":"843","fix":"844"},{"desc":"845","fix":"846"},{"desc":"847","fix":"848"},{"desc":"849","fix":"850"},{"desc":"843","fix":"851"},{"desc":"845","fix":"852"},{"desc":"847","fix":"853"},{"desc":"854","fix":"855"},{"desc":"856","fix":"857"},{"desc":"858","fix":"859"},{"desc":"860","fix":"861"},{"desc":"862","fix":"863"},{"desc":"864","fix":"865"},[1962,1962],[2147,2147],[2341,2341],[2789,2789],{"desc":"866","fix":"867"},"Update the dependencies array to be: [errorNavigator]",{"range":"868","text":"869"},"Update the dependencies array to be: [dispatch, id, navigate, password]",{"range":"870","text":"871"},"Update the dependencies array to be: [currentPage, errorNavigator, refresh, setMaxPage]",{"range":"872","text":"873"},"Update the dependencies array to be: [currentPage, getNoticePage]",{"range":"874","text":"875"},{"range":"876","text":"869"},{"range":"877","text":"869"},{"range":"878","text":"873"},"Update the dependencies array to be: [currentPage, getPastorPage]",{"range":"879","text":"880"},{"range":"881","text":"873"},"Update the dependencies array to be: [currentPage, getHistoryPage]",{"range":"882","text":"883"},{"range":"884","text":"873"},"Update the dependencies array to be: [currentPage, getWeeklyPage]",{"range":"885","text":"886"},{"range":"887","text":"869"},"Update the dependencies array to be: [movePastor, onDrop, pastorData]",{"range":"888","text":"889"},"Update the dependencies array to be: [changeDate, historyDate, index, isValid]",{"range":"890","text":"891"},"Update the dependencies array to be: [date, historyDate, setDate]",{"range":"892","text":"893"},"Update the dependencies array to be: [currentPage, getChurchMember, keyword, memberData.length, refresh]",{"range":"894","text":"895"},"Update the dependencies array to be: [getChurchMember]",{"range":"896","text":"897"},"Update the dependencies array to be: [debounceCallback, getChurchMember, keyword, maxPage, setMaxPage]",{"range":"898","text":"899"},"Update the dependencies array to be: [account_id, clickedAccountList]",{"range":"900","text":"901"},{"range":"902","text":"895"},{"range":"903","text":"897"},{"range":"904","text":"899"},"Update the dependencies array to be: [errorNavigator, refresh]",{"range":"905","text":"906"},"Update the dependencies array to be: [scheduleData, setMaxPage]",{"range":"907","text":"908"},"Update the dependencies array to be: [year, month, refresh, errorNavigator]",{"range":"909","text":"910"},"Update the dependencies array to be: [findLocationSchedule, weekSchedule]",{"range":"911","text":"912"},"Update the dependencies array to be: [schedule, setEndTime, setStartTime]",{"range":"913","text":"914"},"Update the dependencies array to be: [schedule, setEndDate, setStartDate]",{"range":"915","text":"916"},"Update the dependencies array to be: [order, isTyping, index, changeIndex]",{"range":"917","text":"918"},[4399,4401],"[errorNavigator]",[4485,4509],"[dispatch, id, navigate, password]",[2697,2706],"[currentPage, errorNavigator, refresh, setMaxPage]",[2985,2998],"[currentPage, getNoticePage]",[2608,2610],[4085,4087],[4486,4495],[4774,4787],"[currentPage, getPastorPage]",[4570,4579],[4862,4875],"[currentPage, getHistoryPage]",[2869,2878],[3157,3170],"[currentPage, getWeeklyPage]",[3479,3481],[5754,5766],"[movePastor, onDrop, pastorData]",[2291,2313],"[changeDate, historyDate, index, isValid]",[2385,2391],"[date, historyDate, setDate]",[3192,3201],"[currentPage, getChurchMember, keyword, memberData.length, refresh]",[3354,3356],"[getChurchMember]",[3513,3522],"[debounceCallback, getChurchMember, keyword, maxPage, setMaxPage]",[1172,1192],"[account_id, clickedAccountList]",[3762,3771],[3924,3926],[4083,4092],[3840,3849],"[errorNavigator, refresh]",[3939,3953],"[scheduleData, setMaxPage]",[1888,1910],"[year, month, refresh, errorNavigator]",[5317,5331],"[findLocationSchedule, weekSchedule]",[5910,5920],"[schedule, setEndTime, setStartTime]",[4641,4651],"[schedule, setEndDate, setStartDate]",[2228,2245],"[order, isTyping, index, changeIndex]"]