{"ast":null,"code":"var _jsxFileName = \"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-schedule/calendar/view/week.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DayContainer = styled.div`\n  width: 128px;\n  height: 26px;\n`;\n_c = DayContainer;\nconst WeekDateContainer = styled.div`\n  height: 30px;\n  display: flex;\n  flex-direction: row;\n`;\n_c2 = WeekDateContainer;\nconst WeekContentContainer = styled.div`\n  height: 94px;\n`;\n_c3 = WeekContentContainer;\nconst DateText = styled.text`\n  font-family: 'Spoqa Han Sans Neo';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n`;\n_c4 = DateText;\nconst TestBox = styled.div`\nbox-sizing: border-box;\nalign-items: center;\ngap: 8px;\nposition: absolute\n\nwidth: 124px;\nheight: 26px;\nleft: calc(50% - 124px/2);\ntop: 8px;\n\nbackground: #FFFFFF;\n\nborder: 1px solid #5500DD;\nborder - radius: 8px;\n`;\n_c5 = TestBox;\nconst test_calendar = [{\n  title: 'title1',\n  content: 'content2',\n  start_date: '2023-02-28',\n  end_date: ''\n}, {\n  title: 'title2',\n  content: 'content2',\n  start_date: '2023-03-01',\n  end_date: '2023-03-05'\n}, {\n  title: 'title3',\n  content: 'content4',\n  start_date: '2023-03-01',\n  end_date: ''\n}];\nconst Day = props => {\n  const {\n    index,\n    date,\n    isCurrentMonth,\n    year,\n    month\n  } = props;\n  return /*#__PURE__*/_jsxDEV(DayContainer, {\n    children: /*#__PURE__*/_jsxDEV(DateText, {\n      style: {\n        color: !isCurrentMonth ? '#c1c2c3' : index === 0 ? '#D40030' : '#000000'\n      },\n      children: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_c6 = Day;\nexport const WeekView = props => {\n  const {\n    week,\n    year,\n    month\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(WeekDateContainer, {\n      children: week && week.map((day, index) => {\n        return /*#__PURE__*/_jsxDEV(Day, {\n          index: index,\n          date: day.date,\n          year: year,\n          month: month,\n          isCurrentMonth: day.isCurrentMonth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeekContentContainer, {\n      children: [/*#__PURE__*/_jsxDEV(TestBox, {\n        children: \"123\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TestBox, {\n        style: {\n          marginLeft: '130px'\n        },\n        children: \"123\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TestBox, {\n        children: \"123\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c7 = WeekView;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"DayContainer\");\n$RefreshReg$(_c2, \"WeekDateContainer\");\n$RefreshReg$(_c3, \"WeekContentContainer\");\n$RefreshReg$(_c4, \"DateText\");\n$RefreshReg$(_c5, \"TestBox\");\n$RefreshReg$(_c6, \"Day\");\n$RefreshReg$(_c7, \"WeekView\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","DayContainer","div","_c","WeekDateContainer","_c2","WeekContentContainer","_c3","DateText","text","_c4","TestBox","_c5","test_calendar","title","content","start_date","end_date","Day","props","index","date","isCurrentMonth","year","month","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","_c6","WeekView","week","map","day","marginLeft","_c7","$RefreshReg$"],"sources":["/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-schedule/calendar/view/week.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Week } from '../../../../../hooks/useMonth'\nimport styled from 'styled-components'\n\nconst DayContainer = styled.div`\n  width: 128px;\n  height: 26px;\n`\n\nconst WeekDateContainer = styled.div`\n  height: 30px;\n  display: flex;\n  flex-direction: row;\n`\nconst WeekContentContainer = styled.div`\n  height: 94px;\n`\nconst DateText = styled.text`\n  font-family: 'Spoqa Han Sans Neo';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n`\n\nconst TestBox = styled.div`\nbox-sizing: border-box;\nalign-items: center;\ngap: 8px;\nposition: absolute\n\nwidth: 124px;\nheight: 26px;\nleft: calc(50% - 124px/2);\ntop: 8px;\n\nbackground: #FFFFFF;\n\nborder: 1px solid #5500DD;\nborder - radius: 8px;\n`\ninterface DayProps {\n  index: number\n  date: number\n  year: number\n  month: number\n  isCurrentMonth: boolean\n}\ninterface WeekViewProps {\n  week: Array<Week>\n  year: number\n  month: number\n}\n\nconst test_calendar = [\n  {\n    title: 'title1',\n    content: 'content2',\n    start_date: '2023-02-28',\n    end_date: '',\n  },\n  {\n    title: 'title2',\n    content: 'content2',\n    start_date: '2023-03-01',\n    end_date: '2023-03-05',\n  },\n  {\n    title: 'title3',\n    content: 'content4',\n    start_date: '2023-03-01',\n    end_date: '',\n  },\n]\n\nconst Day = (props: DayProps) => {\n  const { index, date, isCurrentMonth, year, month } = props\n  return (\n    <DayContainer>\n      <DateText\n        style={{\n          color: !isCurrentMonth\n            ? '#c1c2c3'\n            : index === 0\n            ? '#D40030'\n            : '#000000',\n        }}\n      >\n        {date}\n      </DateText>\n    </DayContainer>\n  )\n}\n\nexport const WeekView = (props: WeekViewProps) => {\n  const { week, year, month } = props\n\n  return (\n    <>\n      <WeekDateContainer>\n        {week &&\n          week.map((day, index) => {\n            return (\n              <Day\n                index={index}\n                date={day.date}\n                year={year}\n                month={month}\n                isCurrentMonth={day.isCurrentMonth}\n              />\n            )\n          })}\n      </WeekDateContainer>\n\n      <WeekContentContainer>\n        <TestBox>123</TestBox>\n        <TestBox style={{ marginLeft: '130px' }}>123</TestBox>\n        <TestBox>123</TestBox>\n      </WeekContentContainer>\n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}