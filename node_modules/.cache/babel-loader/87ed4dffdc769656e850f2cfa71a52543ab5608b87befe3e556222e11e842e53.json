{"ast":null,"code":"import { instance } from '..';\nexport const getMember = async (offset, keyword) => {\n  try {\n    const response = await instance.get('administrators/churchs/member/', {\n      params: {\n        offset,\n        keyword\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const kickOffMember = async member_list => {\n  const formData = new FormData();\n  member_list.forEach(member_id => {\n    formData.append('member_list', member_id);\n  });\n  if (member_list.length !== 0) {\n    try {\n      const response = await instance.patch('administrators/churchs/member/kick_out/', formData);\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  return;\n};\nexport const getConfirmMember = async (offset, keyword) => {\n  try {\n    const response = await instance.get('administrators/churchs/confirm/member/', {\n      params: {\n        offset,\n        keyword\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const patchConfirmMember = async (member_list, member_state) => {\n  const formData = new FormData();\n  member_list.forEach(member_id => {\n    formData.append('member_list', member_id);\n  });\n  member_state && formData.append('member_state', member_state);\n  if (member_list.length !== 0) {\n    try {\n      const response = await instance.patch('administrators/churchs/confirm/member/', formData);\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  return;\n};","map":{"version":3,"names":["instance","getMember","offset","keyword","response","get","params","data","error","console","kickOffMember","member_list","formData","FormData","forEach","member_id","append","length","patch","getConfirmMember","patchConfirmMember","member_state"],"sources":["/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/api/admin-member/index.tsx"],"sourcesContent":["import { instance } from '..'\n\nexport const getMember = async (offset: number, keyword: string) => {\n  try {\n    const response = await instance.get('administrators/churchs/member/', {\n      params: { offset, keyword },\n    })\n    return response.data\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const kickOffMember = async (member_list: Array<string>) => {\n  const formData = new FormData()\n  member_list.forEach(member_id => {\n    formData.append('member_list', member_id)\n  })\n  if (member_list.length !== 0) {\n    try {\n      const response = await instance.patch(\n        'administrators/churchs/member/kick_out/',\n        formData\n      )\n      return response.data\n    } catch (error) {\n      console.error(error)\n    }\n  }\n  return\n}\n\nexport const getConfirmMember = async (offset: number, keyword: string) => {\n  try {\n    const response = await instance.get(\n      'administrators/churchs/confirm/member/',\n      {\n        params: { offset, keyword },\n      }\n    )\n    return response.data\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const patchConfirmMember = async (\n  member_list: Array<string>,\n  member_state: string\n) => {\n  const formData = new FormData()\n  member_list.forEach(member_id => {\n    formData.append('member_list', member_id)\n  })\n  member_state && formData.append('member_state', member_state)\n  if (member_list.length !== 0) {\n    try {\n      const response = await instance.patch(\n        'administrators/churchs/confirm/member/',\n        formData\n      )\n      return response.data\n    } catch (error) {\n      console.error(error)\n    }\n  }\n  return\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,IAAI;AAE7B,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOC,MAAc,EAAEC,OAAe,KAAK;EAClE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,GAAG,CAAC,gCAAgC,EAAE;MACpEC,MAAM,EAAE;QAAEJ,MAAM;QAAEC;MAAQ;IAC5B,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,MAAOC,WAA0B,IAAK;EACjE,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;EAC/BF,WAAW,CAACG,OAAO,CAACC,SAAS,IAAI;IAC/BH,QAAQ,CAACI,MAAM,CAAC,aAAa,EAAED,SAAS,CAAC;EAC3C,CAAC,CAAC;EACF,IAAIJ,WAAW,CAACM,MAAM,KAAK,CAAC,EAAE;IAC5B,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMJ,QAAQ,CAACkB,KAAK,CACnC,yCAAyC,EACzCN,QAAQ,CACT;MACD,OAAOR,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF;EACA;AACF,CAAC;AAED,OAAO,MAAMW,gBAAgB,GAAG,MAAAA,CAAOjB,MAAc,EAAEC,OAAe,KAAK;EACzE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,GAAG,CACjC,wCAAwC,EACxC;MACEC,MAAM,EAAE;QAAEJ,MAAM;QAAEC;MAAQ;IAC5B,CAAC,CACF;IACD,OAAOC,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC;AAED,OAAO,MAAMY,kBAAkB,GAAG,MAAAA,CAChCT,WAA0B,EAC1BU,YAAoB,KACjB;EACH,MAAMT,QAAQ,GAAG,IAAIC,QAAQ,EAAE;EAC/BF,WAAW,CAACG,OAAO,CAACC,SAAS,IAAI;IAC/BH,QAAQ,CAACI,MAAM,CAAC,aAAa,EAAED,SAAS,CAAC;EAC3C,CAAC,CAAC;EACFM,YAAY,IAAIT,QAAQ,CAACI,MAAM,CAAC,cAAc,EAAEK,YAAY,CAAC;EAC7D,IAAIV,WAAW,CAACM,MAAM,KAAK,CAAC,EAAE;IAC5B,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMJ,QAAQ,CAACkB,KAAK,CACnC,wCAAwC,EACxCN,QAAQ,CACT;MACD,OAAOR,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF;EACA;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}