{"ast":null,"code":"import { instance } from '..';\nexport const getPastor = async offset => {\n  try {\n    const response = await instance.get('administrators/churchs/pastor/', {\n      params: {\n        offset\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getPastorNoLimit = async () => {\n  try {\n    const response = await instance.get('administrators/churchs/pastor/', {\n      params: {\n        limit: 500\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const createChurchPastors = async (pastor_list, image_list) => {\n  const formData = new FormData();\n  pastor_list.forEach(pastor => {\n    formData.append('pastor_list', JSON.stringify(pastor));\n  });\n  image_list.forEach(file => {\n    formData.append('image_list', file);\n  });\n  try {\n    const response = await instance.post('administrators/churchs/pastor/', formData);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const patchChurchPastor = async (church_pastor_id, name, role, image) => {\n  const formData = new FormData();\n  image.length !== 0 && typeof image[0] === typeof true ? formData.append('is_delete_image', 'false') : formData.append('image', image);\n  church_pastor_id !== undefined && formData.append('church_pastor_id', church_pastor_id);\n  name !== undefined && formData.append('name', name);\n  role !== undefined && formData.append('role', role);\n  try {\n    const response = await instance.patch('administrators/churchs/pastor/', formData);\n    // console.log(response.data)\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const deleteChurchPastor = async church_pastor_id => {\n  const formData = new FormData();\n  church_pastor_id !== undefined && formData.append('church_pastor_id', church_pastor_id);\n  try {\n    const response = await instance.post('administrators/churchs/pastor/delete/', formData);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const patchChurchPastorOrder = async (church_pastor_id, index) => {\n  const formData = new FormData();\n  formData.append('church_pastor_id', church_pastor_id);\n  formData.append('index', index.toString());\n  try {\n    const response = await instance.post('administrators/churchs/pastor/change_order/', formData);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};","map":{"version":3,"names":["instance","getPastor","offset","response","get","params","data","error","console","getPastorNoLimit","limit","createChurchPastors","pastor_list","image_list","formData","FormData","forEach","pastor","append","JSON","stringify","file","post","patchChurchPastor","church_pastor_id","name","role","image","length","undefined","patch","deleteChurchPastor","patchChurchPastorOrder","index","toString"],"sources":["/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/api/admin-pastor/index.tsx"],"sourcesContent":["import { instance } from '..'\n\nexport const getPastor = async (offset: number) => {\n  try {\n    const response = await instance.get('administrators/churchs/pastor/', {\n      params: { offset },\n    })\n    return response.data\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const getPastorNoLimit = async () => {\n  try {\n    const response = await instance.get('administrators/churchs/pastor/', {\n      params: { limit: 500 },\n    })\n    return response.data\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const createChurchPastors = async (\n  pastor_list: Array<any>,\n  image_list: Array<any>\n) => {\n  const formData = new FormData()\n  pastor_list.forEach(pastor => {\n    formData.append('pastor_list', JSON.stringify(pastor))\n  })\n  image_list.forEach(file => {\n    formData.append('image_list', file)\n  })\n\n  try {\n    const response = await instance.post(\n      'administrators/churchs/pastor/',\n      formData\n    )\n    return response.data\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const patchChurchPastor = async (\n  church_pastor_id: string | undefined,\n  name: string | undefined,\n  role: string | undefined,\n  image: any\n) => {\n  const formData = new FormData()\n  image.length !== 0 && typeof image[0] === typeof true\n    ? formData.append('is_delete_image', 'false')\n    : formData.append('image', image)\n  church_pastor_id !== undefined &&\n    formData.append('church_pastor_id', church_pastor_id)\n  name !== undefined && formData.append('name', name)\n  role !== undefined && formData.append('role', role)\n\n  try {\n    const response = await instance.patch(\n      'administrators/churchs/pastor/',\n      formData\n    )\n    // console.log(response.data)\n    return response.data\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const deleteChurchPastor = async (\n  church_pastor_id: string | undefined\n) => {\n  const formData = new FormData()\n  church_pastor_id !== undefined &&\n    formData.append('church_pastor_id', church_pastor_id)\n  try {\n    const response = await instance.post(\n      'administrators/churchs/pastor/delete/',\n      formData\n    )\n    return response.data\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const patchChurchPastorOrder = async (\n  church_pastor_id: string,\n  index: number\n) => {\n  const formData = new FormData()\n  formData.append('church_pastor_id', church_pastor_id)\n  formData.append('index', index.toString())\n  try {\n    const response = await instance.post(\n      'administrators/churchs/pastor/change_order/',\n      formData\n    )\n    return response.data\n  } catch (error) {\n    console.error(error)\n  }\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,IAAI;AAE7B,OAAO,MAAMC,SAAS,GAAG,MAAOC,MAAc,IAAK;EACjD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAACI,GAAG,CAAC,gCAAgC,EAAE;MACpEC,MAAM,EAAE;QAAEH;MAAO;IACnB,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC;AAED,OAAO,MAAME,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,QAAQ,CAACI,GAAG,CAAC,gCAAgC,EAAE;MACpEC,MAAM,EAAE;QAAEK,KAAK,EAAE;MAAI;IACvB,CAAC,CAAC;IACF,OAAOP,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC;AAED,OAAO,MAAMI,mBAAmB,GAAG,MAAAA,CACjCC,WAAuB,EACvBC,UAAsB,KACnB;EACH,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;EAC/BH,WAAW,CAACI,OAAO,CAACC,MAAM,IAAI;IAC5BH,QAAQ,CAACI,MAAM,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACH,MAAM,CAAC,CAAC;EACxD,CAAC,CAAC;EACFJ,UAAU,CAACG,OAAO,CAACK,IAAI,IAAI;IACzBP,QAAQ,CAACI,MAAM,CAAC,YAAY,EAAEG,IAAI,CAAC;EACrC,CAAC,CAAC;EAEF,IAAI;IACF,MAAMlB,QAAQ,GAAG,MAAMH,QAAQ,CAACsB,IAAI,CAClC,gCAAgC,EAChCR,QAAQ,CACT;IACD,OAAOX,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC;AAED,OAAO,MAAMgB,iBAAiB,GAAG,MAAAA,CAC/BC,gBAAoC,EACpCC,IAAwB,EACxBC,IAAwB,EACxBC,KAAU,KACP;EACH,MAAMb,QAAQ,GAAG,IAAIC,QAAQ,EAAE;EAC/BY,KAAK,CAACC,MAAM,KAAK,CAAC,IAAI,OAAOD,KAAK,CAAC,CAAC,CAAC,KAAK,OAAO,IAAI,GACjDb,QAAQ,CAACI,MAAM,CAAC,iBAAiB,EAAE,OAAO,CAAC,GAC3CJ,QAAQ,CAACI,MAAM,CAAC,OAAO,EAAES,KAAK,CAAC;EACnCH,gBAAgB,KAAKK,SAAS,IAC5Bf,QAAQ,CAACI,MAAM,CAAC,kBAAkB,EAAEM,gBAAgB,CAAC;EACvDC,IAAI,KAAKI,SAAS,IAAIf,QAAQ,CAACI,MAAM,CAAC,MAAM,EAAEO,IAAI,CAAC;EACnDC,IAAI,KAAKG,SAAS,IAAIf,QAAQ,CAACI,MAAM,CAAC,MAAM,EAAEQ,IAAI,CAAC;EAEnD,IAAI;IACF,MAAMvB,QAAQ,GAAG,MAAMH,QAAQ,CAAC8B,KAAK,CACnC,gCAAgC,EAChChB,QAAQ,CACT;IACD;IACA,OAAOX,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC;AAED,OAAO,MAAMwB,kBAAkB,GAAG,MAChCP,gBAAoC,IACjC;EACH,MAAMV,QAAQ,GAAG,IAAIC,QAAQ,EAAE;EAC/BS,gBAAgB,KAAKK,SAAS,IAC5Bf,QAAQ,CAACI,MAAM,CAAC,kBAAkB,EAAEM,gBAAgB,CAAC;EACvD,IAAI;IACF,MAAMrB,QAAQ,GAAG,MAAMH,QAAQ,CAACsB,IAAI,CAClC,uCAAuC,EACvCR,QAAQ,CACT;IACD,OAAOX,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC;AAED,OAAO,MAAMyB,sBAAsB,GAAG,MAAAA,CACpCR,gBAAwB,EACxBS,KAAa,KACV;EACH,MAAMnB,QAAQ,GAAG,IAAIC,QAAQ,EAAE;EAC/BD,QAAQ,CAACI,MAAM,CAAC,kBAAkB,EAAEM,gBAAgB,CAAC;EACrDV,QAAQ,CAACI,MAAM,CAAC,OAAO,EAAEe,KAAK,CAACC,QAAQ,EAAE,CAAC;EAC1C,IAAI;IACF,MAAM/B,QAAQ,GAAG,MAAMH,QAAQ,CAACsB,IAAI,CAClC,6CAA6C,EAC7CR,QAAQ,CACT;IACD,OAAOX,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}