{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nconst baseURL = 'http://dev-api.jooda.org/api/v1/';\n// const baseURL = 'http://localhost:8000/api/v1/'\n// const baseURL = 'https://api.jooda.org/api/v1/'\n\nexport const instance = axios.create({\n  baseURL\n});\n_s(instance.interceptors.response.use(response => {\n  return response;\n}, _s(error => {\n  _s();\n  if (error.response.data.error_code === 403) {\n    const navigate = useNavigate();\n    navigate('/Error');\n  }\n  return Promise.reject(error);\n}, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n})), \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\nexport const setAuthToken = token => {\n  localStorage.setItem('token', token);\n  instance.defaults.headers.common['Authorization'] = token;\n};\nexport const LogIn = async (idData, pwData) => {\n  try {\n    const response = await instance.post('administrators/accounts/login/', {\n      id: idData,\n      password: pwData\n    });\n    setAuthToken(response.data.payload.admin_account_info.authorization_token);\n    return response.data;\n  } catch (error) {\n    console.log(error.response.data.error_code);\n  }\n};\n_c = LogIn;\nvar _c;\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"names":["axios","useNavigate","baseURL","instance","create","_s","interceptors","response","use","error","data","error_code","navigate","Promise","reject","setAuthToken","token","localStorage","setItem","defaults","headers","common","LogIn","idData","pwData","post","id","password","payload","admin_account_info","authorization_token","console","log","_c","$RefreshReg$"],"sources":["/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/api/index.tsx"],"sourcesContent":["import axios from 'axios'\nimport { useNavigate } from 'react-router-dom'\n\nconst baseURL = 'http://dev-api.jooda.org/api/v1/'\n// const baseURL = 'http://localhost:8000/api/v1/'\n// const baseURL = 'https://api.jooda.org/api/v1/'\n\nexport const instance = axios.create({\n  baseURL,\n})\n\ninstance.interceptors.response.use(\n  response => {\n    return response\n  },\n  error => {\n    if (error.response.data.error_code === 403) {\n      const navigate = useNavigate()\n      navigate('/Error')\n    }\n    return Promise.reject(error)\n  }\n)\n\nexport const setAuthToken = (token: string): void => {\n  localStorage.setItem('token', token)\n  instance.defaults.headers.common['Authorization'] = token\n}\n\nexport const LogIn = async (idData: string, pwData: string) => {\n  try {\n    const response = await instance.post('administrators/accounts/login/', {\n      id: idData,\n      password: pwData,\n    })\n    setAuthToken(response.data.payload.admin_account_info.authorization_token)\n\n    return response.data\n  } catch (error: any) {\n    console.log(error.response.data.error_code)\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,OAAO,GAAG,kCAAkC;AAClD;AACA;;AAEA,OAAO,MAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAM,CAAC;EACnCF;AACF,CAAC,CAAC;AAEFG,EAAA,CAAAF,QAAQ,CAACG,YAAY,CAACC,QAAQ,CAACC,GAAG,CAChCD,QAAQ,IAAI;EACV,OAAOA,QAAQ;AACjB,CAAC,EAAAF,EAAA,CACDI,KAAK,IAAI;EAAAJ,EAAA;EACP,IAAII,KAAK,CAACF,QAAQ,CAACG,IAAI,CAACC,UAAU,KAAK,GAAG,EAAE;IAC1C,MAAMC,QAAQ,GAAGX,WAAW,EAAE;IAC9BW,QAAQ,CAAC,QAAQ,CAAC;EACpB;EACA,OAAOC,OAAO,CAACC,MAAM,CAACL,KAAK,CAAC;AAC9B,CAAC;EAAA,QAJoBR,WAAW;AAAA,GAKjC;EAAA,QALsBA,WAAW;AAAA;AAOlC,OAAO,MAAMc,YAAY,GAAIC,KAAa,IAAW;EACnDC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;EACpCb,QAAQ,CAACgB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAGL,KAAK;AAC3D,CAAC;AAED,OAAO,MAAMM,KAAK,GAAG,MAAAA,CAAOC,MAAc,EAAEC,MAAc,KAAK;EAC7D,IAAI;IACF,MAAMjB,QAAQ,GAAG,MAAMJ,QAAQ,CAACsB,IAAI,CAAC,gCAAgC,EAAE;MACrEC,EAAE,EAAEH,MAAM;MACVI,QAAQ,EAAEH;IACZ,CAAC,CAAC;IACFT,YAAY,CAACR,QAAQ,CAACG,IAAI,CAACkB,OAAO,CAACC,kBAAkB,CAACC,mBAAmB,CAAC;IAE1E,OAAOvB,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOD,KAAU,EAAE;IACnBsB,OAAO,CAACC,GAAG,CAACvB,KAAK,CAACF,QAAQ,CAACG,IAAI,CAACC,UAAU,CAAC;EAC7C;AACF,CAAC;AAAAsB,EAAA,GAZYX,KAAK;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}