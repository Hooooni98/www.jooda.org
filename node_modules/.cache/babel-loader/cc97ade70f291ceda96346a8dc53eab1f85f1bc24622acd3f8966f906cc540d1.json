{"ast":null,"code":"var _jsxFileName = \"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/error-pages/index.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLocation } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ErrorPage = () => {\n  _s();\n  const error_code = useLocation().state;\n  console.log(403 === error_code);\n  const title = 403 === error_code ? '로그인 정보가 만료되었어요' : 404 === error_code ? '잘못된 접근이에요' : '알수없는 에러가 발생했어요';\n  const subTitle = 403 === error_code ? '로그인 정보가 만료되었어요' : 404 === error_code ? '잘못된 접근이에요' : '알수없는 에러가 발생했어요';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Error: Token not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please log in again.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(ErrorPage, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n  return [useLocation];\n});\n_c = ErrorPage;\nexport default ErrorPage;\nvar _c;\n$RefreshReg$(_c, \"ErrorPage\");","map":{"version":3,"names":["React","useLocation","jsxDEV","_jsxDEV","ErrorPage","_s","error_code","state","console","log","title","subTitle","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/error-pages/index.tsx"],"sourcesContent":["import React from 'react'\nimport { useLocation } from 'react-router'\n\nconst ErrorPage = () => {\n  const error_code = useLocation().state\n  console.log(403 === error_code)\n  const title =\n    403 === error_code\n      ? '로그인 정보가 만료되었어요'\n      : 404 === error_code\n      ? '잘못된 접근이에요'\n      : '알수없는 에러가 발생했어요'\n  const subTitle =\n    403 === error_code\n      ? '로그인 정보가 만료되었어요'\n      : 404 === error_code\n      ? '잘못된 접근이에요'\n      : '알수없는 에러가 발생했어요'\n  return (\n    <div>\n      <h1>Error: Token not found</h1>\n      <p>Please log in again.</p>\n    </div>\n  )\n}\n\nexport default ErrorPage\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,UAAU,GAAGL,WAAW,EAAE,CAACM,KAAK;EACtCC,OAAO,CAACC,GAAG,CAAC,GAAG,KAAKH,UAAU,CAAC;EAC/B,MAAMI,KAAK,GACT,GAAG,KAAKJ,UAAU,GACd,gBAAgB,GAChB,GAAG,KAAKA,UAAU,GAClB,WAAW,GACX,gBAAgB;EACtB,MAAMK,QAAQ,GACZ,GAAG,KAAKL,UAAU,GACd,gBAAgB,GAChB,GAAG,KAAKA,UAAU,GAClB,WAAW,GACX,gBAAgB;EACtB,oBACEH,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC/Bb,OAAA;MAAAS,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACvB;AAEV,CAAC;AAAAX,EAAA,CArBKD,SAAS;EAAA,QACMH,WAAW;AAAA;AAAAgB,EAAA,GAD1Bb,SAAS;AAuBf,eAAeA,SAAS;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}