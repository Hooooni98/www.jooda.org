{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from 'react';\nexport const useMonth = () => {\n  _s();\n  const date = new Date();\n  const [year, setYear] = useState(date.getFullYear());\n  const [month, setMonth] = useState(date.getMonth() + 1);\n  const [weekList, setWeekList] = useState();\n  const getWeekList = useCallback(() => {\n    let weekList = [];\n    var firstDay = new Date(year, month - 1, 1).getDay();\n    var lastDay = new Date(year, month, 0).getDate();\n    var beforeMonthLastDay = new Date(year, month - 1, 0).getDate();\n    var weekCount = Math.ceil((lastDay + firstDay) / 7);\n    var lastDate = 0;\n    for (let week = 0; week < weekCount; week++) {\n      var week_list = [];\n      if (week === 0) {\n        for (let date = firstDay - 1; date >= 0; date--) {\n          week_list.push({\n            date: beforeMonthLastDay - date,\n            isCurrentMonth: false\n          });\n        }\n        for (let date = 1; date <= 7 - firstDay; date++) {\n          week_list.push({\n            date: date,\n            isCurrentMonth: true\n          });\n        }\n        lastDate = 7 - firstDay;\n      } else {\n        for (let date = 1; date <= 7; date++) {\n          week_list.push(date + lastDate <= lastDay ? date + lastDate : date + lastDate - lastDay);\n        }\n        lastDate = 7 + lastDate;\n      }\n      weekList[week] = week_list;\n    }\n    setWeekList(weekList);\n  }, [year, month]);\n  useEffect(() => {\n    getWeekList();\n  }, [year, month, getWeekList]);\n  return {\n    weekList,\n    year,\n    month,\n    setYear,\n    setMonth\n  };\n};\n_s(useMonth, \"Gs6DdZlbiRSEJNfCSFhtHiefSNg=\");","map":{"version":3,"names":["useCallback","useEffect","useState","useMonth","_s","date","Date","year","setYear","getFullYear","month","setMonth","getMonth","weekList","setWeekList","getWeekList","firstDay","getDay","lastDay","getDate","beforeMonthLastDay","weekCount","Math","ceil","lastDate","week","week_list","push","isCurrentMonth"],"sources":["/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/hooks/useMonth.ts"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react'\n\nexport interface Week {\n  date: number\n  isCurrentMonth: boolean\n}\n\nexport const useMonth = () => {\n  const date = new Date()\n  const [year, setYear] = useState(date.getFullYear())\n  const [month, setMonth] = useState(date.getMonth() + 1)\n  const [weekList, setWeekList] = useState<any>()\n\n  const getWeekList = useCallback(() => {\n    let weekList: Week[][] = []\n    var firstDay = new Date(year, month - 1, 1).getDay()\n    var lastDay = new Date(year, month, 0).getDate()\n    var beforeMonthLastDay = new Date(year, month - 1, 0).getDate()\n    var weekCount = Math.ceil((lastDay + firstDay) / 7)\n    var lastDate = 0\n\n    for (let week = 0; week < weekCount; week++) {\n      var week_list = []\n      if (week === 0) {\n        for (let date = firstDay - 1; date >= 0; date--) {\n          week_list.push({\n            date: beforeMonthLastDay - date,\n            isCurrentMonth: false,\n          })\n        }\n        for (let date = 1; date <= 7 - firstDay; date++) {\n          week_list.push({\n            date: date,\n            isCurrentMonth: true,\n          })\n        }\n        lastDate = 7 - firstDay\n      } else {\n        for (let date = 1; date <= 7; date++) {\n          week_list.push(\n            date + lastDate <= lastDay\n              ? date + lastDate\n              : date + lastDate - lastDay\n          )\n        }\n        lastDate = 7 + lastDate\n      }\n      weekList[week] = week_list\n    }\n    setWeekList(weekList)\n  }, [year, month])\n\n  useEffect(() => {\n    getWeekList()\n  }, [year, month, getWeekList])\n\n  return { weekList, year, month, setYear, setMonth }\n}\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,SAAS,EAAUC,QAAQ,QAAQ,OAAO;AAOhE,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,IAAI,GAAG,IAAIC,IAAI,EAAE;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAACG,IAAI,CAACI,WAAW,EAAE,CAAC;EACpD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAACG,IAAI,CAACO,QAAQ,EAAE,GAAG,CAAC,CAAC;EACvD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,EAAO;EAE/C,MAAMa,WAAW,GAAGf,WAAW,CAAC,MAAM;IACpC,IAAIa,QAAkB,GAAG,EAAE;IAC3B,IAAIG,QAAQ,GAAG,IAAIV,IAAI,CAACC,IAAI,EAAEG,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAACO,MAAM,EAAE;IACpD,IAAIC,OAAO,GAAG,IAAIZ,IAAI,CAACC,IAAI,EAAEG,KAAK,EAAE,CAAC,CAAC,CAACS,OAAO,EAAE;IAChD,IAAIC,kBAAkB,GAAG,IAAId,IAAI,CAACC,IAAI,EAAEG,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAACS,OAAO,EAAE;IAC/D,IAAIE,SAAS,GAAGC,IAAI,CAACC,IAAI,CAAC,CAACL,OAAO,GAAGF,QAAQ,IAAI,CAAC,CAAC;IACnD,IAAIQ,QAAQ,GAAG,CAAC;IAEhB,KAAK,IAAIC,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGJ,SAAS,EAAEI,IAAI,EAAE,EAAE;MAC3C,IAAIC,SAAS,GAAG,EAAE;MAClB,IAAID,IAAI,KAAK,CAAC,EAAE;QACd,KAAK,IAAIpB,IAAI,GAAGW,QAAQ,GAAG,CAAC,EAAEX,IAAI,IAAI,CAAC,EAAEA,IAAI,EAAE,EAAE;UAC/CqB,SAAS,CAACC,IAAI,CAAC;YACbtB,IAAI,EAAEe,kBAAkB,GAAGf,IAAI;YAC/BuB,cAAc,EAAE;UAClB,CAAC,CAAC;QACJ;QACA,KAAK,IAAIvB,IAAI,GAAG,CAAC,EAAEA,IAAI,IAAI,CAAC,GAAGW,QAAQ,EAAEX,IAAI,EAAE,EAAE;UAC/CqB,SAAS,CAACC,IAAI,CAAC;YACbtB,IAAI,EAAEA,IAAI;YACVuB,cAAc,EAAE;UAClB,CAAC,CAAC;QACJ;QACAJ,QAAQ,GAAG,CAAC,GAAGR,QAAQ;MACzB,CAAC,MAAM;QACL,KAAK,IAAIX,IAAI,GAAG,CAAC,EAAEA,IAAI,IAAI,CAAC,EAAEA,IAAI,EAAE,EAAE;UACpCqB,SAAS,CAACC,IAAI,CACZtB,IAAI,GAAGmB,QAAQ,IAAIN,OAAO,GACtBb,IAAI,GAAGmB,QAAQ,GACfnB,IAAI,GAAGmB,QAAQ,GAAGN,OAAO,CAC9B;QACH;QACAM,QAAQ,GAAG,CAAC,GAAGA,QAAQ;MACzB;MACAX,QAAQ,CAACY,IAAI,CAAC,GAAGC,SAAS;IAC5B;IACAZ,WAAW,CAACD,QAAQ,CAAC;EACvB,CAAC,EAAE,CAACN,IAAI,EAAEG,KAAK,CAAC,CAAC;EAEjBT,SAAS,CAAC,MAAM;IACdc,WAAW,EAAE;EACf,CAAC,EAAE,CAACR,IAAI,EAAEG,KAAK,EAAEK,WAAW,CAAC,CAAC;EAE9B,OAAO;IAAEF,QAAQ;IAAEN,IAAI;IAAEG,KAAK;IAAEF,OAAO;IAAEG;EAAS,CAAC;AACrD,CAAC;AAAAP,EAAA,CAlDYD,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}