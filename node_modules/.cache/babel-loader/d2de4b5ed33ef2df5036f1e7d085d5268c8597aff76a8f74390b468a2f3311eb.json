{"ast":null,"code":"import { instance } from '../index';\nexport const getHistory = async offset => {\n  try {\n    const response = await instance.get('administrators/churchs/history/', {\n      params: {\n        offset\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const createChurchHistories = async history_list => {\n  const formData = new FormData();\n  history_list.forEach(history => {\n    formData.append('history_list', JSON.stringify(history));\n  });\n  try {\n    if (history_list.length !== 0) {\n      const response = await instance.post('administrators/churchs/history/', formData);\n      return response.data;\n    }\n    return;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const patchChurchHistories = async history_list => {\n  const formData = new FormData();\n  history_list.forEach(history => {\n    formData.append('history_list', JSON.stringify(history));\n  });\n  try {\n    if (history_list.length !== 0) {\n      const response = await instance.patch('administrators/churchs/history/', formData);\n      return response.data;\n    }\n    return;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const deleteChurchHistories = async history_id_list => {\n  const formData = new FormData();\n  history_id_list.forEach(history => {\n    formData.append('history_list', JSON.stringify(history));\n  });\n  try {\n    if (history_id_list.length !== 0) {\n      const response = await instance.post('administrators/churchs/history/delete/', formData);\n      return response.data;\n    }\n    return;\n  } catch (error) {\n    console.error(error);\n  }\n};","map":{"version":3,"names":["instance","getHistory","offset","response","get","params","data","error","console","createChurchHistories","history_list","formData","FormData","forEach","history","append","JSON","stringify","length","post","patchChurchHistories","patch","deleteChurchHistories","history_id_list"],"sources":["/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/api/admin-history/index.tsx"],"sourcesContent":["import axios from 'axios'\nimport { instance } from '../index'\n\nexport const getHistory = async (offset: number) => {\n  try {\n    const response = await instance.get('administrators/churchs/history/', {\n      params: { offset },\n    })\n    return response.data\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const createChurchHistories = async (history_list: Array<any>) => {\n  const formData = new FormData()\n  history_list.forEach(history => {\n    formData.append('history_list', JSON.stringify(history))\n  })\n  try {\n    if (history_list.length !== 0) {\n      const response = await instance.post(\n        'administrators/churchs/history/',\n        formData\n      )\n      return response.data\n    }\n    return\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const patchChurchHistories = async (history_list: Array<any>) => {\n  const formData = new FormData()\n  history_list.forEach(history => {\n    formData.append('history_list', JSON.stringify(history))\n  })\n  try {\n    if (history_list.length !== 0) {\n      const response = await instance.patch(\n        'administrators/churchs/history/',\n        formData\n      )\n      return response.data\n    }\n    return\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport const deleteChurchHistories = async (history_id_list: Array<string>) => {\n  const formData = new FormData()\n  history_id_list.forEach(history => {\n    formData.append('history_list', JSON.stringify(history))\n  })\n  try {\n    if (history_id_list.length !== 0) {\n      const response = await instance.post(\n        'administrators/churchs/history/delete/',\n        formData\n      )\n      return response.data\n    }\n    return\n  } catch (error) {\n    console.error(error)\n  }\n}\n"],"mappings":"AACA,SAASA,QAAQ,QAAQ,UAAU;AAEnC,OAAO,MAAMC,UAAU,GAAG,MAAOC,MAAc,IAAK;EAClD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAACI,GAAG,CAAC,iCAAiC,EAAE;MACrEC,MAAM,EAAE;QAAEH;MAAO;IACnB,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC;AAED,OAAO,MAAME,qBAAqB,GAAG,MAAOC,YAAwB,IAAK;EACvE,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;EAC/BF,YAAY,CAACG,OAAO,CAACC,OAAO,IAAI;IAC9BH,QAAQ,CAACI,MAAM,CAAC,cAAc,EAAEC,IAAI,CAACC,SAAS,CAACH,OAAO,CAAC,CAAC;EAC1D,CAAC,CAAC;EACF,IAAI;IACF,IAAIJ,YAAY,CAACQ,MAAM,KAAK,CAAC,EAAE;MAC7B,MAAMf,QAAQ,GAAG,MAAMH,QAAQ,CAACmB,IAAI,CAClC,iCAAiC,EACjCR,QAAQ,CACT;MACD,OAAOR,QAAQ,CAACG,IAAI;IACtB;IACA;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC;AAED,OAAO,MAAMa,oBAAoB,GAAG,MAAOV,YAAwB,IAAK;EACtE,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;EAC/BF,YAAY,CAACG,OAAO,CAACC,OAAO,IAAI;IAC9BH,QAAQ,CAACI,MAAM,CAAC,cAAc,EAAEC,IAAI,CAACC,SAAS,CAACH,OAAO,CAAC,CAAC;EAC1D,CAAC,CAAC;EACF,IAAI;IACF,IAAIJ,YAAY,CAACQ,MAAM,KAAK,CAAC,EAAE;MAC7B,MAAMf,QAAQ,GAAG,MAAMH,QAAQ,CAACqB,KAAK,CACnC,iCAAiC,EACjCV,QAAQ,CACT;MACD,OAAOR,QAAQ,CAACG,IAAI;IACtB;IACA;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC;AAED,OAAO,MAAMe,qBAAqB,GAAG,MAAOC,eAA8B,IAAK;EAC7E,MAAMZ,QAAQ,GAAG,IAAIC,QAAQ,EAAE;EAC/BW,eAAe,CAACV,OAAO,CAACC,OAAO,IAAI;IACjCH,QAAQ,CAACI,MAAM,CAAC,cAAc,EAAEC,IAAI,CAACC,SAAS,CAACH,OAAO,CAAC,CAAC;EAC1D,CAAC,CAAC;EACF,IAAI;IACF,IAAIS,eAAe,CAACL,MAAM,KAAK,CAAC,EAAE;MAChC,MAAMf,QAAQ,GAAG,MAAMH,QAAQ,CAACmB,IAAI,CAClC,wCAAwC,EACxCR,QAAQ,CACT;MACD,OAAOR,QAAQ,CAACG,IAAI;IACtB;IACA;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}