{"ast":null,"code":"import axios from \"axios\";\nconst baseURL = \"http://dev-api.jooda.org/api/v1/\";\nexport const instance = axios.create({\n  baseURL\n});\nexport const setAuthToken = token => {\n  localStorage.setItem(\"token\", token);\n  instance.defaults.headers.common[\"Authorization\"] = token;\n};\nexport const LogIn = async (idData, pwData) => {\n  try {\n    const response = await instance.post(\"administrators/accounts/login/\", {\n      id: idData,\n      password: pwData\n    });\n    setAuthToken(response.data.payload.admin_account_info.authorization_token);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n_c = LogIn;\nexport const GetChurchInfo = async () => {\n  try {\n    const response = await instance.get(\"administrators/churchs/info/\");\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n_c2 = GetChurchInfo;\nexport const RegistPastor = async () => {\n  try {\n    const response = await instance.post(\"administrators/churchs/pastor/\");\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n_c3 = RegistPastor;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LogIn\");\n$RefreshReg$(_c2, \"GetChurchInfo\");\n$RefreshReg$(_c3, \"RegistPastor\");","map":{"version":3,"names":["axios","baseURL","instance","create","setAuthToken","token","localStorage","setItem","defaults","headers","common","LogIn","idData","pwData","response","post","id","password","data","payload","admin_account_info","authorization_token","error","console","_c","GetChurchInfo","get","_c2","RegistPastor","_c3","$RefreshReg$"],"sources":["/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/api/index.tsx"],"sourcesContent":["import axios from \"axios\";\nimport React, { useEffect } from \"react\";\n\nconst baseURL = \"http://dev-api.jooda.org/api/v1/\";\n\nexport const instance = axios.create({\n  baseURL,\n});\n\nexport const setAuthToken = (token: string): void => {\n  localStorage.setItem(\"token\", token);\n  instance.defaults.headers.common[\"Authorization\"] = token;\n};\n\n\nexport const LogIn = async (idData: string, pwData: string) => {\n  try {\n    const response = await instance.post(\"administrators/accounts/login/\", {\n      id: idData,\n      password: pwData,\n    });\n    setAuthToken(response.data.payload.admin_account_info.authorization_token);\n\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const GetChurchInfo = async () => {\n  try {\n    const response = await instance.get(\"administrators/churchs/info/\");\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const RegistPastor = async () => {\n  try {\n    const response = await instance.post(\"administrators/churchs/pastor/\");\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,OAAO,GAAG,kCAAkC;AAElD,OAAO,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAM,CAAC;EACnCF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMG,YAAY,GAAIC,KAAa,IAAW;EACnDC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;EACpCH,QAAQ,CAACM,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAGL,KAAK;AAC3D,CAAC;AAGD,OAAO,MAAMM,KAAK,GAAG,MAAAA,CAAOC,MAAc,EAAEC,MAAc,KAAK;EAC7D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,gCAAgC,EAAE;MACrEC,EAAE,EAAEJ,MAAM;MACVK,QAAQ,EAAEJ;IACZ,CAAC,CAAC;IACFT,YAAY,CAACU,QAAQ,CAACI,IAAI,CAACC,OAAO,CAACC,kBAAkB,CAACC,mBAAmB,CAAC;IAE1E,OAAOP,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC;AAACE,EAAA,GAZWb,KAAK;AAclB,OAAO,MAAMc,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMZ,QAAQ,CAACwB,GAAG,CAAC,8BAA8B,CAAC;IACnE,OAAOZ,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC;AAACK,GAAA,GAPWF,aAAa;AAS1B,OAAO,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,IAAI;IACF,MAAMd,QAAQ,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,gCAAgC,CAAC;IACtE,OAAOD,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC;AAACO,GAAA,GAPWD,YAAY;AAAA,IAAAJ,EAAA,EAAAG,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}