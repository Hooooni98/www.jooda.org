{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nexport const usePage = props => {\n  _s();\n  const [maxPage, setMaxPage] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageList, setPageList] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  const isOverNine = useRef(false);\n  useEffect(() => {\n    if (maxPage < 9) {\n      setPageList([1, 2, 3, 4, 5, 6, 7, 8, 9].slice(0, maxPage));\n    } else {\n      setPageList([1, 2, 3, 4, 5, 6, 7, 8, 9]);\n      isOverNine.current = true;\n    }\n  }, [maxPage]);\n  const getPrevPage = () => {\n    if (currentPage !== 1) {\n      setCurrentPage(currentPage - 1);\n      if (isOverNine.current && pageList[0] > 1 && currentPage <= pageList[4]) {\n        setPageList([pageList[0] - 1].concat(pageList.slice(0, pageList.length - 1)));\n      }\n    }\n  };\n  const getNextPage = () => {\n    if (currentPage !== maxPage) {\n      setCurrentPage(currentPage + 1);\n      if (isOverNine.current && pageList[8] < maxPage && pageList[4] <= currentPage) {\n        setPageList(pageList.slice(1, 9).concat([pageList[8] + 1]));\n      }\n    }\n  };\n  const clickPage = index => {\n    if (currentPage === index) {\n      return;\n    }\n    if (!isOverNine.current && maxPage !== 0) {\n      setCurrentPage(index);\n    } else {\n      var currentMaxPage = index + 4;\n      var currentMinPage = index - 4;\n      if (maxPage < currentMaxPage) {\n        currentMinPage = currentMinPage - (currentMaxPage - maxPage);\n        currentMaxPage = maxPage;\n      } else if (currentMinPage < 1) {\n        currentMaxPage = 9;\n        currentMinPage = 1;\n      }\n      const result = [];\n      for (let i = currentMinPage; i <= currentMaxPage; i++) {\n        result.push(i);\n      }\n      setPageList(result);\n      setCurrentPage(index);\n    }\n  };\n  return {\n    pageList,\n    currentPage,\n    maxPage,\n    getPrevPage,\n    getNextPage,\n    clickPage,\n    setMaxPage\n  };\n};\n_s(usePage, \"ZA33XKkKMdiOhTMQmBTqvIJBzME=\");","map":{"version":3,"names":["useEffect","useRef","useState","usePage","props","_s","maxPage","setMaxPage","currentPage","setCurrentPage","pageList","setPageList","isOverNine","slice","current","getPrevPage","concat","length","getNextPage","clickPage","index","currentMaxPage","currentMinPage","result","i","push"],"sources":["/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/hooks/usePage.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react'\n\nexport const usePage = (props: any) => {\n  const [maxPage, setMaxPage] = useState(0)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [pageList, setPageList] = useState<Array<number>>([\n    1, 2, 3, 4, 5, 6, 7, 8, 9,\n  ])\n  const isOverNine = useRef<boolean>(false)\n\n  useEffect(() => {\n    if (maxPage < 9) {\n      setPageList([1, 2, 3, 4, 5, 6, 7, 8, 9].slice(0, maxPage))\n    } else {\n      setPageList([1, 2, 3, 4, 5, 6, 7, 8, 9])\n      isOverNine.current = true\n    }\n  }, [maxPage])\n\n  const getPrevPage = () => {\n    if (currentPage !== 1) {\n      setCurrentPage(currentPage - 1)\n      if (isOverNine.current && pageList[0] > 1 && currentPage <= pageList[4]) {\n        setPageList(\n          [pageList[0] - 1].concat(pageList.slice(0, pageList.length - 1))\n        )\n      }\n    }\n  }\n  const getNextPage = () => {\n    if (currentPage !== maxPage) {\n      setCurrentPage(currentPage + 1)\n      if (\n        isOverNine.current &&\n        pageList[8] < maxPage &&\n        pageList[4] <= currentPage\n      ) {\n        setPageList(pageList.slice(1, 9).concat([pageList[8] + 1]))\n      }\n    }\n  }\n  const clickPage = (index: number) => {\n    if (currentPage === index) {\n      return\n    }\n    if (!isOverNine.current && maxPage !== 0) {\n      setCurrentPage(index)\n    } else {\n      var currentMaxPage = index + 4\n      var currentMinPage = index - 4\n      if (maxPage < currentMaxPage) {\n        currentMinPage = currentMinPage - (currentMaxPage - maxPage)\n        currentMaxPage = maxPage\n      } else if (currentMinPage < 1) {\n        currentMaxPage = 9\n        currentMinPage = 1\n      }\n      const result = []\n      for (let i = currentMinPage; i <= currentMaxPage; i++) {\n        result.push(i)\n      }\n      setPageList(result)\n      setCurrentPage(index)\n    }\n  }\n\n  return {\n    pageList,\n    currentPage,\n    maxPage,\n    getPrevPage,\n    getNextPage,\n    clickPage,\n    setMaxPage,\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}