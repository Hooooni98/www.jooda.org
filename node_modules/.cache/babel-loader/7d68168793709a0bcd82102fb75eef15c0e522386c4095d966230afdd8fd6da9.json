{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from 'react';\nexport const useFormatDate = () => {\n  _s();\n  var today = new Date();\n  var year = today.getFullYear().toString();\n  var month = (today.getMonth() + 1).toString();\n  month = month.length > 2 ? month : '0' + month;\n  var day = today.getDate().toString();\n  day = day.length > 2 ? day : '0' + day;\n  const [date, setDate] = useState(year + month + day);\n  const [isValid, setIsValid] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const formatTime = useCallback(() => {\n    setDate(curTime => curTime.replace(/[^0-9]/g, '').replace(/^(\\d{0,4})(\\d{0,2})(\\d{0,2})$/g, '$1-$2-$3')\n    // .replace(/(\\-{1,2})$/g, ''),\n    .replace(/(-{1,2})$/g, ''));\n  }, []);\n  useEffect(() => {\n    formatTime();\n    if (date.length === 10 && parseInt(date.slice(5, 7)) <= 12 && parseInt(date.slice(5, 7)) > 0 && parseInt(date.slice(8)) <= 31) {\n      var year = parseInt(date.slice(0, 4));\n      var month = parseInt(date.slice(5, 7));\n      if (parseInt(date.slice(6)) > new Date(year, month, 0).getDate()) {\n        setIsError(true);\n      } else {\n        setIsError(false);\n        setIsValid(true);\n      }\n    } else if (date.length === 10) {\n      setIsError(true);\n    } else {\n      setIsValid(false);\n      setIsError(false);\n    }\n  }, [date, formatTime]);\n  return {\n    date,\n    setDate,\n    isValid,\n    isError\n  };\n};\n_s(useFormatDate, \"4w8K/j5WwiGmPEVeefTJyrevXEg=\");","map":{"version":3,"names":["useCallback","useEffect","useState","useFormatDate","_s","today","Date","year","getFullYear","toString","month","getMonth","length","day","getDate","date","setDate","isValid","setIsValid","isError","setIsError","formatTime","curTime","replace","parseInt","slice"],"sources":["/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/hooks/useFormatDate.ts"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react'\n\nexport const useFormatDate = () => {\n  var today = new Date()\n  var year = today.getFullYear().toString()\n  var month = (today.getMonth() + 1).toString()\n  month = month.length > 2 ? month : '0' + month\n  var day = today.getDate().toString()\n  day = day.length > 2 ? day : '0' + day\n\n  const [date, setDate] = useState<string>(year + month + day)\n  const [isValid, setIsValid] = useState<boolean>(false)\n  const [isError, setIsError] = useState<boolean>(false)\n\n  const formatTime = useCallback(() => {\n    setDate(curTime =>\n      curTime\n        .replace(/[^0-9]/g, '')\n        .replace(/^(\\d{0,4})(\\d{0,2})(\\d{0,2})$/g, '$1-$2-$3')\n        // .replace(/(\\-{1,2})$/g, ''),\n        .replace(/(-{1,2})$/g, '')\n    )\n  }, [])\n\n  useEffect(() => {\n    formatTime()\n    if (\n      date.length === 10 &&\n      parseInt(date.slice(5, 7)) <= 12 &&\n      parseInt(date.slice(5, 7)) > 0 &&\n      parseInt(date.slice(8)) <= 31\n    ) {\n      var year = parseInt(date.slice(0, 4))\n      var month = parseInt(date.slice(5, 7))\n      if (parseInt(date.slice(6)) > new Date(year, month, 0).getDate()) {\n        setIsError(true)\n      } else {\n        setIsError(false)\n        setIsValid(true)\n      }\n    } else if (date.length === 10) {\n      setIsError(true)\n    } else {\n      setIsValid(false)\n      setIsError(false)\n    }\n  }, [date, formatTime])\n\n  return { date, setDate, isValid, isError }\n}\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAExD,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,IAAIC,KAAK,GAAG,IAAIC,IAAI,EAAE;EACtB,IAAIC,IAAI,GAAGF,KAAK,CAACG,WAAW,EAAE,CAACC,QAAQ,EAAE;EACzC,IAAIC,KAAK,GAAG,CAACL,KAAK,CAACM,QAAQ,EAAE,GAAG,CAAC,EAAEF,QAAQ,EAAE;EAC7CC,KAAK,GAAGA,KAAK,CAACE,MAAM,GAAG,CAAC,GAAGF,KAAK,GAAG,GAAG,GAAGA,KAAK;EAC9C,IAAIG,GAAG,GAAGR,KAAK,CAACS,OAAO,EAAE,CAACL,QAAQ,EAAE;EACpCI,GAAG,GAAGA,GAAG,CAACD,MAAM,GAAG,CAAC,GAAGC,GAAG,GAAG,GAAG,GAAGA,GAAG;EAEtC,MAAM,CAACE,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAASK,IAAI,GAAGG,KAAK,GAAGG,GAAG,CAAC;EAC5D,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAU,KAAK,CAAC;EACtD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAU,KAAK,CAAC;EAEtD,MAAMmB,UAAU,GAAGrB,WAAW,CAAC,MAAM;IACnCgB,OAAO,CAACM,OAAO,IACbA,OAAO,CACJC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CACtBA,OAAO,CAAC,gCAAgC,EAAE,UAAU;IACrD;IAAA,CACCA,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAC7B;EACH,CAAC,EAAE,EAAE,CAAC;EAENtB,SAAS,CAAC,MAAM;IACdoB,UAAU,EAAE;IACZ,IACEN,IAAI,CAACH,MAAM,KAAK,EAAE,IAClBY,QAAQ,CAACT,IAAI,CAACU,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,IAChCD,QAAQ,CAACT,IAAI,CAACU,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAC9BD,QAAQ,CAACT,IAAI,CAACU,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAC7B;MACA,IAAIlB,IAAI,GAAGiB,QAAQ,CAACT,IAAI,CAACU,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MACrC,IAAIf,KAAK,GAAGc,QAAQ,CAACT,IAAI,CAACU,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MACtC,IAAID,QAAQ,CAACT,IAAI,CAACU,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAInB,IAAI,CAACC,IAAI,EAAEG,KAAK,EAAE,CAAC,CAAC,CAACI,OAAO,EAAE,EAAE;QAChEM,UAAU,CAAC,IAAI,CAAC;MAClB,CAAC,MAAM;QACLA,UAAU,CAAC,KAAK,CAAC;QACjBF,UAAU,CAAC,IAAI,CAAC;MAClB;IACF,CAAC,MAAM,IAAIH,IAAI,CAACH,MAAM,KAAK,EAAE,EAAE;MAC7BQ,UAAU,CAAC,IAAI,CAAC;IAClB,CAAC,MAAM;MACLF,UAAU,CAAC,KAAK,CAAC;MACjBE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACL,IAAI,EAAEM,UAAU,CAAC,CAAC;EAEtB,OAAO;IAAEN,IAAI;IAAEC,OAAO;IAAEC,OAAO;IAAEE;EAAQ,CAAC;AAC5C,CAAC;AAAAf,EAAA,CA/CYD,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}