{"ast":null,"code":"var _jsxFileName = \"/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-schedule/calendar/view/week.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useWeek } from '../../../../../hooks/useWeek';\nimport { CalendarModal } from './patch-modal/modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DayContainer = styled.div`\n  width: 128px;\n  height: 26px;\n`;\n_c = DayContainer;\nconst WeekDateContainer = styled.div`\n  height: 30px;\n  display: flex;\n  flex-direction: row;\n`;\n_c2 = WeekDateContainer;\nconst WeekContentContainer = styled.div`\n  height: 94px;\n`;\n_c3 = WeekContentContainer;\nconst DateText = styled.text`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n`;\n_c4 = DateText;\nconst ScheduleBox = styled.div`\n  margin-top: 2px;\n  border-radius: 8px;\n  background: #5500dd;\n  position: absolute;\n  height: 26px;\n  text-align: left;\n  justify-content: center;\n  align-item: center;\n  color: #ffffff;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 26px;\n  text-align: left;\n  padding-left: 4px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  box-sizing: border-box;\n  border: 1px solid;\n`;\n_c5 = ScheduleBox;\nconst Day = props => {\n  const {\n    index,\n    date,\n    currentYear,\n    currentMonth\n  } = props;\n  return /*#__PURE__*/_jsxDEV(DayContainer, {\n    children: /*#__PURE__*/_jsxDEV(DateText, {\n      style: {\n        color: date.month !== currentMonth ? '#c1c2c3' : index === 0 ? '#D40030' : '#000000'\n      },\n      children: date.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n// const scheduleWidth = [0, 120, 248, 376, 504, 632, 760, 888]\n_c6 = Day;\nconst scheduleWidth = [0, 124, 252, 380, 508, 636, 764, 892];\nexport const WeekView = props => {\n  _s();\n  const {\n    week,\n    year,\n    month,\n    calendar_list,\n    refresh,\n    setRefresh\n  } = props;\n  const {\n    weekData\n  } = useWeek(week, calendar_list, year, month);\n  const [showModal, setShowModal] = useState(false);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const openModal = id => {\n    setShowModal(true);\n    setCurrentIndex(calendar_list.findIndex(calendar => calendar.church_calendar_id === id));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(WeekDateContainer, {\n      children: week && week.map((day, index) => {\n        return /*#__PURE__*/_jsxDEV(Day, {\n          index: index,\n          date: day,\n          currentYear: year,\n          currentMonth: month\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeekContentContainer, {\n      children: weekData && weekData.map((schedule, index) => {\n        return /*#__PURE__*/_jsxDEV(ScheduleBox, {\n          onClick: () => openModal(schedule.church_calendar_id),\n          style: {\n            marginLeft: schedule.x * 128 + 2,\n            marginTop: schedule.y * 26 + schedule.y * 2,\n            width: scheduleWidth[schedule.length],\n            height: 26,\n            backgroundColor: schedule.end_date === '' ? '#ffffff' : schedule.is_current_month ? '#5500dd' : '#D8C2F9',\n            color: schedule.end_date !== '' ? '#ffffff' : schedule.is_current_month ? '#5500dd' : '#D8C2F9',\n            borderColor: schedule.is_current_month ? '#5500dd' : '#D8C2F9'\n          },\n          children: schedule.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(CalendarModal, {\n      refresh: refresh,\n      setRefresh: setRefresh,\n      onCloseModal: () => setShowModal(false),\n      schedule: calendar_list[currentIndex]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(WeekView, \"eILk1F+RVldUmTObvxp77TxcJDY=\", false, function () {\n  return [useWeek];\n});\n_c7 = WeekView;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"DayContainer\");\n$RefreshReg$(_c2, \"WeekDateContainer\");\n$RefreshReg$(_c3, \"WeekContentContainer\");\n$RefreshReg$(_c4, \"DateText\");\n$RefreshReg$(_c5, \"ScheduleBox\");\n$RefreshReg$(_c6, \"Day\");\n$RefreshReg$(_c7, \"WeekView\");","map":{"version":3,"names":["React","useState","styled","useWeek","CalendarModal","jsxDEV","_jsxDEV","Fragment","_Fragment","DayContainer","div","_c","WeekDateContainer","_c2","WeekContentContainer","_c3","DateText","text","_c4","ScheduleBox","_c5","Day","props","index","date","currentYear","currentMonth","children","style","color","month","fileName","_jsxFileName","lineNumber","columnNumber","_c6","scheduleWidth","WeekView","_s","week","year","calendar_list","refresh","setRefresh","weekData","showModal","setShowModal","currentIndex","setCurrentIndex","openModal","id","findIndex","calendar","church_calendar_id","map","day","schedule","onClick","marginLeft","x","marginTop","y","width","length","height","backgroundColor","end_date","is_current_month","borderColor","title","onCloseModal","_c7","$RefreshReg$"],"sources":["/Users/hooni/Desktop/upten/jooda/www.jooda.org/src/admin-pages/admin-nav/admin-schedule/calendar/view/week.tsx"],"sourcesContent":["import React, { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport { Date } from '../../../../../hooks/useMonth'\nimport styled from 'styled-components'\nimport { CalendarList, useWeek } from '../../../../../hooks/useWeek'\nimport { CalendarModal } from './patch-modal/modal'\n\nconst DayContainer = styled.div`\n  width: 128px;\n  height: 26px;\n`\n\nconst WeekDateContainer = styled.div`\n  height: 30px;\n  display: flex;\n  flex-direction: row;\n`\nconst WeekContentContainer = styled.div`\n  height: 94px;\n`\nconst DateText = styled.text`\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n`\n\nconst ScheduleBox = styled.div`\n  margin-top: 2px;\n  border-radius: 8px;\n  background: #5500dd;\n  position: absolute;\n  height: 26px;\n  text-align: left;\n  justify-content: center;\n  align-item: center;\n  color: #ffffff;\n  font-family: 'Spoqa Han Sans Neo', 'Apple SD Gothic Neo';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 26px;\n  text-align: left;\n  padding-left: 4px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  box-sizing: border-box;\n  border: 1px solid;\n`\n\ninterface DayProps {\n  index: number\n  date: Date\n  currentYear: number\n  currentMonth: number\n}\ninterface WeekViewProps {\n  week: Array<Date>\n  year: number\n  month: number\n  calendar_list: Array<CalendarList>\n  refresh: boolean\n  setRefresh: Dispatch<SetStateAction<boolean>>\n}\n\nconst Day = (props: DayProps) => {\n  const { index, date, currentYear, currentMonth } = props\n  return (\n    <DayContainer>\n      <DateText\n        style={{\n          color:\n            date.month !== currentMonth\n              ? '#c1c2c3'\n              : index === 0\n                ? '#D40030'\n                : '#000000',\n        }}\n      >\n        {date.date}\n      </DateText>\n    </DayContainer>\n  )\n}\n\n// const scheduleWidth = [0, 120, 248, 376, 504, 632, 760, 888]\nconst scheduleWidth = [0, 124, 252, 380, 508, 636, 764, 892]\nexport const WeekView = (props: WeekViewProps) => {\n  const { week, year, month, calendar_list, refresh, setRefresh } = props\n  const { weekData } = useWeek(week, calendar_list, year, month)\n  const [showModal, setShowModal] = useState(false)\n  const [currentIndex, setCurrentIndex] = useState(-1)\n  const openModal = (id: string) => {\n    setShowModal(true)\n    setCurrentIndex(\n      calendar_list.findIndex(calendar => calendar.church_calendar_id === id)\n    )\n  }\n  return (\n    <>\n      <WeekDateContainer>\n        {week &&\n          week.map((day, index) => {\n            return (\n              <Day\n                key={index}\n                index={index}\n                date={day}\n                currentYear={year}\n                currentMonth={month}\n              />\n            )\n          })}\n      </WeekDateContainer>\n\n      <WeekContentContainer>\n        {weekData &&\n          weekData.map((schedule, index) => {\n            return (\n              <ScheduleBox\n                onClick={() => openModal(schedule.church_calendar_id)}\n                style={{\n                  marginLeft: schedule.x * 128 + 2,\n                  marginTop: schedule.y * 26 + schedule.y * 2,\n                  width: scheduleWidth[schedule.length],\n                  height: 26,\n                  backgroundColor:\n                    schedule.end_date === ''\n                      ? '#ffffff'\n                      : schedule.is_current_month\n                        ? '#5500dd'\n                        : '#D8C2F9',\n                  color:\n                    schedule.end_date !== ''\n                      ? '#ffffff'\n                      : schedule.is_current_month\n                        ? '#5500dd'\n                        : '#D8C2F9',\n                  borderColor: schedule.is_current_month\n                    ? '#5500dd'\n                    : '#D8C2F9',\n                }}\n              >\n                {schedule.title}\n              </ScheduleBox>\n            )\n          })}\n      </WeekContentContainer>\n\n      {showModal && (\n        <CalendarModal\n          refresh={refresh}\n          setRefresh={setRefresh}\n          onCloseModal={() => setShowModal(false)}\n          schedule={calendar_list[currentIndex]}\n        />\n      )}\n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}